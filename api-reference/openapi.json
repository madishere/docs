{
    "openapi": "3.0.0",
    "info": {
        "title": "Yes We Hack",
        "description": "Yes We Hack API documentation\n\nYou can access the YesWeHack api using a Personal Access Token.\n\nTo create a Personal Access Token, go to ***My YesWeHack*** menu under the tab ***Personal Access Token***.\n\nMore information on [YesWeHack helpcenter](https:\/\/helpcenter.yeswehack.io\/personal-access-tokens \"Personal Access Token helpcenter article\").\n\n# Authentication\n\n<SecurityDefinitions \/>\n",
        "contact": {
            "name": "API Support",
            "url": "https:\/\/api.yeswehack.com",
            "email": "support@yeswehack.com"
        },
        "version": "17.2.0",
        "x-logo": {
            "url": "https:\/\/api.yeswehack.com\/build\/images\/logo-ywh-primary.svg",
            "backgroundColor": "#FFFFFF",
            "altText": "Yes We Hack"
        }
    },
    "servers": [
        {
            "url": "https:\/\/api.yeswehack.com"
        }
    ],
    "paths": {
        "\/asm\/assets\/{assetId}\/asset-values": {
            "put": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Update an asset value",
                "description": "Update an asset value",
                "operationId": "put_api_asm_assets_update_asset_value",
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "Id of asset",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AssetValueType"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Asset value updated"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/assets\/{assetId}\/{action}": {
            "put": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Update tag asset",
                "description": "Update tag asset",
                "operationId": "put_api_asm_assets_tag",
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "Id of asset",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "action",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "tag|untag",
                            "enum": [
                                "tag",
                                "untag"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AssetTagType"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Asset tagged\/untagged"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/assets\/asset-values": {
            "put": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Update a list of asset value",
                "description": "Update a list of asset value",
                "operationId": "put_api_asm_assets_bulk_update_asset_value",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AssetValueType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Assets values updated",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/AttackSurfaceAssetResponseDto"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/AttackSurfaceAssetResponseDto"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/domains": {
            "post": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Get Domains list",
                "description": "Retrieve the list of domain assets",
                "operationId": "post_api_asm_domains_list",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 100,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AttackSurfaceDomainFilterType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of the domain",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/AttackSurfaceDomain"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/domains\/count": {
            "get": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Counter domain",
                "description": "Count total of domain",
                "operationId": "get_api_asm_domains_count",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[businessUnitSlugs][]=my-business-unit-slug&filter[businessUnitSlugs][]=my-second-business-unit-slug`",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "properties": {
                                "businessUnitSlugs": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "format": "AsmFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Count total of domain",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AttackSurfaceDomainCounter"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/domains\/{assetId}": {
            "get": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Get an asset domain",
                "description": "Get an asset domain",
                "operationId": "get_api_asm_domains_detail",
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "Id of asset",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get an asset domain",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AttackSurfaceDomain"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/domains\/findings\/count": {
            "get": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Count findings",
                "description": "Count findings by status for asset domain",
                "operationId": "get_api_asm_domains_findings_count",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[businessUnitSlugs][]=my-business-unit-slug&filter[businessUnitSlugs][]=my-second-business-unit-slug`",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "properties": {
                                "businessUnitSlugs": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "format": "AsmFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Count findings by status for asset domain",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/FindingCountersResponseDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/domains\/{slug}\/exports\/{format}": {
            "post": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Export businessUnit domains",
                "description": "Export domains list of the businessUnit to the specified format.",
                "operationId": "post_api_asm_domains_export",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the businessUnit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "csv|json|xls",
                            "enum": [
                                "csv",
                                "json",
                                "xls"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AttackSurfaceDomainFilterType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "text\/csv": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application\/vnd.ms-excel": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-BadRequest"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/domains\/{slug}\/exports": {
            "get": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Get businessUnit domain exports.",
                "description": "Get exports domain from the businessUnit.",
                "operationId": "get_api_asm_domains_export_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the businessUnit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Export"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/asm\/filters\/technologies\/{type}": {
            "get": {
                "tags": [
                    "Attack Surface Filter"
                ],
                "summary": "Technologies filter",
                "description": "Filter for technologies",
                "operationId": "get_api_asm_filters_components",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[businessUnitSlugs][]=my-business-unit-slug&filter[businessUnitSlugs][]=my-second-business-unit-slug`",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "properties": {
                                "businessUnitSlugs": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "format": "AsmFilter",
                            "default": []
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "vendors|products|names",
                            "enum": [
                                "vendors",
                                "products",
                                "names"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Technologies",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ItemsString"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/filters\/assets\/{type}": {
            "get": {
                "tags": [
                    "Attack Surface Filter"
                ],
                "summary": "Assets filter",
                "description": "Filter for assets",
                "operationId": "get_api_asm_filters_assets",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[businessUnitSlugs][]=my-business-unit-slug&filter[businessUnitSlugs][]=my-second-business-unit-slug`",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "properties": {
                                "businessUnitSlugs": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "format": "AsmFilter",
                            "default": []
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "domains|services|ports|protocol-name",
                            "enum": [
                                "domains",
                                "services",
                                "ports",
                                "protocol-name"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Different assets",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ItemsString"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/filters\/findings": {
            "get": {
                "tags": [
                    "Attack Surface Filter"
                ],
                "summary": "Finding filter",
                "description": "Filter for findings \/ CVE",
                "operationId": "get_api_asm_filters_finding",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[businessUnitSlugs][]=my-business-unit-slug&filter[businessUnitSlugs][]=my-second-business-unit-slug`",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "properties": {
                                "businessUnitSlugs": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "format": "AsmFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Findings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ItemsString"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                },
                "deprecated": true
            }
        },
        "\/asm\/filters\/assets\/tags": {
            "get": {
                "tags": [
                    "Attack Surface Filter"
                ],
                "summary": "Assets tags filter",
                "description": "Filter tags for assets",
                "operationId": "get_api_asm_filters_tags",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[businessUnitSlugs][]=my-business-unit-slug&filter[businessUnitSlugs][]=my-second-business-unit-slug&filter[assetTypes][]=DOMAIN`",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "properties": {
                                "businessUnitSlugs": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "assetTypes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "DOMAIN",
                                            "CIDR"
                                        ]
                                    }
                                }
                            },
                            "type": "object",
                            "format": "AsmFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tags",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ItemsString"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/findings": {
            "put": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Bulk update ASM finding",
                "description": "Bulk update ASM findings",
                "operationId": "put_api_asm_findings_bulk_update",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/FindingBulkUpdateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Assets values updated",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/AttackSurfaceFinding"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/AttackSurfaceFinding"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            },
            "post": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Get ASM findings list",
                "description": "Get the list of ASM findings",
                "operationId": "post_api_asm_findings_list",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AttackSurfaceFindingFilterType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Retrieve Attack Surface findings list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/AttackSurfaceFinding"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-BadRequest"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/findings\/{findingId}": {
            "get": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Get ASM finding",
                "description": "Get a ASM finding",
                "operationId": "get_api_asm_findings_get_details",
                "parameters": [
                    {
                        "name": "findingId",
                        "in": "path",
                        "description": "id of the finding",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve Attack Surface finding details",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AttackSurfaceFinding"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            },
            "put": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Update ASM finding",
                "description": "Update a ASM findings",
                "operationId": "put_api_asm_findings_update",
                "parameters": [
                    {
                        "name": "findingId",
                        "in": "path",
                        "description": "id of the finding",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/FindingUpdateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Retrieve Attack Surface finding status and create report on confirmation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AttackSurfaceFinding"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Form validation error or Bad request",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#\/components\/schemas\/validation-failed"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/bad-request"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/findings\/count": {
            "get": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Get ASM findings count",
                "description": "Get the counters of ASM findings",
                "operationId": "get_api_asm_findings_count",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[businessUnitSlugs][]=my-business-unit-slug&filter[businessUnitSlugs][]=my-second-business-unit-slug`",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "properties": {
                                "businessUnitSlugs": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "format": "AsmFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve ASM findings counters",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/FindingCountersResponseDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/findings\/count\/status": {
            "post": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Get ASM findings count by status",
                "description": "Get the status counters of ASM findings",
                "operationId": "post_api_asm_findings_count_status",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AttackSurfaceFindingFilterType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Retrieve ASM findings counters by status",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AttackSurfaceFindingStatusCounterResponseDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/findings\/{slug}\/exports\/{format}": {
            "post": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Export businessUnit findings",
                "description": "Export findings list of the businessUnit to the specified format.",
                "operationId": "post_api_asm_findings_export",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the businessUnit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "csv|json|xls",
                            "enum": [
                                "csv",
                                "json",
                                "xls"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AttackSurfaceFindingFilterType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "text\/csv": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application\/vnd.ms-excel": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-BadRequest"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/services": {
            "post": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Get ASM services list",
                "description": "Get the list of ASM services",
                "operationId": "post_api_asm_services_list",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 100,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AttackSurfaceServiceFilterType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Retrieve Attack Surface services list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/AttackSurfaceService"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/services\/{serviceId}": {
            "get": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Get Attack Surface service detail",
                "description": "Get the detail of a Attack Surface service",
                "operationId": "get_api_asm_services_details",
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "Id of service",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attack Surface service details",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AttackSurfaceService"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/services\/counters": {
            "get": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Get Attack Surface services counters",
                "description": "Get the counters of Attack Surface services",
                "operationId": "get_api_asm_services_counters",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[businessUnitSlugs][]=my-business-unit-slug&filter[businessUnitSlugs][]=my-second-business-unit-slug`",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "properties": {
                                "businessUnitSlugs": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "format": "AsmFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve Attack Surface services counters",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AttackSurfaceServiceCounters"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/services\/findings\/count": {
            "get": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Count findings",
                "description": "Count findings by status for asset service",
                "operationId": "get_api_asm_services_findings_count",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[businessUnitSlugs][]=my-business-unit-slug&filter[businessUnitSlugs][]=my-second-business-unit-slug`",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "properties": {
                                "businessUnitSlugs": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "format": "AsmFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Count findings by status for asset service",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/FindingCountersResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-BadRequest"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/services\/{slug}\/exports\/{format}": {
            "post": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Export businessUnit services",
                "description": "Export services list of the businessUnit to the specified format.",
                "operationId": "post_api_asm_services_export",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the businessUnit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "csv|json|xls",
                            "enum": [
                                "csv",
                                "json",
                                "xls"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AttackSurfaceServiceFilterType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "text\/csv": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application\/vnd.ms-excel": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-BadRequest"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/services\/{slug}\/exports": {
            "get": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Get businessUnit service exports.",
                "description": "Get exports service from the businessUnit.",
                "operationId": "get_api_asm_services_export_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the businessUnit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Export"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/asm\/technologies": {
            "post": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Get technologies list",
                "description": "Display the list of technologies who are detected in the business units with product asm",
                "operationId": "post_api_asm_technologies_list",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 100,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AttackSurfaceTechnologyFilterType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of the technologies",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/AttackSurfaceTechnology"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/technologies\/{technologyId}": {
            "get": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Get technology detail",
                "description": "Get the detail of a ASM service",
                "operationId": "get_api_asm_technologies_details",
                "parameters": [
                    {
                        "name": "technologyId",
                        "in": "path",
                        "description": "id of the technology",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Technology details",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AttackSurfaceTechnology"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/technologies\/count": {
            "get": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Get count technology",
                "description": "Get the count by name of technology",
                "operationId": "get_api_asm_technologies_counter",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[businessUnitSlugs][]=my-business-unit-slug&filter[businessUnitSlugs][]=my-second-business-unit-slug`",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "properties": {
                                "businessUnitSlugs": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "format": "AsmFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Counter technology",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AttackSurfaceTechnologyCounter"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/technologies\/{slug}\/exports\/{format}": {
            "post": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Export businessUnit technologies",
                "description": "Export technologies list of the businessUnit to the specified format.",
                "operationId": "post_api_asm_technologies_export",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the businessUnit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "csv|json|xls",
                            "enum": [
                                "csv",
                                "json",
                                "xls"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AttackSurfaceTechnologyFilterType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "text\/csv": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application\/vnd.ms-excel": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-BadRequest"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/technologies\/{slug}\/exports": {
            "get": {
                "tags": [
                    "Attack Surface"
                ],
                "summary": "Get businessUnit technologies exports.",
                "description": "Get exports technologies from the businessUnit.",
                "operationId": "get_api_asm_technologies_export_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the businessUnit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Export"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/asm\/vulnpedia": {
            "post": {
                "tags": [
                    "Attack Surface Vulnpedia"
                ],
                "summary": "Vulnerability list",
                "description": "List of vulnerabilities",
                "operationId": "post_api_asm_vulnpedia_lists",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 100,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of the vulnerabilities",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/AttackSurfaceVulnerability"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/vulnpedia\/{id}": {
            "get": {
                "tags": [
                    "Attack Surface Vulnpedia"
                ],
                "summary": "Get vulnerability detail",
                "description": "Get the detail of a ASM service",
                "operationId": "get_api_asm_vulnpedia_details",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the vulnerability",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "CVE-\\d{4}-\\d{4,7}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vulnerability details",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AttackSurfaceVulnerabilityDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/asm\/vulnpedia\/statistics": {
            "get": {
                "tags": [
                    "Attack Surface Vulnpedia"
                ],
                "summary": "Get statistics",
                "description": "Get statistics",
                "operationId": "get_api_asm_vulnpedia_statistics",
                "responses": {
                    "200": {
                        "description": "Vulnpedia statistics",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AttackSurfaceVulnerability"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/assets": {
            "get": {
                "tags": [
                    "Attack Surface Business Unit Asset"
                ],
                "summary": "Get assets list",
                "description": "Get the list of assets",
                "operationId": "get_api_business_unit_asm_asset_list",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[search]=value&filter[assetTypes][]=DOMAIN&filter[assetValues][]=VERY_LOW&filter[assetValues][]=LOW&filter[sortBy]=date&filter[order]=DESC`",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "properties": {
                                "search": {
                                    "type": "string"
                                },
                                "assetTypes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "DOMAIN",
                                            "CIDR"
                                        ]
                                    }
                                },
                                "assetValues": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "VERY_LOW",
                                            "LOW",
                                            "MEDIUM",
                                            "HIGH",
                                            "CRITICAL"
                                        ]
                                    }
                                },
                                "order": {
                                    "type": "string",
                                    "enum": [
                                        "DESC",
                                        "ASC"
                                    ]
                                },
                                "sortBy": {
                                    "type": "string",
                                    "enum": [
                                        "date",
                                        "title",
                                        "types",
                                        "assetValue"
                                    ]
                                }
                            },
                            "type": "object",
                            "format": "AsmFilter",
                            "default": {
                                "sortBy": "date",
                                "order": "DESC"
                            }
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve assets list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/AttackSurfaceAssetEmbed"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/Pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            },
            "post": {
                "tags": [
                    "Attack Surface Business Unit Asset"
                ],
                "summary": "Create Assets",
                "description": "Create new assets",
                "operationId": "post_api_business_unit_asm_asset_create_bulk",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AssetsCreateType"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "$ref": "#\/components\/responses\/204-NoContent"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/assets\/import\/validation": {
            "post": {
                "tags": [
                    "Attack Surface Business Unit Asset"
                ],
                "summary": "Validation Import Assets",
                "description": "Validate before importing a list of assets",
                "operationId": "post_api_business_unit_asm_asset_import_validation",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AssetsImportType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/assets\/import": {
            "post": {
                "tags": [
                    "Attack Surface Business Unit Asset"
                ],
                "summary": "Import Assets",
                "description": "Import a list of assets",
                "operationId": "post_api_business_unit_asm_asset_import",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AssetsImportType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/assets\/update\/{assetId}": {
            "post": {
                "tags": [
                    "Attack Surface Business Unit Asset"
                ],
                "summary": "Update Asset",
                "description": "Update an asset",
                "operationId": "post_api_business_unit_asm_asset_update",
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "id of asset",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AssetUpdateType"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/assets\/delete": {
            "post": {
                "tags": [
                    "Attack Surface Business Unit Asset"
                ],
                "summary": "Delete bulk asset",
                "description": "Delete bulk asset",
                "operationId": "post_api_business_unit_asm_asset_delete",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "properties": {
                                    "assets": {
                                        "description": "array of assets id",
                                        "type": "array",
                                        "items": {
                                            "description": "asset id",
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Assets deleted",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/AttackSurfaceAssetEmbed"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/AttackSurfaceAssetEmbed"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/assets\/counters": {
            "get": {
                "tags": [
                    "Attack Surface Business Unit Asset"
                ],
                "summary": "Get assets count by state",
                "description": "Get assets count by state",
                "operationId": "get_api_business_unit_asm_asset_counters",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[search]=value&filter[assetTypes][]=DOMAIN&filter[assetValues][]=VERY_LOW&filter[assetValues][]=LOW&filter[sortBy]=date&filter[order]=DESC`",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "properties": {
                                "search": {
                                    "type": "string"
                                },
                                "assetTypes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "DOMAIN",
                                            "CIDR"
                                        ]
                                    }
                                },
                                "assetValues": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "VERY_LOW",
                                            "LOW",
                                            "MEDIUM",
                                            "HIGH",
                                            "CRITICAL"
                                        ]
                                    }
                                },
                                "order": {
                                    "type": "string",
                                    "enum": [
                                        "DESC",
                                        "ASC"
                                    ]
                                },
                                "sortBy": {
                                    "type": "string",
                                    "enum": [
                                        "date",
                                        "title",
                                        "types",
                                        "assetValue"
                                    ]
                                }
                            },
                            "type": "object",
                            "format": "AsmFilter",
                            "default": {
                                "sortBy": "date",
                                "order": "DESC"
                            }
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset counters",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "included": {
                                            "type": "integer"
                                        },
                                        "excluded": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/assets\/{assetId}\/associated-domains": {
            "get": {
                "tags": [
                    "Attack Surface Business Unit Asset"
                ],
                "summary": "List associated domains",
                "description": "Get list of associated domains by asset",
                "operationId": "get_api_business_unit_asm_asset_list_associated_domains",
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "id of asset",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/cve-alerts": {
            "get": {
                "tags": [
                    "Attack Surface Business Unit CVE Alert"
                ],
                "summary": "Get cve alerts list",
                "description": "Get the list of CVE alerts",
                "operationId": "get_api_business_unit_asm_cve_alertlist",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[search]=value&filter[sortBy]=cpeVersion&filter[sortBy]=updatedDate&filter[order]=DESC`",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "properties": {
                                "search": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "format": "AsmFilter",
                            "default": {
                                "sortBy": "updatedDate",
                                "order": "DESC"
                            }
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve cve alerts list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/AttackSurfaceCveAlertEmbedResponseDto"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/Pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            },
            "post": {
                "tags": [
                    "Attack Surface Business Unit CVE Alert"
                ],
                "summary": "Cve alert creation",
                "description": "Create a new CVE alert",
                "operationId": "post_api_business_unit_asm_cve_alertcreate",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CveAlertCreateType"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/cve-alerts\/{cveAlertId}": {
            "get": {
                "tags": [
                    "Attack Surface Business Unit CVE Alert"
                ],
                "summary": "Cve alert get",
                "description": "Retrieve a CVE alert",
                "operationId": "get_api_business_unit_asm_cve_alertdetails",
                "parameters": [
                    {
                        "name": "cveAlertId",
                        "in": "path",
                        "description": "Id of the cve alert",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve Cve Alert",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AttackSurfaceCveAlertDetailResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            },
            "put": {
                "tags": [
                    "Attack Surface Business Unit CVE Alert"
                ],
                "summary": "Cve alert update",
                "description": "Update a CVE alert",
                "operationId": "put_api_business_unit_asm_cve_alertupdate",
                "parameters": [
                    {
                        "name": "cveAlertId",
                        "in": "path",
                        "description": "Id of the cve alert",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CveAlertCreateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update Cve Alert",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AttackSurfaceCveAlertEmbedResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/cve-alerts\/delete": {
            "post": {
                "tags": [
                    "Attack Surface Business Unit CVE Alert"
                ],
                "summary": "Delete bulk cve alert",
                "description": "Delete bulk cve alert",
                "operationId": "post_api_business_unit_asm_cve_alertdelete",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "properties": {
                                    "cve_alert_ids": {
                                        "description": "array of cve alerts id",
                                        "type": "array",
                                        "items": {
                                            "description": "asset id",
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Assets deleted",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/AttackSurfaceCveAlertEmbedResponseDto"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/AttackSurfaceCveAlertEmbedResponseDto"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/cve-alerts\/{cveAlertId}\/cves": {
            "get": {
                "tags": [
                    "Attack Surface Business Unit CVE Alert"
                ],
                "summary": "Get cves list",
                "description": "Get the cves list of given cve alert",
                "operationId": "get_api_business_unit_asm_cve_alertcves_list",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[search]=value&filter[criticity][]=C&filter[criticity][]=H&filter[sortBy]=updatedDate&filter[order]=DESC`",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "properties": {
                                "search": {
                                    "type": "string"
                                },
                                "criticity": {
                                    "type": "string",
                                    "enum": [
                                        "N",
                                        "L",
                                        "M",
                                        "H",
                                        "C"
                                    ]
                                }
                            },
                            "type": "object",
                            "format": "AsmFilter",
                            "default": {
                                "sortBy": "updatedDate",
                                "order": "DESC"
                            }
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    },
                    {
                        "name": "cveAlertId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve cves list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/AttackSurfaceCveEmbedResponseDto"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/Pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/cve-alerts\/filters\/cpe": {
            "get": {
                "tags": [
                    "Attack Surface Filter"
                ],
                "summary": "Cve alerts cpe list",
                "description": "Filter cpe for cve alerts",
                "operationId": "get_api_business_unit_asm_cve_alertfilter_cpe_list",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[search]=value`",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "properties": {
                                "search": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "format": "AsmFilter",
                            "default": []
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve cve alerts list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/AttackSurfaceCpeEmbedResponseDto"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/Pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/excluded-assets": {
            "get": {
                "tags": [
                    "Attack Surface Business Unit Asset"
                ],
                "summary": "Get excluded assets list",
                "description": "Get the list of excluded assets",
                "operationId": "get_api_business_unit_asm_excluded_asset_list",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[search]=value&filter[assetTypes][]=DOMAIN&filter[assetValues][]=VERY_LOW&filter[assetValues][]=LOW&filter[sortBy]=date&filter[order]=DESC`",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "properties": {
                                "search": {
                                    "type": "string"
                                },
                                "assetTypes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "DOMAIN",
                                            "CIDR"
                                        ]
                                    }
                                },
                                "assetValues": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "VERY_LOW",
                                            "LOW",
                                            "MEDIUM",
                                            "HIGH",
                                            "CRITICAL"
                                        ]
                                    }
                                },
                                "order": {
                                    "type": "string",
                                    "enum": [
                                        "DESC",
                                        "ASC"
                                    ]
                                },
                                "sortBy": {
                                    "type": "string",
                                    "enum": [
                                        "date",
                                        "title",
                                        "types",
                                        "assetValue"
                                    ]
                                }
                            },
                            "type": "object",
                            "format": "AsmFilter",
                            "default": {
                                "sortBy": "date",
                                "order": "DESC"
                            }
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve excluded assets list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/AttackSurfaceExcludedAssetEmbed"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/Pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/excluded-assets\/create": {
            "post": {
                "tags": [
                    "Attack Surface Business Unit Asset"
                ],
                "summary": "Create Excluded Asset",
                "description": "Create a new excluded asset",
                "operationId": "post_api_business_unit_asm_excluded_asset_create",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ExcludedAssetCreateType"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/excluded-assets\/update\/{assetId}": {
            "post": {
                "tags": [
                    "Attack Surface Business Unit Asset"
                ],
                "summary": "Create Excluded Asset",
                "description": "Create a new excluded asset",
                "operationId": "post_api_business_unit_asm_excluded_asset_update",
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "Id of the asset",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ExcludedAssetCreateType"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/excluded-assets\/delete": {
            "post": {
                "tags": [
                    "Attack Surface Business Unit Asset"
                ],
                "summary": "Delete bulk excluded asset",
                "description": "Delete bulk excluded asset",
                "operationId": "post_api_business_unit_asm_excluded_asset_delete",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "properties": {
                                    "assets": {
                                        "description": "array of assets id",
                                        "type": "array",
                                        "items": {
                                            "description": "asset id",
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Assets deleted",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/AttackSurfaceExcludedAssetEmbed"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/AttackSurfaceExcludedAssetEmbed"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/settings": {
            "get": {
                "tags": [
                    "Attack Surface Business Unit Setting"
                ],
                "summary": "Get ASM settings",
                "description": "Get Attack Surface settings",
                "operationId": "get_api_business_unit_asm_settings_get",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attack Surface Business Unit Settings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AttackSurfaceSettingResponseDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Attack Surface Business Unit Setting"
                ],
                "summary": "Update ASM settings",
                "description": "Update Attack Surface settings",
                "operationId": "put_api_business_unit_asm_settings_update",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/BusinessUnitAsmSettingType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Attack Surface Business Unit Settings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AttackSurfaceSettingResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/settings\/notification": {
            "put": {
                "tags": [
                    "Attack Surface Business Unit Setting"
                ],
                "summary": "Update ASM Notification",
                "description": "Update Notification for Attack Surface",
                "operationId": "put_api_business_unit_asm_settings_notification",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/BusinessUnitAsmNotificationType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Attack Surface Business Unit Settings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AttackSurfaceSettingResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/asm\/settings\/cve-alert": {
            "put": {
                "tags": [
                    "Attack Surface Business Unit Setting"
                ],
                "summary": "Update ASM settings CVE alerts",
                "description": "Update settings cve alerts for attack surface",
                "operationId": "put_api_business_unit_asm_settings_cve_alert",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/BusinessUnitAsmCveAlertType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Attack Surface Business Unit Settings",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AttackSurfaceSettingResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/audit\/logs\/search": {
            "post": {
                "tags": [
                    "Business Unit Audit"
                ],
                "summary": "Display Business unit audit logs",
                "description": "Display business unit audit logs. Audit logs can be filtered",
                "operationId": "post_api_business_unit_audit_logs_search",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": "1",
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": "10",
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AuditLogFilterType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Business unit audit log matching parameters",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/AuditLog"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/audit\/logs\/export\/{format}": {
            "post": {
                "tags": [
                    "Business Unit Audit"
                ],
                "summary": "Export audit log",
                "description": "Export audit log in format passed in parameter",
                "operationId": "post_api_business_unit_audit_logs_export",
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format of the export",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "csv|json|xls|pdf",
                            "enum": [
                                "csv",
                                "json",
                                "xls",
                                "pdf"
                            ]
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AuditLogFilterType"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Audit logs exported"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/audit\/logs\/events": {
            "get": {
                "tags": [
                    "Business Unit Audit"
                ],
                "summary": "Audit log event list",
                "description": "Get audit log event list",
                "operationId": "get_api_business_unit_audit_logs_events_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business unit audit log matching parameters",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ItemsString"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/audit\/logs\/authors": {
            "get": {
                "tags": [
                    "Business Unit Audit"
                ],
                "summary": "Audit log author list",
                "description": "Get audit log author list",
                "operationId": "get_api_business_unit_audit_logs_authors_list",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Username search.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "pattern": "[\\w\\-\\s\\.\\(\\)\\\/\\@]+"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The audit log author list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/AuditLogAuthor"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/audit\/logs\/exports": {
            "get": {
                "tags": [
                    "Business Unit Audit"
                ],
                "summary": "Audit log export list",
                "description": "Get audit log export list",
                "operationId": "get_api_business_unit_audit_exports_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The audit log export list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Export"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/certificate\/request": {
            "post": {
                "tags": [
                    "Business Unit Certificate"
                ],
                "summary": "Bug bounty certificate request",
                "description": "Request bug bounty certificate",
                "operationId": "post_api_business_unit_certificate_request",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/BusinessUnitCertificateCreateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request bug bounty certificate",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "default": 204
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/certificate": {
            "get": {
                "tags": [
                    "Business Unit Certificate"
                ],
                "summary": "List business unit certificates.",
                "description": "Retrieve list of certificates of the business unit.",
                "operationId": "get_api_business_unit_certificate_list",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Certificates list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/BusinessUnitCertificate"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/certificate\/certifiable-scopes": {
            "get": {
                "tags": [
                    "Business Unit Certificate"
                ],
                "summary": "List certifiable scopes",
                "description": "Retrieve list of scopes certifiable",
                "operationId": "get_api_business_unit_certificate_certifiable_scopes",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of certifiable scopes",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "program_title": {
                                                        "type": "string"
                                                    },
                                                    "scope_urls": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units": {
            "get": {
                "tags": [
                    "Business Unit"
                ],
                "summary": "Get business unit list",
                "description": "Retrieve the list of the business unit in which the user is member",
                "operationId": "get_api_business_unit_list",
                "parameters": [
                    {
                        "name": "reportsView",
                        "in": "query",
                        "description": "When set to 1, show unread reports count per program in response",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "pattern": "[0-1]"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of the business unit",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/BusinessUnitList"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Business Unit"
                ],
                "summary": "Create Business Unit",
                "description": "Create a new business unit",
                "operationId": "post_api_business_unit_create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/BusinessUnitCreateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Content of the new business unit",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessUnitDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    }
                }
            }
        },
        "\/business-units\/{slug}": {
            "get": {
                "tags": [
                    "Business Unit"
                ],
                "summary": "Get business unit",
                "description": "Retrieve information of the business unit attached to the slug",
                "operationId": "get_api_business_unit_detail",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business unit information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessUnitDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Business Unit"
                ],
                "summary": "Update Business Unit",
                "description": "Update a business unit",
                "operationId": "put_api_business_unit_update",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/BusinessUnitUpdateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Content of the new business unit",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessUnitDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/programs\/{type}": {
            "post": {
                "tags": [
                    "Program"
                ],
                "summary": "Create Program",
                "description": "Create a new program",
                "operationId": "post_api_business_unit_create_program",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type of program",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "bug-bounty|vdp|pentest|vdp-in-app",
                            "enum": [
                                "bug-bounty",
                                "vdp",
                                "pentest",
                                "vdp-in-app"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "$ref": "#\/components\/schemas\/ProgramCreateType"
                                    },
                                    {
                                        "$ref": "#\/components\/schemas\/ProgramVdpCreateType"
                                    },
                                    {
                                        "$ref": "#\/components\/schemas\/ProgramPentestCreateType"
                                    },
                                    {
                                        "$ref": "#\/components\/schemas\/ProgramVdpInAppCreateType"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Content of the new program",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#\/components\/schemas\/ProgramBugBountyDetail"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/ProgramPentestDetail"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/ProgramVdp"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/ProgramVdpInAppDetailResponseDto"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/programs": {
            "get": {
                "tags": [
                    "Business Unit"
                ],
                "summary": "Get business unit programs",
                "description": "Get Business Unit Programs",
                "operationId": "get_api_business_unit_programs_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[search]=value`",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "properties": {
                                "search": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "format": "ProgramFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business unit programs",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ProgramManager"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/reports": {
            "get": {
                "tags": [
                    "Business Unit"
                ],
                "summary": "Get Business Unit reports list",
                "description": "Retrieve reports list attached to the current business unit.",
                "operationId": "get_api_business_unit_reports_list",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "integer",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[startDate]=2024-01-01&filter[programSlugs][]=my-program&filter[programSlugs][]=pentest-program&filter[order]=ASC`",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "new",
                                            "accepted",
                                            "auto_close",
                                            "duplicate",
                                            "invalid",
                                            "more_info",
                                            "not_applicable",
                                            "spam",
                                            "informative",
                                            "reopen_under_review",
                                            "out_of_scope",
                                            "wont_fix",
                                            "resolved",
                                            "reopen_more_info",
                                            "rtfs"
                                        ]
                                    }
                                },
                                "priority": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "P1",
                                            "P2",
                                            "P3",
                                            "P4",
                                            "P5"
                                        ]
                                    }
                                },
                                "search": {
                                    "type": "string"
                                },
                                "startDate": {
                                    "type": "string"
                                },
                                "endDate": {
                                    "type": "string"
                                },
                                "criticity": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "C",
                                            "H",
                                            "L",
                                            "M",
                                            "N"
                                        ]
                                    }
                                },
                                "trackingStatus": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "T",
                                            "U",
                                            "AFI"
                                        ]
                                    }
                                },
                                "reward": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "markedAs": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "U",
                                            "R"
                                        ]
                                    }
                                },
                                "imported": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "assignedTo": {
                                    "type": "string",
                                    "enum": [
                                        "TRIAGERS",
                                        "MANAGERS",
                                        "NO_ONE",
                                        "ME"
                                    ]
                                },
                                "sla": {
                                    "type": "string",
                                    "enum": [
                                        "OVERDUE",
                                        "ON_TIME"
                                    ]
                                },
                                "sortBy": {
                                    "type": "string",
                                    "enum": [
                                        "criticity",
                                        "priority",
                                        "identifier",
                                        "changedAt"
                                    ]
                                },
                                "order": {
                                    "type": "string",
                                    "enum": [
                                        "DESC",
                                        "ASC"
                                    ]
                                }
                            },
                            "type": "object",
                            "format": "ReportFilter",
                            "default": {
                                "sortBy": "changedAt",
                                "order": "DESC"
                            }
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve Business Unit report list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/ReportManager"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/business-units\/{slug}\/reports\/count\/status": {
            "get": {
                "tags": [
                    "Business Unit"
                ],
                "summary": "Get report count status list",
                "description": "Get Business Unit reports count by status",
                "operationId": "get_api_business_unit_get_reports_count_status",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business unit reports count by status",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/CollaboratorReportsCountStatus"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/business-units\/{slug}\/logo": {
            "post": {
                "tags": [
                    "Business Unit"
                ],
                "summary": "Upload logo",
                "description": "Send a logo for the business unit",
                "operationId": "post_api_business_unit_logo",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/BusinessUnitLogoType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Status of the upload",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessUnitLogo"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/users-available": {
            "get": {
                "tags": [
                    "Business Unit"
                ],
                "summary": "Get users available",
                "description": "Get available users for hunting",
                "operationId": "get_api_business_unit_users_available_list",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[kycStatus]=V&filter[geographicalArea]=EU&filter[sortBy]=last_hacktivity&filter[order]=DESC&page=1`",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "properties": {
                                "kycStatus": {
                                    "type": "string",
                                    "enum": [
                                        "U",
                                        "P",
                                        "V"
                                    ]
                                },
                                "geographicalArea": {
                                    "type": "string",
                                    "enum": [
                                        "EU"
                                    ]
                                },
                                "order": {
                                    "type": "string",
                                    "enum": [
                                        "DESC",
                                        "ASC"
                                    ]
                                },
                                "sortBy": {
                                    "type": "string",
                                    "enum": [
                                        "points",
                                        "last_hacktivity"
                                    ]
                                }
                            },
                            "type": "object",
                            "format": "UserFilter",
                            "default": {
                                "sortBy": "last_hacktivity",
                                "order": "DESC"
                            }
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "[1-9]\\d*"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 25,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve users available for hunting",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/Ranking"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/Pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/available-tags": {
            "get": {
                "tags": [
                    "Business Unit"
                ],
                "summary": "Get tags available",
                "description": "Obtain the tags available on the BU in relation to the programs managed.",
                "operationId": "get_api_business_unit_available_tags",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve available tags",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/dashboard\/reports": {
            "get": {
                "tags": [
                    "Business Unit Dashboard"
                ],
                "summary": "Get reports list",
                "description": "Get the list of reports",
                "operationId": "get_api_business_unit_dashboard_reports",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "ReportFilter",
                            "default": {
                                "sortBy": "changedAt",
                                "order": "DESC"
                            }
                        }
                    },
                    {
                        "name": "businessUnitSlugs",
                        "in": "query",
                        "description": "Slugs of business-units",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "BusinessUnitsFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve reports list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/ReportHunter"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/business-units\/{slug}\/dashboard\/reports\/data": {
            "get": {
                "tags": [
                    "Business Unit Dashboard"
                ],
                "summary": "Reports data",
                "description": "Get reports data for the business unit",
                "operationId": "get_api_business_unit_dashboard_reports_data",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "ReportFilter",
                            "default": []
                        }
                    },
                    {
                        "name": "businessUnitSlugs",
                        "in": "query",
                        "description": "Slugs of business-units",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "BusinessUnitsFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reports data",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DashboardReportsData"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/business-units\/{slug}\/dashboard\/reports\/count\/{field}": {
            "get": {
                "tags": [
                    "Business Unit Dashboard"
                ],
                "summary": "Field reports count",
                "description": "Get reports count per field of business unit",
                "operationId": "get_api_business_unit_dashboard_reports_count",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "ReportFilter",
                            "default": []
                        }
                    },
                    {
                        "name": "businessUnitSlugs",
                        "in": "query",
                        "description": "Slugs of business-units",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "BusinessUnitsFilter",
                            "default": []
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "bugcategories|criticity|status",
                            "enum": [
                                "bugcategories",
                                "criticity",
                                "status"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve reports count list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DashboardReportsCount"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/business-units\/{slug}\/dashboard\/reports\/count\/date\/{field}": {
            "get": {
                "tags": [
                    "Business Unit Dashboard"
                ],
                "summary": "Field date reports count",
                "description": "Get reports count per field and date",
                "operationId": "get_api_business_unit_dashboard_reports_count_by_date",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "ReportFilter",
                            "default": []
                        }
                    },
                    {
                        "name": "businessUnitSlugs",
                        "in": "query",
                        "description": "Slugs of business-units",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "BusinessUnitsFilter",
                            "default": []
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "criticity|rewards",
                            "enum": [
                                "criticity",
                                "rewards"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve reports count list by date",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "title": "rewards",
                                            "properties": {
                                                "items": {
                                                    "properties": {
                                                        "EUR": {
                                                            "properties": {
                                                                "YYYY-MM-DD": {
                                                                    "description": "Number and count bounty rewards by date. *Property name is date (format: \"YYYY-MM-DD\").",
                                                                    "properties": {
                                                                        "bounty_total_reward": {
                                                                            "type": "integer"
                                                                        },
                                                                        "bounty_reward_number": {
                                                                            "type": "integer"
                                                                        },
                                                                        "programs": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "properties": {
                                                                                    "title": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "bounty_reward_amount": {
                                                                                        "type": "integer"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "USD": {
                                                            "properties": {
                                                                "YYYY-MM-DD": {
                                                                    "description": "Number and count bounty rewards by date. *Property name is date (format: \"YYYY-MM-DD\").",
                                                                    "properties": {
                                                                        "bounty_total_reward": {
                                                                            "type": "integer"
                                                                        },
                                                                        "bounty_reward_number": {
                                                                            "type": "integer"
                                                                        },
                                                                        "programs": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "properties": {
                                                                                    "title": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "bounty_reward_amount": {
                                                                                        "type": "integer"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "title": "criticity",
                                            "properties": {
                                                "items": {
                                                    "properties": {
                                                        "YYYY-MM-DD": {
                                                            "description": "Count of each criticality level by date. *Property name is date (format: \"YYYY-MM-DD\").",
                                                            "properties": {
                                                                "N": {
                                                                    "type": "integer"
                                                                },
                                                                "L": {
                                                                    "type": "integer"
                                                                },
                                                                "M": {
                                                                    "type": "integer"
                                                                },
                                                                "H": {
                                                                    "type": "integer"
                                                                },
                                                                "C": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/business-units\/{slug}\/dashboard\/reports\/count\/bugcategories\/{category}": {
            "get": {
                "tags": [
                    "Business Unit Dashboard"
                ],
                "summary": "Bug status count",
                "description": "Get reports count for the bug category",
                "operationId": "get_api_business_unit_dashboard_reports_count_bug_type_by_category",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "ReportFilter",
                            "default": []
                        }
                    },
                    {
                        "name": "businessUnitSlugs",
                        "in": "query",
                        "description": "Slugs of business-units",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "BusinessUnitsFilter",
                            "default": []
                        }
                    },
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve reports count list by date",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DashboardReportsCountBugCategory"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/business-units\/{slug}\/dashboard\/reports\/rewards": {
            "get": {
                "tags": [
                    "Business Unit Dashboard"
                ],
                "summary": "Rewards",
                "description": "Get dated rewards list",
                "operationId": "get_api_business_unit_dashboard_reports_rewards",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "DateRangeFilter",
                            "default": []
                        }
                    },
                    {
                        "name": "businessUnitSlugs",
                        "in": "query",
                        "description": "Slugs of business-units",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "BusinessUnitsFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve reports count list by date",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DashboardReportsRewards"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/business-units\/{slug}\/dashboard\/ranking": {
            "get": {
                "tags": [
                    "Business Unit Dashboard"
                ],
                "summary": "Get business unit ranking",
                "description": "Retrieve the ranking for all users of the business unit",
                "operationId": "get_api_business_unit_dashboard_get_ranking",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "[1-9]\\d*"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "DateRangeFilter",
                            "default": []
                        }
                    },
                    {
                        "name": "businessUnitSlugs",
                        "in": "query",
                        "description": "Slugs of business-units",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "BusinessUnitsFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve reports list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/UserRanking"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/business-units\/{slug}\/dashboard\/hunters\/count\/date": {
            "get": {
                "tags": [
                    "Business Unit Dashboard"
                ],
                "summary": "Hunters evolution count",
                "description": "Get hunters evolution count by day",
                "operationId": "get_api_business_unit_dashboard_hunters_count_by_date",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "businessUnitSlugs",
                        "in": "query",
                        "description": "Slugs of business-units",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "BusinessUnitsFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hunters evolution count",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "object",
                                            "example": {
                                                "2019-12-25": {
                                                    "pending_invitations": 0,
                                                    "total_revoked": 0,
                                                    "active_members": 0
                                                },
                                                "2019-12-26": {
                                                    "pending_invitations": 0,
                                                    "total_revoked": 0,
                                                    "active_members": 0
                                                }
                                            },
                                            "additionalProperties": {
                                                "$ref": "#\/components\/schemas\/DashboardHuntersCountDateItem"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/business-units\/{slug}\/dashboard\/hunters\/metrics": {
            "get": {
                "tags": [
                    "Business Unit Dashboard"
                ],
                "summary": "Hunters evolution metrics",
                "description": "Get hunters evolution metrics",
                "operationId": "get_api_business_unit_dashboard_hunters_evolution_metrics",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "DateRangeFilter",
                            "default": []
                        }
                    },
                    {
                        "name": "businessUnitSlugs",
                        "in": "query",
                        "description": "Slugs of business-units",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "BusinessUnitsFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hunters evolution metrics",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DashboardHuntersMetrics"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/business-units\/{slug}\/dashboard\/wallets\/data": {
            "get": {
                "tags": [
                    "Business Unit Dashboard"
                ],
                "summary": "Get business unit dahsboard wallets data",
                "description": "Get business unit dashboard wallets data",
                "operationId": "get_api_business_unit_dashboard_wallets_data",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "businessUnitSlugs",
                        "in": "query",
                        "description": "Slugs of business-units",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "BusinessUnitsFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business unit wallets data",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "EUR": {
                                            "type": "integer"
                                        },
                                        "USD": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                },
                "deprecated": true
            }
        },
        "\/business-units\/{slug}\/invitation-groups": {
            "get": {
                "tags": [
                    "Business Unit Invitation Group"
                ],
                "summary": "Get business unit invitation group list for Business unit",
                "description": "Retrieve the invitation groups attached to the business unit's slug",
                "operationId": "get_api_business_unit_group_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The business unit's invitation group list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/BusinessUnitInvitationGroup"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Business Unit Invitation Group"
                ],
                "summary": "Create business unit invitation group for Business unit",
                "description": "Create business unit invitation group for the business unit",
                "operationId": "post_api_business_unit_group_create",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/BusinessUnitInvitationGroupCreateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The business unit's invitation group created",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/BusinessUnitInvitationGroupDetail"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "description": "Errors during creation",
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/invitation-groups\/{id}": {
            "get": {
                "tags": [
                    "Business Unit Invitation Group"
                ],
                "summary": "Get business unit invitation group details for Business unit",
                "description": "Get invitation group details attached to the business unit's slug",
                "operationId": "get_api_business_unit_group_details",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The business unit's invitation group detail",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessUnitInvitationGroupDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Business Unit Invitation Group"
                ],
                "summary": "Update business unit invitation group from Business unit",
                "description": "Update business unit invitation group from the business unit",
                "operationId": "put_api_business_unit_group_update",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/BusinessUnitInvitationGroupUpdateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The business unit's invitation group updated",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/BusinessUnitInvitationGroupDetail"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "description": "Errors during creation",
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Business Unit Invitation Group"
                ],
                "summary": "Delete business unit invitation group",
                "description": "Delete business unit invitation group",
                "operationId": "delete_api_business_unit_group_delete",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Business unit invitation group deleted"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/members": {
            "get": {
                "tags": [
                    "Business Unit Member"
                ],
                "summary": "Get member list",
                "description": "Get the business unit member list",
                "operationId": "get_api_business_unit_members_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the members list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Member"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/members\/revoked": {
            "get": {
                "tags": [
                    "Business Unit Member"
                ],
                "summary": "Get revoked member list",
                "description": "Get the revoked business unit member list",
                "operationId": "get_api_business_unit_members_revoked",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the revoked members list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Member"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/members\/{id}": {
            "delete": {
                "tags": [
                    "Business Unit Member"
                ],
                "summary": "Delete member",
                "description": "Delete business unit member",
                "operationId": "delete_api_business_unit_members_delete",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete business unit member"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/members\/invitations": {
            "get": {
                "tags": [
                    "Business Unit Member Invitation"
                ],
                "summary": "Get member invitation list",
                "description": "Get the business unit member invitation list",
                "operationId": "get_api_business_unit_members_invitations_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the members invitation list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Invitation"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Business Unit Member Invitation"
                ],
                "summary": "Create invitation",
                "description": "Create business unit invitation",
                "operationId": "post_api_business_unit_members_invitations_create",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/BusinessUnitMemberInvitationCreateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create business unit invitation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Invitation"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/members\/invitations\/{id}": {
            "delete": {
                "tags": [
                    "Business Unit Member Invitation"
                ],
                "summary": "Delete invitation",
                "description": "Delete business unit invitation",
                "operationId": "delete_api_business_unit_members_invitations_delete",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete business unit invitation"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/members\/invitations\/group": {
            "post": {
                "tags": [
                    "Business Unit Member Invitation"
                ],
                "summary": "Group invitation creation",
                "description": "Create business unit group invitation",
                "operationId": "post_api_business_unit_members_invitations_group_create",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "properties": {
                                    "group": {
                                        "type": "integer"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "ROLE_BU_MANAGER",
                                            "ROLE_BU_ACCOUNTING_MANAGER"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create business unit group invitation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Invitation"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/products": {
            "get": {
                "tags": [
                    "Business Unit Product"
                ],
                "summary": "Get business unit product list",
                "description": "Get the list of business unit product",
                "operationId": "get_api_business_unit_products_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve business unit product list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/BusinessUnitProduct"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/products\/requests": {
            "get": {
                "tags": [
                    "Business Unit Product"
                ],
                "summary": "Get product request list",
                "description": "Get the list of product request",
                "operationId": "get_api_business_unit_products_requests",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve product request list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/ProductRequest"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/products\/{product_slug}\/purchase": {
            "post": {
                "tags": [
                    "Business Unit Product"
                ],
                "summary": "Product purchase",
                "description": "Purchase product",
                "operationId": "post_api_business_unit_products_purchase",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "product_slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ProductRequestCreateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Purchase product",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProductRequest"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/products\/{product_slug}\/{action}": {
            "put": {
                "tags": [
                    "Business Unit Product"
                ],
                "summary": "Product request creation",
                "description": "Create product request",
                "operationId": "put_api_business_unit_products_renewal",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "product_slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "upgrade|renew",
                            "enum": [
                                "upgrade",
                                "renew"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ProductRequestCreateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create product request",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProductRequest"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/response-templates": {
            "get": {
                "tags": [
                    "Business Unit Response Template"
                ],
                "summary": "Get business unit response template list",
                "description": "Get the business unit response template list",
                "operationId": "get_api_business_units_response_templates_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the business unit response template list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ResponseTemplate"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Business Unit Response Template"
                ],
                "summary": "Create response template for business unit",
                "description": "Create response template for business unit",
                "operationId": "post_api_business_units_response_templates_create",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ResponseTemplateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The business unit response template created",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseTemplate"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/response-templates\/{id_rst}": {
            "get": {
                "tags": [
                    "Business Unit Response Template"
                ],
                "summary": "Get response template for business unit",
                "description": "Get response template for business unit",
                "operationId": "get_api_business_units_response_templates_details",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id_rst",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The business unit response template in details",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseTemplate"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Business Unit Response Template"
                ],
                "summary": "Update response template for business unit",
                "description": "Update response template for business unit",
                "operationId": "put_api_business_units_response_templates_update",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id_rst",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ResponseTemplateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The business unit response template updated",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ResponseTemplate"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Business Unit Response Template"
                ],
                "summary": "Delete business unit response template",
                "description": "Delete business unit response template",
                "operationId": "delete_api_business_units_response_templates_delete",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id_rst",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Business unit response template deleted"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/signatures": {
            "get": {
                "tags": [
                    "Business Unit Signature"
                ],
                "summary": "Get signatures list",
                "description": "Retrieve list of signatures",
                "operationId": "get_api_business_unit_signatures_list",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "integer",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Signature list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/Signature"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/slack\/workspaces": {
            "get": {
                "tags": [
                    "Business Unit Slack Workspaces"
                ],
                "summary": "Get SlackWorkspaces",
                "description": "Get the list of workspaces for the business unit",
                "operationId": "get_api_business_unit_slack_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of workspaces available for the business unit",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SlackWorkspace"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Business Unit Slack Workspaces"
                ],
                "summary": "Add SlackWorkspace",
                "description": "Create new slack workspace",
                "operationId": "post_api_business_unit_slack_create",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created new slack workspace",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SlackWorkspace"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/slack\/workspaces\/{slack_workspace_id}": {
            "delete": {
                "tags": [
                    "Business Unit Slack Workspaces"
                ],
                "summary": "Delete SlackWorkspace",
                "description": "Delete a slack workspace for business-unit",
                "operationId": "delete_api_business_unit_slack_revoke",
                "parameters": [
                    {
                        "name": "slack_workspace_id",
                        "in": "path",
                        "description": "id of the slack workspace",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#\/components\/responses\/204-NoContent"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/slack\/channels": {
            "get": {
                "tags": [
                    "Business Unit Slack Channel"
                ],
                "summary": "get slack channels list",
                "description": "Retrieve list of slack channels for the business unit",
                "operationId": "get_api_business_unit_slack_channel_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of slack channels available for the business unit",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SlackChannel"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/slack\/workspaces\/{slack_workspace_id}\/channels": {
            "post": {
                "tags": [
                    "Business Unit Slack Channel"
                ],
                "summary": "Add SlackChannel",
                "description": "Create new slack channel",
                "operationId": "post_api_business_unit_slack_create_slack_channel",
                "parameters": [
                    {
                        "name": "slack_workspace_id",
                        "in": "path",
                        "description": "id of the slack workspace",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SlackChannelCreateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Created new slack channel",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SlackChannelEmbed"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/slack\/workspaces\/{slack_workspace_id}\/channels\/{slack_channel_id}": {
            "delete": {
                "tags": [
                    "Business Unit Slack Channel"
                ],
                "summary": "Delete SlackChannel",
                "description": "Delete a slack channel for business-unit",
                "operationId": "delete_api_business_unit_slack_delete_slack_channel",
                "parameters": [
                    {
                        "name": "slack_workspace_id",
                        "in": "path",
                        "description": "id of the slack workspace",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "slack_channel_id",
                        "in": "path",
                        "description": "id of the slack channel",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#\/components\/responses\/204-NoContent"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/sso\/enable": {
            "post": {
                "tags": [
                    "Business Unit SSO"
                ],
                "summary": "Enable SSO SAML configuration",
                "description": "Enable SSO SAML configuration.",
                "operationId": "post_api_business_unit_sso_enable",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SsoStatusUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/sso\/disable": {
            "post": {
                "tags": [
                    "Business Unit SSO"
                ],
                "summary": "Disable SSO SAML configuration",
                "description": "Disable SSO SAML configuration.",
                "operationId": "post_api_business_unit_sso_disable",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SsoStatusUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success message",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/sso\/saml\/configuration": {
            "get": {
                "tags": [
                    "Business Unit SSO"
                ],
                "summary": "Get SSO SAML configuration",
                "description": "Retrieve SSO SAML configuration of the business unit.",
                "operationId": "get_api_business_unit_sso_saml_get_configuration",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SAML configuration",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SamlConfigurationDomain"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Business Unit SSO"
                ],
                "summary": "Get SSO SAML configuration",
                "description": "Retrieve SSO SAML configuration of the business unit.",
                "operationId": "put_api_business_unit_sso_saml_create_or_update_configuration",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SAML configuration",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SamlConfigurationDomain"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/sso\/saml\/configuration\/alternative-certificate": {
            "put": {
                "tags": [
                    "Business Unit SSO"
                ],
                "summary": "Update alternate certificate in SSO SAML configuration",
                "description": "Update the alternate certificate in SSO SAML configuration of the business unit.",
                "operationId": "put_api_business_unit_sso_saml_update_alternative_certificate_configuration",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AlternativeCertificateUpdateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated SAML configuration",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SamlConfiguration"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/sso\/saml\/configuration\/alternative-certificate\/promote": {
            "post": {
                "tags": [
                    "Business Unit SSO"
                ],
                "summary": "Promote alternate certificate in SSO SAML configuration",
                "description": "Promote the alternate certificate in SSO SAML configuration of the business unit.",
                "operationId": "post_api_business_unit_sso_saml_promote_alternative_certificate_configuration",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message or IDP URL",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "idp_url": {
                                                    "type": "string",
                                                    "format": "uri"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/sso\/saml\/configuration\/validate": {
            "post": {
                "tags": [
                    "Business Unit SSO"
                ],
                "summary": "Validate SSO SAML configuration",
                "description": "Validate the SSO SAML configuration of the business unit.",
                "operationId": "post_api_business_unit_sso_saml_validate_configuration",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "IdP URL to validate SAML configuration",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "idp_url": {
                                            "type": "string",
                                            "format": "uri"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/sso\/domain\/validate": {
            "post": {
                "tags": [
                    "Business Unit SSO"
                ],
                "summary": "Validate SSO domain",
                "description": "Validate SSO domain.",
                "operationId": "post_api_business_unit_sso_validate_domain",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DomainCreateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "SSO configuration",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SamlConfigurationDomain"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/sso\/domain\/revoke": {
            "post": {
                "tags": [
                    "Business Unit SSO"
                ],
                "summary": "Revoke SSO domain",
                "description": "Revoke SSO domain.",
                "operationId": "post_api_business_unit_sso_revoke_domain_verification_request",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the business unit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SSO configuration",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SamlConfigurationDomain"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/terms-of-use-agreements": {
            "get": {
                "tags": [
                    "Business Unit Terms Of Use Agreement"
                ],
                "summary": "Get business unit terms of use agreement list",
                "description": "Retrieve the terms of use agreement list attached to a business unit.",
                "operationId": "get_api_business_unit_terms_of_use_list",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve business unit terms of use agreement list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/BusinessUnitTermsOfUseAgreement"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/terms-of-use-agreements\/{version}\/accept": {
            "post": {
                "tags": [
                    "Business Unit Terms Of Use Agreement"
                ],
                "summary": "Get accepted business unit terms of use agreement",
                "description": "Retrieve the accepted terms of use agreement of a business unit.",
                "operationId": "post_api_business_unit_terms_of_use_accept",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve accepted business unit terms of use agreement",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/BusinessUnitTermsOfUseAgreement"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-BadRequest"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/wallet": {
            "get": {
                "tags": [
                    "Business Unit Wallet"
                ],
                "summary": "Business unit wallet",
                "description": "Retrieve balance amount information of the wallet attached to the businnes unit.",
                "operationId": "get_api_business_unit_wallet_get",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve business unit wallet's information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Wallet"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/wallet\/ask-refill": {
            "post": {
                "tags": [
                    "Business Unit Wallet"
                ],
                "summary": "Business unit wallet's refill",
                "description": "Refill the wallet attached to the businnes unit.",
                "operationId": "post_api_business_unit_wallet_ask_refill",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/WalletRefillType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Retrieve business unit wallet refill information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/WalletRefill"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/wallet\/refills": {
            "get": {
                "tags": [
                    "Business Unit Wallet"
                ],
                "summary": "Business unit refills",
                "description": "Retrieve all refills attached to the businnes unit.",
                "operationId": "get_api_business_unit_wallet_get_refills",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve business unit wallet refills information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/WalletRefill"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/wallet\/transactions\/billing-tags": {
            "get": {
                "tags": [
                    "Business Unit Wallet"
                ],
                "summary": "Business unit billing tags",
                "description": "Retrieve list of Business unit billing tags.",
                "operationId": "get_api_business_unit_wallet_get_billing_tags",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve business unit billing tags",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "example": "tags"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/wallet\/transactions": {
            "get": {
                "tags": [
                    "Business Unit Wallet"
                ],
                "summary": "Business unit transactions",
                "description": "Retrieve list of transactions.",
                "operationId": "get_api_business_unit_wallet_get_transactions",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 10,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date filter.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "pattern": "\\d{4}-\\d{2}-\\d{2}"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date filter.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "pattern": "\\d{4}-\\d{2}-\\d{2}"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Transaction type filter.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "pattern": "REFILL|TRANSFER|ADJUSTMENT"
                        }
                    },
                    {
                        "name": "program",
                        "in": "query",
                        "description": "Program filter.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "pattern": "[\\w\\-\\s\\.\\(\\)\\\/\\@]+"
                        }
                    },
                    {
                        "name": "billingTags",
                        "in": "query",
                        "description": "Billing tags filter.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "default": []
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve business unit transactions",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/TransactionManager"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/business-units\/{slug}\/wallet\/transactions\/export\/{format}": {
            "get": {
                "tags": [
                    "Business Unit Wallet"
                ],
                "summary": "Export business unit transactions",
                "description": "Export list of transactions.",
                "operationId": "get_api_business_unit_wallet_export_transactions",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date filter.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "pattern": "\\d{4}-\\d{2}-\\d{2}"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date filter.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "pattern": "\\d{4}-\\d{2}-\\d{2}"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Transaction type filter.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "pattern": "REFILL|TRANSFER|ADJUSTMENT"
                        }
                    },
                    {
                        "name": "program",
                        "in": "query",
                        "description": "Program filter.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "pattern": "[\\w\\-\\s\\.\\(\\)\\\/\\@]+"
                        }
                    },
                    {
                        "name": "billingTags",
                        "in": "query",
                        "description": "Billing tags filter.",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "format": "BillingTagsRequirements",
                            "default": []
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "pdf|csv|json|xls",
                            "enum": [
                                "pdf",
                                "csv",
                                "json",
                                "xls"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/pdf": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text\/csv": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application\/vnd.ms-excel": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/{slug}\/attachments": {
            "post": {
                "tags": [
                    "Program attachment"
                ],
                "summary": "Create attachment file for Program",
                "description": "Create an attachment file for the program",
                "operationId": "post_api_programs_add_linked_program_attachment",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The program's linked attachment file created",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Attachment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/attachments": {
            "post": {
                "tags": [
                    "Program attachment"
                ],
                "summary": "Create attachment file",
                "description": "Create an attachment file",
                "operationId": "post_api_programs_add_program_attachment",
                "responses": {
                    "200": {
                        "description": "The program attachment's created",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Attachment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/{slug}\/attachments\/{name}": {
            "delete": {
                "tags": [
                    "Program attachment"
                ],
                "summary": "Delete linked attachment file for Program",
                "description": "Delete an attachment file for the program",
                "operationId": "delete_api_programs_delete_linked_programs_attachment",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "File deleted"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/attachments\/{name}": {
            "delete": {
                "tags": [
                    "Program attachment"
                ],
                "summary": "Delete attachment file",
                "description": "Delete an attachment file",
                "operationId": "delete_api_programs_delete_programs_attachment",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "File deleted"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs": {
            "get": {
                "tags": [
                    "Program"
                ],
                "summary": "Get program list",
                "description": "Get the list of programs",
                "operationId": "get_api_programs_list",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[search]=value`",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "properties": {
                                "search": {
                                    "type": "string",
                                    "pattern": "[\\w\\-\\s\\.\\(\\)\\\/\\@]+"
                                },
                                "scopeType": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "type": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "collaboration": {
                                    "type": "boolean"
                                },
                                "supportedLanguages": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "country": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "activityArea": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "rewardMin": {
                                    "type": "integer"
                                },
                                "rewardMax": {
                                    "type": "integer"
                                },
                                "visibility": {
                                    "type": "string",
                                    "enum": [
                                        "all",
                                        "private",
                                        "public"
                                    ]
                                },
                                "disabled": {
                                    "type": "boolean"
                                },
                                "kycRequired": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object",
                            "format": "ProgramFilter",
                            "default": []
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 42,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve managed program list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/Program"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/Pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/programs\/count": {
            "get": {
                "tags": [
                    "Program"
                ],
                "summary": "Programs counters",
                "description": "Get programs counters",
                "operationId": "get_api_programs_count",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[search]=value`",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "properties": {
                                "disabled": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object",
                            "format": "ProgramFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve programs counters"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    }
                }
            }
        },
        "\/programs\/filters-data": {
            "get": {
                "tags": [
                    "Program"
                ],
                "summary": "Filters data programs",
                "description": "Get filters data from programs",
                "operationId": "get_api_programs_filters_data",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[search]=value`",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "properties": {
                                "type": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object",
                            "format": "ProgramFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve filters data from available programs"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    }
                }
            }
        },
        "\/programs\/{slugOrPid}": {
            "get": {
                "tags": [
                    "Program"
                ],
                "summary": "Get program",
                "description": "Get the current program",
                "operationId": "get_api_programs_get_program",
                "parameters": [
                    {
                        "name": "slugOrPid",
                        "in": "path",
                        "description": "Slug or pid of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve program information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#\/components\/schemas\/ProgramBugBountyDetail"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/ProgramVdp"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/ProgramPentestDetail"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/ProgramVdpInAppDetailResponseDto"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}": {
            "put": {
                "tags": [
                    "Program"
                ],
                "summary": "Update program",
                "description": "Update the current program.",
                "operationId": "put_api_programs_update_program",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "title": "Bug bounty",
                                        "allOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/ProgramUpdateType"
                                            },
                                            {
                                                "properties": {
                                                    "reward_grid_very_low": {
                                                        "$ref": "#\/components\/schemas\/RewardGridType"
                                                    },
                                                    "reward_grid_low": {
                                                        "$ref": "#\/components\/schemas\/RewardGridType"
                                                    },
                                                    "reward_grid_medium": {
                                                        "$ref": "#\/components\/schemas\/RewardGridType"
                                                    },
                                                    "reward_grid_high": {
                                                        "$ref": "#\/components\/schemas\/RewardGridType"
                                                    },
                                                    "reward_grid_critical": {
                                                        "$ref": "#\/components\/schemas\/RewardGridType"
                                                    },
                                                    "bounty_reward_min": {
                                                        "description": "Only if 'bounty' is set to true",
                                                        "type": "integer"
                                                    },
                                                    "disclose_bounty_min_reward": {
                                                        "description": "Only if 'bounty' is set to true",
                                                        "type": "boolean",
                                                        "default": false
                                                    },
                                                    "disclose_bounty_average_reward": {
                                                        "description": "Only if 'bounty' is set to true",
                                                        "type": "boolean",
                                                        "default": false
                                                    },
                                                    "disclose_bounty_max_reward": {
                                                        "description": "Only if 'bounty' is set to true",
                                                        "type": "boolean",
                                                        "default": false
                                                    },
                                                    "vpn_ips": {
                                                        "description": "Only if 'vpn_active' is set to true",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "disable_message": {
                                                        "description": "Only if 'disabled' is set to true",
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "sla_grid": {
                                                        "$ref": "#\/components\/schemas\/SlaGridType"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        ]
                                    },
                                    {
                                        "title": "VDP",
                                        "allOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/ProgramVdpUpdateType"
                                            }
                                        ]
                                    },
                                    {
                                        "title": "In App VDP",
                                        "allOf": [
                                            {
                                                "$ref": "#\/components\/schemas\/ProgramVdpInAppUpdateType"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#\/components\/schemas\/ProgramBugBountyDetail"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/ProgramVdp"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/ProgramVdpInAppDetailResponseDto"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/scopes": {
            "get": {
                "tags": [
                    "Program"
                ],
                "summary": "Get program scopes",
                "description": "Get scopes of the current program.",
                "operationId": "get_api_programs_get_scopes",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ProgramScope"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/programs\/{slug}\/images": {
            "post": {
                "tags": [
                    "Program"
                ],
                "summary": "Update program images",
                "description": "Update the current program's banner and thumbnail.",
                "operationId": "post_api_programs_images",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProgramBugBountyDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/{slug}\/image\/{imageType}": {
            "delete": {
                "tags": [
                    "Program"
                ],
                "summary": "Remove a program image",
                "description": "Remove the current program's thumbnail or banner",
                "operationId": "delete_api_programs_remove_image",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "imageType",
                        "in": "path",
                        "description": "Image type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "thumbnail|banner|all",
                            "enum": [
                                "thumbnail",
                                "banner",
                                "all"
                            ]
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/{slug}\/reports": {
            "get": {
                "tags": [
                    "Program"
                ],
                "summary": "Get program reports",
                "description": "Get program reports",
                "operationId": "get_api_programs_get_reports",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[startDate]=2024-01-01&filter[imported][]=0&filter[status][]=under_review&filter[status][]=new&filter[order]=ASC`",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "properties": {
                                "status": {
                                    "description": "Filter by status",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "invalid",
                                            "wont_fix",
                                            "resolved",
                                            "out_of_scope",
                                            "duplicate",
                                            "spam",
                                            "not_applicable",
                                            "informative",
                                            "rtfs",
                                            "auto_close",
                                            "new",
                                            "more_info",
                                            "under_review",
                                            "accepted"
                                        ]
                                    }
                                },
                                "priority": {
                                    "description": "Filter by priority",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "P1",
                                            "P2",
                                            "P3",
                                            "P4",
                                            "P5"
                                        ]
                                    }
                                },
                                "search": {
                                    "type": "string",
                                    "pattern": "[\\w\\-\\s\\.\\(\\)\\\/\\@]+"
                                },
                                "startDate": {
                                    "description": "Start date",
                                    "type": "string",
                                    "format": "date"
                                },
                                "endDate": {
                                    "description": "End date",
                                    "type": "string",
                                    "format": "date"
                                },
                                "criticity": {
                                    "description": "Filter by criticity",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "N",
                                            "L",
                                            "M",
                                            "H",
                                            "C"
                                        ]
                                    }
                                },
                                "trackingStatus": {
                                    "description": "Filter by tracking status",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "U",
                                            "AFI",
                                            "T"
                                        ]
                                    }
                                },
                                "reward": {
                                    "type": "boolean"
                                },
                                "markedAs": {
                                    "description": "Filter by marked as",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "R",
                                            "U"
                                        ]
                                    }
                                },
                                "imported": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "patchStatus": {
                                    "description": "Filter by patch status",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "U",
                                            "AFP",
                                            "IP",
                                            "D",
                                            "F"
                                        ]
                                    }
                                },
                                "assignedTo": {
                                    "type": "string",
                                    "enum": [
                                        "TRIAGERS",
                                        "MANAGERS",
                                        "NO_ONE",
                                        "ME"
                                    ]
                                },
                                "sla": {
                                    "type": "string",
                                    "enum": [
                                        "OVERDUE",
                                        "ON_TIME"
                                    ]
                                },
                                "sortBy": {
                                    "type": "string",
                                    "enum": [
                                        "criticity",
                                        "priority",
                                        "identifier",
                                        "changedAt"
                                    ]
                                },
                                "order": {
                                    "type": "string",
                                    "enum": [
                                        "DESC",
                                        "ASC"
                                    ]
                                },
                                "askForFixVerificationStatus": {
                                    "description": "Filter by ask for fix verification status",
                                    "type": "string",
                                    "enum": [
                                        "UNKNOWN",
                                        "PENDING",
                                        "CONFIRMED",
                                        "REJECTED",
                                        "CANCELLED"
                                    ]
                                }
                            },
                            "type": "object",
                            "format": "ReportFilter",
                            "default": {
                                "sortBy": "changedAt",
                                "order": "DESC"
                            }
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve reports count per status",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ReportManager"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/reports\/count\/status": {
            "get": {
                "tags": [
                    "Program"
                ],
                "summary": "Get report count status list",
                "description": "Get program reports count by status",
                "operationId": "get_api_programs_get_reports_count_status",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Program reports count by status",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/CollaboratorReportsCountStatus"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/programs\/{slug}\/reports\/export\/{format}": {
            "get": {
                "tags": [
                    "Program"
                ],
                "summary": "Export program reports",
                "description": "Export reports list of the program to the specified format.",
                "operationId": "get_api_programs_export_reports",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "Format of the export",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "pdf|csv|json|xls",
                            "enum": [
                                "pdf",
                                "csv",
                                "json",
                                "xls"
                            ]
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[startDate]=2024-01-01&filter[imported][]=0&filter[status][]=under_review&filter[status][]=new&filter[order]=ASC`",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "properties": {
                                "search": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "new",
                                            "accepted",
                                            "auto_close",
                                            "duplicate",
                                            "invalid",
                                            "more_info",
                                            "not_applicable",
                                            "spam",
                                            "informative",
                                            "reopen_under_review",
                                            "out_of_scope",
                                            "wont_fix",
                                            "resolved",
                                            "reopen_more_info",
                                            "rtfs"
                                        ]
                                    }
                                },
                                "reportSources": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "bug-bounty",
                                            "pentest",
                                            "asm",
                                            "vdp",
                                            "vdp-in-app"
                                        ]
                                    }
                                },
                                "startDate": {
                                    "type": "string"
                                },
                                "endDate": {
                                    "type": "string"
                                },
                                "markedAs": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "U",
                                            "R"
                                        ]
                                    }
                                },
                                "reward": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "priority": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "P1",
                                            "P2",
                                            "P3",
                                            "P4",
                                            "P5"
                                        ]
                                    }
                                },
                                "trackingStatus": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "T",
                                            "U",
                                            "AFI"
                                        ]
                                    }
                                },
                                "imported": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "criticity": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "C",
                                            "H",
                                            "L",
                                            "M",
                                            "N"
                                        ]
                                    }
                                },
                                "patchStatus": {
                                    "description": "Filter by patch status",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "U",
                                            "AFP",
                                            "IP",
                                            "D",
                                            "F"
                                        ]
                                    }
                                },
                                "assignedTo": {
                                    "type": "string",
                                    "enum": [
                                        "TRIAGERS",
                                        "MANAGERS",
                                        "NO_ONE",
                                        "ME"
                                    ]
                                },
                                "sla": {
                                    "type": "string",
                                    "enum": [
                                        "OVERDUE",
                                        "ON_TIME"
                                    ]
                                },
                                "reportTags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "assessed": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "scopes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "sortBy": {
                                    "type": "string",
                                    "enum": [
                                        "title",
                                        "identifier",
                                        "changedAt",
                                        "criticity",
                                        "priority",
                                        "reward",
                                        "status",
                                        "author",
                                        "programTitle"
                                    ]
                                },
                                "order": {
                                    "type": "string",
                                    "enum": [
                                        "DESC",
                                        "ASC"
                                    ]
                                },
                                "askForFixVerificationStatus": {
                                    "description": "Filter by ask for fix verification status",
                                    "type": "string",
                                    "enum": [
                                        "UNKNOWN",
                                        "PENDING",
                                        "CONFIRMED",
                                        "REJECTED",
                                        "CANCELLED"
                                    ]
                                }
                            },
                            "type": "object",
                            "format": "ReportFilter",
                            "default": {
                                "sortBy": "changedAt",
                                "order": "DESC"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "text\/csv": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application\/vnd.ms-excel": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application\/pdf": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/{slug}\/export\/executive-report": {
            "get": {
                "tags": [
                    "Program"
                ],
                "summary": "PDF Asynchronous export.",
                "description": "Get PDF export of executive report for program.",
                "operationId": "get_api_programs_export_reports_stats",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/{slug}\/exports": {
            "get": {
                "tags": [
                    "Program"
                ],
                "summary": "Get program exports.",
                "description": "Get exports from the program.",
                "operationId": "get_api_programs_exports_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Export"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/exports\/cancel\/{export_id}": {
            "delete": {
                "tags": [
                    "Program"
                ],
                "summary": "Remove an export",
                "description": "Removed \/ Canceled the export",
                "operationId": "delete_api_programs_export_cancel",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "export_id",
                        "in": "path",
                        "description": "Export id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/ranking": {
            "get": {
                "tags": [
                    "Program"
                ],
                "summary": "Get program ranking",
                "description": "Retrieve the ranking for hunters of the program",
                "operationId": "get_api_programs_get_ranking",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 25,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve program ranking",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/UserRanking"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/manager\/leave": {
            "post": {
                "tags": [
                    "Program"
                ],
                "summary": "Program left",
                "description": "The current user leave the {slug} program if he has a Manager role in it",
                "operationId": "post_api_programs_manager_leave",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/hunter\/leave": {
            "post": {
                "tags": [
                    "Program"
                ],
                "summary": "Program left",
                "description": "The current user leave the {slug} program if he is a hunter",
                "operationId": "post_api_programs_hunter_leave",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/hunter\/credentials": {
            "get": {
                "tags": [
                    "Program Hunter Credential"
                ],
                "summary": "Credential and request list",
                "description": "Get program hunter credentials and requests.",
                "operationId": "get_api_programs_hunter_credentials",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "properties": {
                                                "credentials": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/Credential"
                                                    }
                                                },
                                                "credential_requests": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/CredentialRequest"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/hunter\/ask-credentials\/{credential_pool_slug}\/classic": {
            "post": {
                "tags": [
                    "Program Hunter Credential"
                ],
                "summary": "Credential(s) request",
                "description": "Request credentials on pool.",
                "operationId": "post_api_programs_hunter_ask_credentials_classic",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "credential_pool_slug",
                        "in": "path",
                        "description": "Slug of the credential pool",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Only for 'email' demand.",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CredentialsAskType"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/hunter\/ask-credentials\/{credential_pool_slug}\/email": {
            "post": {
                "tags": [
                    "Program Hunter Credential"
                ],
                "summary": "Credential(s) request",
                "description": "Request credentials on pool.",
                "operationId": "post_api_programs_hunter_ask_credentials_email",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "credential_pool_slug",
                        "in": "path",
                        "description": "Slug of the credential pool",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Only for 'email' demand.",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CredentialsAskType"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/hunter\/ask-credentials\/{credential_pool_slug}\/email-alias": {
            "post": {
                "tags": [
                    "Program Hunter Credential"
                ],
                "summary": "Credential(s) request",
                "description": "Request credentials on pool.",
                "operationId": "post_api_programs_hunter_ask_credentials_email_alias",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "credential_pool_slug",
                        "in": "path",
                        "description": "Slug of the credential pool",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Only for 'email' demand.",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CredentialsAskType"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/archive": {
            "put": {
                "tags": [
                    "Program"
                ],
                "summary": "Program archive",
                "description": "Archive the current program.",
                "operationId": "put_api_programs_archive",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ProgramArchiveType"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/hacktivity": {
            "get": {
                "tags": [
                    "Hacktivity"
                ],
                "summary": "Get the list of hacking activities on the program",
                "description": "Retrieve the hacktivity on the platform attached to a program",
                "operationId": "get_api_programs_hacktivity",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The hacktivity list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/Hacktivity"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/thanks": {
            "get": {
                "tags": [
                    "Program"
                ],
                "summary": "Get the list of thanks hunters on the program",
                "description": "Retrieve the thanks on the platform attached to a program",
                "operationId": "get_api_programs_thanks",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 12,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The thanks list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/ThanksUserResponseDto"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{program_slug}\/credential-pools\/{credential_pool_slug}\/credentials": {
            "get": {
                "tags": [
                    "Program Credential"
                ],
                "summary": "Credential list",
                "description": "Retrieve the list of the credentials attached to the credential pool.",
                "operationId": "get_api_programs_credential_pools_credentials_list",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[search]=value&filter[status][]=REQ&filter[status][]=F&filter[order]=ASC`",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "R",
                                            "A",
                                            "F",
                                            "REQ"
                                        ]
                                    }
                                },
                                "search": {
                                    "type": "string",
                                    "pattern": "[\\w\\-\\s\\.\\(\\)\\\/\\@]+"
                                },
                                "sortBy": {
                                    "type": "string",
                                    "enum": [
                                        "username",
                                        "status",
                                        "createdAt"
                                    ]
                                },
                                "order": {
                                    "type": "string",
                                    "enum": [
                                        "DESC",
                                        "ASC"
                                    ]
                                }
                            },
                            "type": "object",
                            "format": "CredentialFilter",
                            "default": {
                                "sortBy": "status",
                                "order": "ASC"
                            }
                        }
                    },
                    {
                        "name": "program_slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "credential_pool_slug",
                        "in": "path",
                        "description": "slug of the credential pool",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/CredentialDetail"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Program Credential"
                ],
                "summary": "Credential(s) create",
                "description": "Create new credentials.",
                "operationId": "post_api_programs_credential_pools_credentials_create",
                "parameters": [
                    {
                        "name": "program_slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "credential_pool_slug",
                        "in": "path",
                        "description": "slug of the credential pool",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CredentialsCollectionType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "Credentials created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{program_slug}\/credential-pools\/{credential_pool_slug}\/credentials\/import\/validation": {
            "post": {
                "tags": [
                    "Program Credential"
                ],
                "summary": "Credential(s) import validate",
                "description": "Validate a list of credentials to import into the credential pool.",
                "operationId": "post_api_programs_credential_pools_credentials_import_validation",
                "parameters": [
                    {
                        "name": "program_slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "credential_pool_slug",
                        "in": "path",
                        "description": "slug of the credential pool",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CredentialUploadType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "Credentials validated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{program_slug}\/credential-pools\/{credential_pool_slug}\/credentials\/import": {
            "post": {
                "tags": [
                    "Program Credential"
                ],
                "summary": "Credential(s) import",
                "description": "Import a list of credentials into the credential pool.",
                "operationId": "post_api_programs_credential_pools_credentials_import",
                "parameters": [
                    {
                        "name": "program_slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "credential_pool_slug",
                        "in": "path",
                        "description": "slug of the credential pool",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CredentialUploadType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "Credentials imported"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{program_slug}\/credential-pools\/{credential_pool_slug}\/credentials\/{id}": {
            "put": {
                "tags": [
                    "Program Credential"
                ],
                "summary": "Credential update",
                "description": "Update a credential.",
                "operationId": "put_api_programs_credential_pools_credentials_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the credential",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "program_slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "credential_pool_slug",
                        "in": "path",
                        "description": "slug of the credential pool",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CredentialUpdateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CredentialDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{program_slug}\/credential-pools\/{credential_pool_slug}\/credentials\/validate": {
            "post": {
                "tags": [
                    "Program Credential"
                ],
                "summary": "Credentials validate",
                "description": "Validate credentials requested by a hunter on an email pool.",
                "operationId": "post_api_programs_credential_pools_credentials_credentials_validate",
                "parameters": [
                    {
                        "name": "program_slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "credential_pool_slug",
                        "in": "path",
                        "description": "slug of the credential pool",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CredentialsCollectionValidateType"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{program_slug}\/credential-pools\/{credential_pool_slug}\/credentials\/{id}\/validate": {
            "post": {
                "tags": [
                    "Program Credential"
                ],
                "summary": "Credential validate",
                "description": "Validate a credential requested by a hunter on an email pool.",
                "operationId": "post_api_programs_credential_pools_credentials_credential_validate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the credential",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "program_slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "credential_pool_slug",
                        "in": "path",
                        "description": "slug of the credential pool",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CredentialValidateType"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{program_slug}\/credential-pools\/{credential_pool_slug}\/credentials\/revoke": {
            "post": {
                "tags": [
                    "Program Credential"
                ],
                "summary": "Credential(s) revoke",
                "description": "Revoke credentials on an email pool.",
                "operationId": "post_api_programs_credential_pools_credentials_revoke",
                "parameters": [
                    {
                        "name": "program_slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "credential_pool_slug",
                        "in": "path",
                        "description": "slug of the credential pool",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CredentialsCollectionRevokeType"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{program_slug}\/credential-pools": {
            "get": {
                "tags": [
                    "Program Credential Pool"
                ],
                "summary": "Credential pool list",
                "description": "Retrieve the list of the credential pools attached to the program.",
                "operationId": "get_api_programs_credential_pools_list",
                "parameters": [
                    {
                        "name": "program_slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/CredentialPool"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Program Credential Pool"
                ],
                "summary": "Credential pool create",
                "description": "Create new credential pool.",
                "operationId": "post_api_programs_credential_pools_create",
                "parameters": [
                    {
                        "name": "program_slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ProgramCredentialPoolCreateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CredentialPoolDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{program_slug}\/credential-pools\/detailed": {
            "get": {
                "tags": [
                    "Program Credential Pool"
                ],
                "summary": "Credential pool detailed list",
                "description": "Retrieve information about detailed credential pools attached to the program.",
                "operationId": "get_api_programs_credential_pools_detailed_list",
                "parameters": [
                    {
                        "name": "program_slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/CredentialPoolDetail"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{program_slug}\/credential-pools\/{slug}": {
            "get": {
                "tags": [
                    "Program Credential Pool"
                ],
                "summary": "Get credential pool",
                "description": "Retrieve information about a credential pool.",
                "operationId": "get_api_programs_credential_pools_detail",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the credential pool",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "program_slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CredentialPoolDetail"
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Program Credential Pool"
                ],
                "summary": "Credential pool update",
                "description": "Update a credential pool.",
                "operationId": "put_api_programs_credential_pools_update",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the credential pool",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "program_slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ProgramCredentialPoolUpdateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CredentialPoolDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{program_slug}\/credential-pools\/{slug}\/activate": {
            "post": {
                "tags": [
                    "Program Credential Pool"
                ],
                "summary": "Credential pool activate",
                "description": "Activate a credential pool.",
                "operationId": "post_api_programs_credential_pools_activate",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the credential pool",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "program_slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{program_slug}\/credential-pools\/{slug}\/revoke": {
            "post": {
                "tags": [
                    "Program Credential Pool"
                ],
                "summary": "Credential pool revoke",
                "description": "Revoke a credential pool.",
                "operationId": "post_api_programs_credential_pools_revoke",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the credential pool",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "program_slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{program_slug}\/credential-pools\/{slug}\/export\/{format}": {
            "get": {
                "tags": [
                    "Program Credential Pool"
                ],
                "summary": "Credential pool export",
                "description": "Export the list of credentials of a pool.",
                "operationId": "get_api_programs_credential_pools_export",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the credential pool",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format of the export",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "pdf|csv|json|xls",
                            "enum": [
                                "pdf",
                                "csv",
                                "json",
                                "xls"
                            ]
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[status][]=REQ&filter[status][]=F&filter[order]=ASC`",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "R",
                                            "A",
                                            "F"
                                        ]
                                    }
                                },
                                "selection": {
                                    "description": "Selection of credential ids",
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "sortBy": {
                                    "type": "string",
                                    "enum": [
                                        "login",
                                        "username",
                                        "status",
                                        "createdAt"
                                    ]
                                },
                                "order": {
                                    "type": "string",
                                    "enum": [
                                        "DESC",
                                        "ASC"
                                    ]
                                }
                            },
                            "type": "object",
                            "format": "CredentialFilter",
                            "default": {
                                "sortBy": "createdAt",
                                "order": "ASC"
                            }
                        }
                    },
                    {
                        "name": "program_slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "text\/csv": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application\/vnd.ms-excel": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application\/pdf": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/{slug}\/dashboard\/reports": {
            "get": {
                "tags": [
                    "Program Dashboard"
                ],
                "summary": "Get reports list",
                "description": "Get the list of reports",
                "operationId": "get_api_programs_dashboard_reports",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "ReportFilter",
                            "default": {
                                "sortBy": "changedAt",
                                "order": "DESC"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve reports list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/ReportHunter"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/programs\/{slug}\/dashboard\/reports\/data": {
            "get": {
                "tags": [
                    "Program Dashboard"
                ],
                "summary": "Reports data",
                "description": "Get reports data for the program",
                "operationId": "get_api_programs_dashboard_reports_data",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "ReportFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reports data",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DashboardReportsData"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/programs\/{slug}\/dashboard\/reports\/count\/{field}": {
            "get": {
                "tags": [
                    "Program Dashboard"
                ],
                "summary": "Field reports count",
                "description": "Get reports count per field of program",
                "operationId": "get_api_programs_dashboard_reports_count",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "ReportFilter",
                            "default": []
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "bugcategories|criticity|status",
                            "enum": [
                                "bugcategories",
                                "criticity",
                                "status"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve reports count list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DashboardReportsCount"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/programs\/{slug}\/dashboard\/reports\/count\/date\/{field}": {
            "get": {
                "tags": [
                    "Program Dashboard"
                ],
                "summary": "Field date reports count",
                "description": "Get reports count per field and date",
                "operationId": "get_api_programs_dashboard_reports_count_by_date",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "ReportFilter",
                            "default": []
                        }
                    },
                    {
                        "name": "field",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "criticity|rewards",
                            "enum": [
                                "criticity",
                                "rewards"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve reports count list by date",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DashboardReportsCountDateReward"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/programs\/{slug}\/dashboard\/reports\/count\/bugcategories\/{category}": {
            "get": {
                "tags": [
                    "Program Dashboard"
                ],
                "summary": "Bug status count",
                "description": "Get reports count for the bug category",
                "operationId": "get_api_programs_dashboard_reports_count_bug_type_by_category",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "ReportFilter",
                            "default": []
                        }
                    },
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve reports count list by date",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DashboardReportsCountBugCategory"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/programs\/{slug}\/dashboard\/reports\/rewards": {
            "get": {
                "tags": [
                    "Program Dashboard"
                ],
                "summary": "Rewards",
                "description": "Get dated rewards list",
                "operationId": "get_api_programs_dashboard_reports_rewards",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "DateRangeFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve reports count list by date",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DashboardReportsRewards"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/programs\/{slug}\/dashboard\/ranking": {
            "get": {
                "tags": [
                    "Program Dashboard"
                ],
                "summary": "Get program ranking",
                "description": "Retrieve the ranking for all users of the program",
                "operationId": "get_api_programs_dashboard_get_dashboard_ranking",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "[1-9]\\d*"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "DateRangeFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve reports list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/UserRanking"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/programs\/{slug}\/dashboard\/hunters\/count\/date": {
            "get": {
                "tags": [
                    "Program Dashboard"
                ],
                "summary": "Hunters evolution count",
                "description": "Get hunters evolution count by day",
                "operationId": "get_api_programs_dashboard_hunters_count_by_date",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hunters evolution count",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DashboardHuntersCountDateItem"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/programs\/{slug}\/dashboard\/hunters\/metrics": {
            "get": {
                "tags": [
                    "Program Dashboard"
                ],
                "summary": "Hunters evolution metrics",
                "description": "Get hunters evolution metrics",
                "operationId": "get_api_programs_dashboard_hunters_evolution_metrics",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "DateRangeFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hunters evolution metrics",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DashboardHuntersMetrics"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                },
                "deprecated": true
            }
        },
        "\/programs\/{slug}\/hunters": {
            "get": {
                "tags": [
                    "Program Hunter"
                ],
                "summary": "Get hunters list",
                "description": "Get the program hunters list",
                "operationId": "get_api_programs_hunters_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the hunters list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Member"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/hunters\/revoked": {
            "get": {
                "tags": [
                    "Program Hunter"
                ],
                "summary": "Get revoked hunters list",
                "description": "Get the revoked program hunters list",
                "operationId": "get_api_programs_hunters_revoked",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the revoked hunters list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Member"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/hunters\/{id}": {
            "delete": {
                "tags": [
                    "Program Hunter"
                ],
                "summary": "Delete hunter",
                "description": "Delete program hunter",
                "operationId": "delete_api_programs_hunters_delete",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete program hunter"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/hunters\/users-available": {
            "get": {
                "tags": [
                    "Program Hunter"
                ],
                "summary": "Get users available",
                "description": "Get available users for hunting",
                "operationId": "get_api_programs_hunters_users_available_list",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[kycStatus]=V&filter[geographicalArea]=EU&filter[sortBy]=last_hacktivity&filter[order]=DESC&page=1`",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "properties": {
                                "kycStatus": {
                                    "type": "string",
                                    "enum": [
                                        "U",
                                        "P",
                                        "V"
                                    ]
                                },
                                "geographicalArea": {
                                    "type": "string",
                                    "enum": [
                                        "EU"
                                    ]
                                },
                                "order": {
                                    "type": "string",
                                    "enum": [
                                        "DESC",
                                        "ASC"
                                    ]
                                },
                                "sortBy": {
                                    "type": "string",
                                    "enum": [
                                        "points",
                                        "last_hacktivity"
                                    ]
                                }
                            },
                            "type": "object",
                            "format": "UserFilter",
                            "default": {
                                "sortBy": "last_hacktivity",
                                "order": "DESC"
                            }
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve users available for hunting",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/Ranking"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/Pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/hunters\/submitted-once": {
            "get": {
                "tags": [
                    "Program Hunter"
                ],
                "summary": "Get the active hunters list",
                "description": "Get the active hunters list",
                "operationId": "get_api_programs_hunters_submitted_once_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the list of active hunters",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/UserEmbed"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/hunters\/invitations": {
            "get": {
                "tags": [
                    "Program Hunter Invitation"
                ],
                "summary": "Get hunter invitation list",
                "description": "Get the program hunter invitation list",
                "operationId": "get_api_programs_hunters_invitations_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the hunters invitation list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Invitation"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Program Hunter Invitation"
                ],
                "summary": "Create program hunter invitation",
                "description": "Create program hunter invitation",
                "operationId": "post_api_programs_hunters_invitations_create",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ProgramHunterInvitationCreateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create program hunter invitation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Invitation"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/hunters\/invitations\/{id}": {
            "delete": {
                "tags": [
                    "Program Hunter Invitation"
                ],
                "summary": "Delete program hunter invitation",
                "description": "Delete program hunter invitation",
                "operationId": "delete_api_programs_hunters_invitations_delete",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete program hunter invitation"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/hunters\/invitations\/group": {
            "post": {
                "tags": [
                    "Program Hunter Invitation"
                ],
                "summary": "Group hunter invitation creation",
                "description": "Create program hunter invitation",
                "operationId": "post_api_programs_hunters_invitations_group_create",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "properties": {
                                    "group": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create program hunter group invitation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Invitation"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/hunters\/invitations\/add\/{user_slug}": {
            "post": {
                "tags": [
                    "Program Hunter Invitation"
                ],
                "summary": "Group hunter invitation creation",
                "description": "Create program hunter invitation",
                "operationId": "post_api_programs_hunters_invitations_create_user_invitation",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create program hunter invitation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Invitation"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/hunters\/messages": {
            "get": {
                "tags": [
                    "Program Hunter Message"
                ],
                "summary": "List program hunter messages.",
                "description": "Retrieve list of hunter messages of the program.",
                "operationId": "get_api_programs_hunters_messages_list",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "<sub>Example:<\/sub> `?filter[status][]=D&filter[status][]=P&filter[order]=ASC`",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "D",
                                        "X",
                                        "P",
                                        "R",
                                        "V",
                                        "S"
                                    ]
                                },
                                "sortFields": {
                                    "type": "string",
                                    "enum": [
                                        "lastUserActionAt",
                                        "owner"
                                    ]
                                },
                                "order": {
                                    "type": "string",
                                    "enum": [
                                        "DESC",
                                        "ASC"
                                    ]
                                }
                            },
                            "type": "object",
                            "format": "ProgramHunterMessageFilter",
                            "default": {
                                "sortBy": "lastUserActionAt",
                                "order": "DESC"
                            }
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hunter message list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/ProgramHunterMessage"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Program Hunter Message"
                ],
                "summary": "Create hunter message",
                "description": "Create a new hunter message for the program",
                "operationId": "post_api_programs_hunters_messages_create",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ProgramHunterMessageType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Content of the new hunter message",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProgramHunterMessageDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/hunters\/messages\/{id}": {
            "get": {
                "tags": [
                    "Program Hunter Message"
                ],
                "summary": "Get hunter message",
                "description": "Get hunter message attached to id passed in path",
                "operationId": "get_api_programs_hunters_messages_get",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hunter Message information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProgramHunterMessageDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Program Hunter Message"
                ],
                "summary": "Update hunter message",
                "description": "Update hunter message attached to id passed in path",
                "operationId": "put_api_programs_hunters_messages_update",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ProgramHunterMessageType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Content of the new hunter message",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProgramHunterMessageDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Program Hunter Message"
                ],
                "summary": "Remove hunter message",
                "description": "Remove hunter message attached to id passed in path",
                "operationId": "delete_api_programs_hunters_messages_delete",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#\/components\/responses\/204-NoContent"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/hunters\/messages\/{id}\/confirm": {
            "post": {
                "tags": [
                    "Program Hunter Message"
                ],
                "summary": "Confirm hunter message",
                "description": "Confirm the hunter message attached to id passed in path",
                "operationId": "post_api_programs_hunters_messages_confirm",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ProgramHunterMessageType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Content of the new hunter message",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProgramHunterMessageDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/members": {
            "get": {
                "tags": [
                    "Program Member"
                ],
                "summary": "Get members list",
                "description": "Get the program members list",
                "operationId": "get_api_programs_members_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the members list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Member"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/members\/revoked": {
            "get": {
                "tags": [
                    "Program Member"
                ],
                "summary": "Get revoked members list",
                "description": "Get the revoked program members list",
                "operationId": "get_api_programs_members_revoked",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the revoked members list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Member"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/members\/{id}": {
            "delete": {
                "tags": [
                    "Program Member"
                ],
                "summary": "Delete member",
                "description": "Delete program member",
                "operationId": "delete_api_programs_members_delete",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete program member"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/members\/triagers": {
            "post": {
                "tags": [
                    "Program Member"
                ],
                "summary": "Add YesWeHack triagers",
                "description": "Add YesWeHack triagers to the program",
                "operationId": "post_api_programs_members_add_triagers",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "YesWeHack triagers added"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/members\/invitations": {
            "get": {
                "tags": [
                    "Program Member Invitation"
                ],
                "summary": "Get member invitation list",
                "description": "Get the program member invitation list",
                "operationId": "get_api_programs_members_invitations_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the members invitation list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Invitation"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Program Member Invitation"
                ],
                "summary": "Create program member invitation",
                "description": "Create program member invitation",
                "operationId": "post_api_programs_members_invitations_create",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ProgramMemberInvitationCreateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create program member invitation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Invitation"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/members\/invitations\/{id}": {
            "delete": {
                "tags": [
                    "Program Member Invitation"
                ],
                "summary": "Delete program member invitation",
                "description": "Delete program member invitation",
                "operationId": "delete_api_programs_members_invitations_delete",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete program member invitation"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/members\/invitations\/group": {
            "post": {
                "tags": [
                    "Program Member Invitation"
                ],
                "summary": "Group member invitation creation",
                "description": "Create program member invitation",
                "operationId": "post_api_programs_members_invitations_group_create",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "properties": {
                                    "group": {
                                        "type": "integer"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "ROLE_PROGRAM_MANAGER",
                                            "ROLE_PROGRAM_AUDITOR",
                                            "ROLE_PROGRAM_VIEWER",
                                            "ROLE_PROGRAM_TRIAGER"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create program member group invitation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Invitation"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/pentest-campaigns": {
            "get": {
                "tags": [
                    "Program"
                ],
                "summary": "Get campaign list",
                "description": "Get the campaign list for a program",
                "operationId": "get_api_programs_pentest_campaigns_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List the program's campaigns",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/PentestCampaign"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Program"
                ],
                "summary": "Create a campaign",
                "description": "Create a campaign for a program",
                "operationId": "post_api_programs_pentest_campaigns_create",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pentest Campaign detail",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PentestCampaignDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/pentest-campaigns\/{id}": {
            "get": {
                "tags": [
                    "Program"
                ],
                "summary": "Get campaign detail",
                "description": "Get the campaign detail for a program",
                "operationId": "get_api_programs_pentest_campaigns_detail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pentest Campaign detail",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PentestCampaignDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Program"
                ],
                "summary": "Update a campaign",
                "description": "Update a campaign for a program",
                "operationId": "put_api_programs_pentest_campaigns_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PentestCampaignUpdateType"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/pentest-campaigns\/potential-leaders": {
            "get": {
                "tags": [
                    "Program"
                ],
                "summary": "Get potential leaders",
                "description": "Get potential leaders for a campaign",
                "operationId": "get_api_programs_pentest_campaigns_potential_leaders",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the list of potential leaders",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/UserEmbed"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/pentest-campaigns\/{id}\/lead": {
            "post": {
                "tags": [
                    "Program"
                ],
                "summary": "Select or remove Pentest leader",
                "description": "Select or remove Pentest leader",
                "operationId": "post_api_programs_pentest_campaigns_update_lead",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pentest Campaign detail",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PentestCampaignDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/pentest-campaigns\/{id}\/draft\/export": {
            "post": {
                "tags": [
                    "Program"
                ],
                "summary": "Create draft report",
                "description": "Create draft report for a campaign",
                "operationId": "post_api_programs_pentest_campaigns_export_draft_pentest_report",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/{slug}\/pentest-campaigns\/{id}\/final\/export": {
            "post": {
                "tags": [
                    "Program"
                ],
                "summary": "Create final report",
                "description": "Create final report for a campaign",
                "operationId": "post_api_programs_pentest_campaigns_export_final_pentest_report",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/{slug}\/pentest-campaigns\/{id}\/custom-reports": {
            "post": {
                "tags": [
                    "Program"
                ],
                "summary": "Import a custom report",
                "description": "Import a custom report",
                "operationId": "post_api_programs_pentest_campaigns_add_pentest_custom_report",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PentestCustomReportType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Custom report information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PentestCustomReportResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/{slug}\/pentest-campaigns\/{id}\/custom-reports\/{name}": {
            "delete": {
                "tags": [
                    "Program"
                ],
                "summary": "Delete a custom report",
                "description": "Delete a custom report",
                "operationId": "delete_api_programs_pentest_campaigns_delete_pentest_custom_report",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name of the custom report",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "File deleted"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/{slug}\/pentest-campaigns\/{id}\/logo": {
            "post": {
                "tags": [
                    "Program"
                ],
                "summary": "Add logos in a pentest",
                "description": "Send the company and supplier logos for a pentest",
                "operationId": "post_api_programs_pentest_campaigns_add_logo",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PentestCampaignLogoType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Pentest Campaign detail",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PentestCampaignDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/{slug}\/pentest-campaigns\/{id}\/{type}\/logo": {
            "delete": {
                "tags": [
                    "Program"
                ],
                "summary": "Remove pentest logos",
                "description": "Remove pentest logos",
                "operationId": "delete_api_programs_pentest_campaigns_remove_logo",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "supplier|company|all",
                            "enum": [
                                "supplier",
                                "company",
                                "all"
                            ]
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/{slug}\/pentest-campaigns\/{id}\/{action}": {
            "post": {
                "tags": [
                    "Program"
                ],
                "summary": "Manage a campaign",
                "description": "Manage a campaign",
                "operationId": "post_api_programs_pentest_campaigns_manage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "start|pause|end",
                            "enum": [
                                "start",
                                "pause",
                                "end"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pentest Campaign detail",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PentestCampaignDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/pentest-campaigns\/{id}\/customize": {
            "post": {
                "tags": [
                    "Program"
                ],
                "summary": "Customize a report",
                "description": "Customize a pentest report",
                "operationId": "post_api_programs_pentest_campaigns_customize",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PentestCampaignCustomizeType"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/methodologies": {
            "post": {
                "tags": [
                    "Program Methodology"
                ],
                "summary": "Program methodology creation",
                "description": "Create program methodology",
                "operationId": "post_api_programs_pentest_methodology_add",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ProgramPentestMethodologyType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Program methodology created",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PentestMethodology"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/methodologies\/{id}": {
            "post": {
                "tags": [
                    "Program Methodology"
                ],
                "summary": "Program methodology update",
                "description": "Update program methodology",
                "operationId": "post_api_programs_pentest_methodology_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ProgramPentestMethodologyType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Program methodology updated",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/PentestMethodology"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Program Methodology"
                ],
                "summary": "Program methodology deletion",
                "description": "Delete program methodology",
                "operationId": "delete_api_programs_pentest_methodology_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#\/components\/responses\/204-NoContent"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/{slug}\/reports\/draft": {
            "get": {
                "tags": [
                    "Report Draft"
                ],
                "summary": "Get report draft",
                "description": "Retrieve report draft",
                "operationId": "get_api_programs_reports_draft_create",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report draft information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportDraft"
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "put": {
                "tags": [
                    "Report Draft"
                ],
                "summary": "Update report draft",
                "description": "Update report draft",
                "operationId": "put_api_programs_reports_draft_update",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report draft information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportDraft"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/reports\/draft\/validate": {
            "post": {
                "tags": [
                    "Report Draft"
                ],
                "summary": "Validate report draft",
                "description": "Validate report draft",
                "operationId": "post_api_programs_reports_draft_validate",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report draft information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportDraftValidate"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/reports\/draft\/files": {
            "post": {
                "tags": [
                    "Report Draft"
                ],
                "summary": "Add file attachment report draft",
                "description": "Add file to report draft",
                "operationId": "post_api_programs_reports_draft_post_file",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportDraftAttachmentType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Attachment file information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Attachment"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/{slug}\/reports\/draft\/files\/{name}": {
            "delete": {
                "tags": [
                    "Report Draft"
                ],
                "summary": "Delete file attachment report draft",
                "description": "Delete file attachment for report draft",
                "operationId": "delete_api_programs_reports_draft_delete_file",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File deleted"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/{program_slug}\/report-imports": {
            "get": {
                "tags": [
                    "Program Report Import"
                ],
                "summary": "Get program report imports list",
                "description": "Get the list of programs report imports",
                "operationId": "get_api_programs_report_imports_list",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 25,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    },
                    {
                        "name": "program_slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve program report imports list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/ReportImportDetail"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/Pagination"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Program Report Import"
                ],
                "summary": "Program report import creation",
                "description": "Create a program report import",
                "operationId": "post_api_programs_report_imports_create",
                "parameters": [
                    {
                        "name": "program_slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportImportCreateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Retrieve created report import",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportImport"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/{program_slug}\/report-imports\/{report_import_id}\/validate": {
            "post": {
                "tags": [
                    "Program Report Import"
                ],
                "summary": "Program report import validation",
                "description": "Validate a program report import",
                "operationId": "post_api_programs_report_imports_validate",
                "parameters": [
                    {
                        "name": "program_slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "report_import_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportImportValidateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Retrieve validated report import",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportImport"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/programs\/{program_slug}\/report-imports\/count": {
            "get": {
                "tags": [
                    "Program Report Import"
                ],
                "summary": "Program reports imports status count",
                "description": "Get program report imports status count",
                "operationId": "get_api_programs_report_imports_count",
                "parameters": [
                    {
                        "name": "program_slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve program report imports count per status",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportImportCount"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/report-templates": {
            "get": {
                "tags": [
                    "Program Report Template"
                ],
                "summary": "get Program Report Template list",
                "description": "Get the list of report templates available for current program",
                "operationId": "get_api_program_report_templates_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of report templates available for current program",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ReportTemplate"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Program Report Template"
                ],
                "summary": "Program report template creation",
                "description": "Create a program report template",
                "operationId": "post_api_program_report_templates_create",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ProgramReportTemplateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Retrieve created program report template",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportTemplate"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/report-templates\/{id}": {
            "put": {
                "tags": [
                    "Program Report Template"
                ],
                "summary": "Program report template update",
                "description": "Update a program report template",
                "operationId": "put_api_program_report_templates_update",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ProgramReportTemplateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Retrieve updated program report template",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportTemplate"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/versions": {
            "get": {
                "tags": [
                    "Program Versions"
                ],
                "summary": "get program version list",
                "description": "Retrieve the versions of program",
                "operationId": "get_api_programs_version_list",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The versions list of program",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ProgramVersion"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/programs\/{slug}\/versions\/last-pending": {
            "get": {
                "tags": [
                    "Program Versions"
                ],
                "summary": "get last pending program version",
                "description": "Retrieve the last pending version of program",
                "operationId": "get_api_programs_version_last_pending",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "slug of the program",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The last pending program version",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProgramVersion"
                                }
                            }
                        }
                    },
                    "204": {
                        "$ref": "#\/components\/responses\/204-NoContent"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    }
                }
            }
        },
        "\/programs\/{slug}\/wallet": {
            "get": {
                "tags": [
                    "Program Wallet"
                ],
                "summary": "Wallet information",
                "description": "Retrieve balance amount information of the wallet attached to the program.",
                "operationId": "get_api_programs_wallet_get",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve wallet information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Wallet"
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                },
                "deprecated": true
            }
        },
        "\/reports\/{id}\/collaborators": {
            "get": {
                "tags": [
                    "Report Collaborator"
                ],
                "summary": "Get collaborators list",
                "description": "Get the report collaborators list",
                "operationId": "get_api_reports_collaborators_list",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the collaborators list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Member"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/collaborators\/revoked": {
            "get": {
                "tags": [
                    "Report Collaborator"
                ],
                "summary": "Get revoked collaborators list",
                "description": "Get the revoked report collaborators list",
                "operationId": "get_api_reports_collaborators_revoked",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the revoked collaborators list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Member"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Get report detail",
                "description": "Retrieve information of report",
                "operationId": "get_api_reports_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the report",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/export\/{format}": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Export report",
                "description": "Export the content of report",
                "operationId": "get_api_reports_export_reports",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the report",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format of the export",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "csv|json|xls|pdf",
                            "enum": [
                                "csv",
                                "json",
                                "xls",
                                "pdf"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "text\/csv": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application\/vnd.ms-excel": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-BadRequest"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/reports\/{id}\/comments": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Create comment",
                "description": "Create comment",
                "operationId": "post_api_reports_comment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the report",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportCommentType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create report comment",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/assignees\/available": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Get available member to assign",
                "description": "Get available member to assign",
                "operationId": "get_api_reports_assignees_available",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the report",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get available member to assign",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/components\/schemas\/Member"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/assignees": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Update assignees",
                "description": "Update assignees",
                "operationId": "post_api_reports_assignees_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the report",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportAssignType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update assignees",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/attachments": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Add attachment",
                "description": "Add an attachment on comment",
                "operationId": "post_api_reports_add_attachments_comment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the report",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportAttachmentType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Uploaded attachment to report log",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Attachment"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-BadRequest"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/reports\/{id}\/description\/attachments": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Add attachment",
                "description": "Add an attachment to the report",
                "operationId": "post_api_reports_add_attachments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the report",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportAttachmentType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Uploaded attachment to report",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Attachment"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-BadRequest"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/reports\/{id}\/status": {
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Status update",
                "description": "Update status",
                "operationId": "put_api_reports_update_status",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the report",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#\/components\/schemas\/ReportStatusUpdateType"
                                    },
                                    {
                                        "properties": {
                                            "duplicate_of": {
                                                "description": "When the status is equal to `duplicate`.",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Status updated",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/auto-close": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Auto close report",
                "description": "Auto close report",
                "operationId": "post_api_reports_auto_close_report",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the report",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportCommentType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Auto close report",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/transitions": {
            "get": {
                "tags": [
                    "Report Status Transitions"
                ],
                "summary": "Get report status transitions list",
                "description": "Get the report status transitions list",
                "operationId": "get_api_reports_transitions",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the report status transitions list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ReportStatusTransitions"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/logs": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Report logs list",
                "description": "List the report logs for the given report.",
                "operationId": "get_api_reports_get_logs",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the report.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report logs list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ReportLogDetail"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    }
                }
            }
        },
        "\/reports\/{id}\/duplicate-list": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Duplicate list by this report",
                "description": "Give the list of reports duplicate by this report",
                "operationId": "get_api_reports_get_duplicate_list",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the report",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 1,
                            "pattern": "^([1-9][0-9]{0,3}|10000)$"
                        }
                    },
                    {
                        "name": "resultsPerPage",
                        "in": "query",
                        "description": "Number of results per page to show.",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": 50,
                            "pattern": "^[1-9][0-9]?$|^100$"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": true,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "format": "ReportFilter",
                            "default": []
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available reports",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ReportDuplicate"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    }
                }
            }
        },
        "\/reports\/{id}\/reward": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Reward report",
                "description": "Reward report",
                "operationId": "post_api_reports_reward",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the report",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#\/components\/schemas\/ReportRewardType"
                                    },
                                    {
                                        "properties": {
                                            "bounty_reward_amount": {
                                                "description": "When reward type is equal to `B`",
                                                "type": "integer"
                                            },
                                            "billing_tags": {
                                                "description": "When reward type is equal to `B`",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reward report",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "503": {
                        "$ref": "#\/components\/responses\/503-ServiceUnavailable"
                    }
                }
            }
        },
        "\/reports\/{id}\/bonus": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Set report bonus",
                "description": "Set bonus of a report",
                "operationId": "post_api_reports_bonus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportBonusType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get a report Log",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-BadRequest"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    }
                }
            }
        },
        "\/reports\/{id}\/cvss\/bonus": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Set cvss bonus",
                "description": "Set a cvss bonus of a report",
                "operationId": "post_api_reports_cvss_bonus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a report Log",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    }
                }
            }
        },
        "\/reports\/{id}\/priority": {
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Update priority report",
                "description": "Update priority of a report",
                "operationId": "put_api_reports_update_priority",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportPriorityUpdateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get a report Log",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-BadRequest"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    }
                }
            }
        },
        "\/reports\/{id}\/priority\/restore": {
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Restore priority report",
                "description": "Restore priority suggested of a report from asm source",
                "operationId": "put_api_reports_restore_priority_suggested",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a report Log",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-BadRequest"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    }
                }
            }
        },
        "\/reports\/{id}\/cvss": {
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Update Cvss report",
                "description": "Update Cvss of a report",
                "operationId": "put_api_reports_update_cvss",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportCvssUpdateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get a report Log",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogDetail"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    }
                }
            }
        },
        "\/reports\/{id}\/title": {
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Update title report",
                "description": "Update title of a report",
                "operationId": "put_api_reports_update_title",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportDetailsUpdateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get a report Log",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogDetail"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Report has not been modified by the request payload"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    }
                }
            }
        },
        "\/reports\/{id}\/details": {
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Update details report",
                "description": "Update details of a report",
                "operationId": "put_api_reports_update_details",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportDetailsUpdateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get a report Log",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogDetail"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Report has not been modified by the request payload"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    }
                }
            }
        },
        "\/reports\/{id}\/mark-as": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Mark a report",
                "description": "Mark a report as Unread or Read",
                "operationId": "post_api_reports_mark_as",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportMarkAsType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get a report Log",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-BadRequest"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    }
                }
            }
        },
        "\/reports\/{id}\/tags": {
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Update tags",
                "description": "Update tags for a report",
                "operationId": "put_api_reports_tags",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportTagsType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get a report Log",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogDetail"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Report has not been modified by the request payload"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    }
                }
            }
        },
        "\/reports\/{id}\/billing-tags": {
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Update billing tags",
                "description": "Update billings tags for reward allocation",
                "operationId": "put_api_reports_billing-tags",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the report",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportBillingTagsType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Report billing tags",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/patch-status": {
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Update patch status",
                "description": "Update patch status for a report",
                "operationId": "put_api_reports_patch_status",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportPatchStatusUpdateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get a report Log",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-BadRequest"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    }
                }
            }
        },
        "\/reports\/{id}\/tracking-status": {
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Report tracking status update",
                "description": "Update tracking status of report",
                "operationId": "put_api_reports_tracking_status",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the reportLog",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportTrackingStatusUpdateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update tracking status of report",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ReportLogDetail"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/tracker-update": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Create tracker",
                "description": "Create a tracker update for a report",
                "operationId": "post_api_reports_tracker_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportTrackerUpdateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get a report Log",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-BadRequest"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    }
                }
            }
        },
        "\/reports\/{id}\/tracker-message": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Report tracker message creation",
                "description": "Create report tracker message",
                "operationId": "post_api_reports_tracker_message",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the report",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportTrackerMessageType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create report tracker message",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/description": {
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Update description of a pentest report",
                "description": "Update description of a pentest report",
                "operationId": "put_api_reports_update_description",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportDescriptionUpdateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get a report Log",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogDetail"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Report has not been modified by the request payload"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    }
                }
            }
        },
        "\/reports\/{id}\/transfer": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Transfer report",
                "description": "Transfer report to another programs",
                "operationId": "post_api_reports_transfer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportTransferFormType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Details of report after transfer",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ReportDetail"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/transfer\/available-programs": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "List of available programs",
                "description": "List of available programs to transfer report",
                "operationId": "get_api_reports_available_programs_for_transfer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Report id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available programs for transfer",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ProgramReport"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/ask-for-fix-verification-status-update": {
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Report ask for fix verification status update",
                "description": "Update ask for fix verification status of report",
                "operationId": "put_api_reports_ask_for_fix_verification_status_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the report",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportAskForFixVerificationStatusUpdateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update ask for fix verification status of report",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ReportLogDetail"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reportlogs\/{id}": {
            "put": {
                "tags": [
                    "Report Log"
                ],
                "summary": "Report comment update",
                "description": "Update comment of a report",
                "operationId": "put_api_report_logs_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of the report log",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report comment updated",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ReportLogUpdate"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/members": {
            "get": {
                "tags": [
                    "Report Member"
                ],
                "summary": "Get members list",
                "description": "Get the report members list",
                "operationId": "get_api_reports_members_list",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the members list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Member"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/members\/revoked": {
            "get": {
                "tags": [
                    "Report Member"
                ],
                "summary": "Get revoked members list",
                "description": "Get the revoked report members list",
                "operationId": "get_api_reports_members_revoked",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the revoked members list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Member"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/members\/{member_id}": {
            "delete": {
                "tags": [
                    "Report Member"
                ],
                "summary": "Delete member",
                "description": "Delete report member",
                "operationId": "delete_api_reports_members_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "member_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete report member"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/members\/invitations": {
            "get": {
                "tags": [
                    "Report Member Invitation"
                ],
                "summary": "Get member invitation list",
                "description": "Get the report member invitation list",
                "operationId": "get_api_reports_members_invitations_list",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the members invitation list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Invitation"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            },
            "post": {
                "tags": [
                    "Report Member Invitation"
                ],
                "summary": "Create report member invitation",
                "description": "Create report member invitation",
                "operationId": "post_api_reports_members_invitations_create",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ReportMemberInvitationCreateType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create report member invitation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Invitation"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/members\/invitations\/{invitation_id}": {
            "delete": {
                "tags": [
                    "Report Member Invitation"
                ],
                "summary": "Delete report member invitation",
                "description": "Delete report member invitation",
                "operationId": "delete_api_reports_members_invitations_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "invitation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete report member invitation"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/400-ValidationFailed"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/members\/invitations\/group": {
            "post": {
                "tags": [
                    "Report Member Invitation"
                ],
                "summary": "Group member invitation creation",
                "description": "Create report member invitation",
                "operationId": "post_api_reports_members_invitations_group_create",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "properties": {
                                    "group": {
                                        "type": "integer"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "ROLE_REPORT_AUDITOR",
                                            "ROLE_REPORT_VIEWER"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create report member group invitation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/Invitation"
                                            }
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/403-AccessDenied"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        },
        "\/reports\/{id}\/response-templates": {
            "get": {
                "tags": [
                    "Report Response Template"
                ],
                "summary": "Get Response Template list",
                "description": "Get the list of current report's response templates",
                "operationId": "get_api_reports_response_templates_list",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "report id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of current report's response templates",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ReportTemplate"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/401-UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/404-NotFound"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "SupportedLanguages": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "ProfileUrls": {
                "properties": {
                    "github": {
                        "type": "string"
                    },
                    "twitter": {
                        "type": "string"
                    },
                    "jobboard": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Countries": {
                "properties": {
                    "code": {
                        "type": "string",
                        "format": "ISO 3166-1 alpha-2"
                    },
                    "name": {
                        "type": "string"
                    },
                    "mangopay_blacklisted": {
                        "type": "boolean"
                    },
                    "phone": {
                        "type": "integer"
                    },
                    "pattern": {
                        "type": "string"
                    },
                    "example": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserReportClaimDetail": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "report": {
                        "$ref": "#\/components\/schemas\/ReportClaim"
                    },
                    "processed_at": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "UserPersonalAccessTokenRole": {
                "properties": {
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramPersonalAccessToken"
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitEmbed"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserPersonalAccessToken": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "expiration_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "revoked": {
                        "type": "boolean"
                    },
                    "revoked_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/UserPersonalAccessTokenRole"
                        }
                    },
                    "plain_token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserTriageOwner": {
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "avatar": {
                        "$ref": "#\/components\/schemas\/File"
                    }
                },
                "type": "object"
            },
            "UserUsername": {
                "properties": {
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserRanking": {
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "kyc_status": {
                        "type": "string"
                    },
                    "hunter_profile": {
                        "$ref": "#\/components\/schemas\/HunterProfileVisibility"
                    },
                    "avatar": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "points": {
                        "type": "integer"
                    },
                    "rank": {
                        "type": "integer"
                    },
                    "hunter_nationality": {
                        "type": "string"
                    },
                    "nb_reports": {
                        "type": "integer"
                    },
                    "nb_rewards": {
                        "type": "integer"
                    },
                    "nb_bounties": {
                        "type": "integer"
                    },
                    "nb_gifts": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UserPersonalInformation": {
                "properties": {
                    "shirt_size": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserMemberEmbed": {
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "kyc_status": {
                        "type": "string"
                    },
                    "totp_enabled": {
                        "type": "boolean"
                    },
                    "hunter_profile": {
                        "$ref": "#\/components\/schemas\/HunterProfileVisibility"
                    },
                    "avatar": {
                        "$ref": "#\/components\/schemas\/File"
                    }
                },
                "type": "object"
            },
            "UserEmbed": {
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "kyc_status": {
                        "type": "string"
                    },
                    "hunter_profile": {
                        "$ref": "#\/components\/schemas\/HunterProfileVisibility"
                    },
                    "avatar": {
                        "$ref": "#\/components\/schemas\/File"
                    }
                },
                "type": "object"
            },
            "UserDetail": {
                "properties": {
                    "total_bu": {
                        "type": "integer"
                    },
                    "has_wallet_eur": {
                        "type": "boolean"
                    },
                    "has_wallet_usd": {
                        "type": "boolean"
                    },
                    "has_vpn_password": {
                        "type": "boolean"
                    },
                    "information_completed": {
                        "type": "boolean"
                    },
                    "membership_details": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "username": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "birthdate": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "nationality": {
                        "type": "string"
                    },
                    "country_of_residence": {
                        "type": "string"
                    },
                    "hunter_profile": {
                        "$ref": "#\/components\/schemas\/HunterProfileVisibility"
                    },
                    "kyc_status": {
                        "type": "string"
                    },
                    "avatar": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "totp_enabled": {
                        "type": "boolean"
                    },
                    "max_bu_number": {
                        "type": "integer"
                    },
                    "pending_invitation_number": {
                        "type": "integer"
                    },
                    "pending_report_claim_number": {
                        "type": "integer"
                    },
                    "program_hunter_message_enabled": {
                        "type": "boolean"
                    },
                    "rights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "visible": {
                        "type": "boolean"
                    },
                    "restrict_session_access": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "UserCommon": {
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "hunter_profile": {
                        "$ref": "#\/components\/schemas\/HunterProfileVisibility"
                    }
                },
                "type": "object"
            },
            "UserBilling": {
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "nationality": {
                        "type": "string"
                    },
                    "billing_type": {
                        "type": "string"
                    },
                    "billing_address": {
                        "$ref": "#\/components\/schemas\/Address"
                    },
                    "company_name": {
                        "type": "string"
                    },
                    "subject_to_vat": {
                        "type": "boolean"
                    },
                    "company_siret": {
                        "type": "string"
                    },
                    "company_vat_number": {
                        "type": "string"
                    },
                    "company_registration_number": {
                        "type": "string"
                    },
                    "company_rcs_immatriculation": {
                        "type": "boolean"
                    },
                    "company_rcs_city": {
                        "type": "string"
                    },
                    "company_legal_form": {
                        "type": "string"
                    },
                    "billing_mandate_accepted": {
                        "type": "boolean"
                    },
                    "tax_identification_number": {
                        "type": "string"
                    },
                    "birth_city": {
                        "type": "string"
                    },
                    "birth_country": {
                        "type": "string"
                    },
                    "tax_identification_number_valid": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserAvatar": {
                "properties": {
                    "avatar": {
                        "$ref": "#\/components\/schemas\/File"
                    }
                },
                "type": "object"
            },
            "UserAuthentication": {
                "properties": {
                    "totp_enabled": {
                        "type": "boolean"
                    },
                    "totp": {
                        "$ref": "#\/components\/schemas\/Totp"
                    }
                },
                "type": "object"
            },
            "TransactionManager": {
                "properties": {
                    "mango_id": {
                        "type": "string"
                    },
                    "report_local_id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "credited_funds": {
                        "type": "integer"
                    },
                    "debited_funds": {
                        "type": "integer"
                    },
                    "declared_debited_funds": {
                        "type": "integer"
                    },
                    "declared_fees": {
                        "type": "integer"
                    },
                    "nature": {
                        "type": "string"
                    },
                    "transaction_type": {
                        "type": "string"
                    },
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramEmbed"
                    },
                    "author": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "user_rewarded": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "billing_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "creation_date": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "TransactionHunter": {
                "properties": {
                    "mango_id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "credited_funds": {
                        "type": "integer"
                    },
                    "nature": {
                        "type": "string"
                    },
                    "transaction_type": {
                        "type": "string"
                    },
                    "result_message": {
                        "type": "string"
                    },
                    "vat_transaction": {
                        "$ref": "#\/components\/schemas\/TransactionHunter"
                    },
                    "pdf": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "creation_date": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "Sponsor": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "logo": {
                        "$ref": "#\/components\/schemas\/File"
                    }
                },
                "type": "object"
            },
            "SlackWorkspaceUrl": {
                "properties": {
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SlackWorkspaceEmbed": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SlackWorkspace": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "error_message": {
                        "type": "string"
                    },
                    "added_by": {
                        "$ref": "#\/components\/schemas\/UserCommon"
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitNameEmbed"
                    },
                    "validator": {
                        "type": "string"
                    },
                    "validation_selector": {
                        "type": "string"
                    },
                    "validated_at": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "SlackChannelEmbed": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SlackChannel": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "code": {
                        "type": "string"
                    },
                    "slack_workspace": {
                        "$ref": "#\/components\/schemas\/SlackWorkspaceEmbed"
                    },
                    "validated": {
                        "type": "boolean"
                    },
                    "validated_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "added_by": {
                        "$ref": "#\/components\/schemas\/UserCommon"
                    }
                },
                "type": "object"
            },
            "Signature": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "signed_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "pdf": {
                        "$ref": "#\/components\/schemas\/File"
                    }
                },
                "type": "object"
            },
            "VulnpediaStats": {
                "properties": {
                    "vulnerabilities": {
                        "type": "integer"
                    },
                    "new_vulnerabilities": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceVulnerabilityDetails": {
                "properties": {
                    "cve_id": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "publication_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "modification_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "cvss_vector": {
                        "type": "string"
                    },
                    "cvss_base": {
                        "type": "number",
                        "format": "float"
                    },
                    "cvss_impact": {
                        "type": "number",
                        "format": "float"
                    },
                    "cvss_exploit": {
                        "type": "number",
                        "format": "float"
                    },
                    "cvss_criticity": {
                        "type": "string"
                    },
                    "epss": {
                        "type": "number",
                        "format": "float"
                    },
                    "data": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "cve_details": {
                        "$ref": "#\/components\/schemas\/CveDetailsResponseDto"
                    },
                    "cwe_list": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/AttackSurfaceCweEmbeddedResponseDto"
                        }
                    }
                },
                "type": "object"
            },
            "AttackSurfaceVulnerability": {
                "properties": {
                    "cve_id": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "publication_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "cvss_base": {
                        "type": "number",
                        "format": "float"
                    },
                    "cvss_criticity": {
                        "type": "string"
                    },
                    "epss": {
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceTechnologyEmbedded": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceTechnology": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "asset_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "asset_value": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "creation_date": {
                        "type": "string"
                    },
                    "confirmation_date": {
                        "type": "string"
                    },
                    "cpe_vector": {
                        "type": "string"
                    },
                    "part": {
                        "type": "string"
                    },
                    "vendor": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "domain_id": {
                        "type": "integer"
                    },
                    "domain_fqdn": {
                        "type": "string"
                    },
                    "service": {
                        "type": "string"
                    },
                    "service_id": {
                        "type": "integer"
                    },
                    "url": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "findings_severities": {
                        "$ref": "#\/components\/schemas\/AttackSurfaceFindingSeverityCounter"
                    },
                    "findings_priorities": {
                        "$ref": "#\/components\/schemas\/AttackSurfaceFindingPriorityCounter"
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitNameEmbed"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceTechnologyCounter": {
                "properties": {
                    "technologies": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "business_unit_id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "type": "object"
            },
            "AttackSurfaceServiceCountersDetails": {
                "properties": {
                    "bu_slug": {
                        "type": "string"
                    },
                    "protocol_name": {
                        "type": "string"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceServiceCounters": {
                "properties": {
                    "total": {
                        "type": "integer"
                    },
                    "counters": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/AttackSurfaceServiceCountersDetails"
                        }
                    }
                },
                "type": "object"
            },
            "AttackSurfaceService": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "creation_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "modification_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "customer_status_updated_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "internal_status_updated_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "invisible_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "visible_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "port": {
                        "type": "string"
                    },
                    "technologies": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/AttackSurfaceTechnologyEmbedded"
                        }
                    },
                    "technologies_names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "asset_value": {
                        "type": "string"
                    },
                    "findings_severities": {
                        "$ref": "#\/components\/schemas\/AttackSurfaceFindingSeverityCounter"
                    },
                    "findings_priorities": {
                        "$ref": "#\/components\/schemas\/AttackSurfaceFindingPriorityCounter"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "internal_status": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "programs": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/AttackSurfaceProgram"
                        }
                    },
                    "ip_version": {
                        "type": "string"
                    },
                    "protocol_name": {
                        "type": "string"
                    },
                    "protocol_version": {
                        "type": "string"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/AttackSurfaceDomainEmbeddedResponseDto"
                        }
                    },
                    "domains_names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "customer_status": {
                        "type": "string"
                    },
                    "excluded": {
                        "type": "boolean"
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitNameEmbed"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceProgram": {
                "properties": {
                    "slug": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceFindingHistory": {
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceFinding": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "discovered_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "cwe_list": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/AttackSurfaceCweEmbeddedResponseDto"
                        }
                    },
                    "confirmed_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "rejected_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "disappeared_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "creation_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "modification_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "DISCOVERED",
                            "CONFIRMED",
                            "REJECTED",
                            "DISAPPEARED",
                            "CLOSED"
                        ]
                    },
                    "asset_type": {
                        "type": "string",
                        "enum": [
                            "DOMAIN",
                            "SERVICE",
                            "URL"
                        ]
                    },
                    "domain": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "service": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "protocol_name": {
                                    "type": "string"
                                },
                                "ip": {
                                    "type": "string"
                                },
                                "port": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "technology": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "cve_id": {
                        "type": "string"
                    },
                    "cvss": {
                        "$ref": "#\/components\/schemas\/Cvss"
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "P1",
                            "P2",
                            "P3",
                            "P4",
                            "P5"
                        ]
                    },
                    "asset_value": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "exploitability": {
                        "type": "number",
                        "format": "float"
                    },
                    "asset_internal_status": {
                        "type": "string",
                        "enum": [
                            "TO_CONFIRM",
                            "INVISIBLE",
                            "VISIBLE"
                        ]
                    },
                    "asset_customer_status": {
                        "type": "string",
                        "enum": [
                            "NEW",
                            "CONFIRMED",
                            "REJECTED"
                        ]
                    },
                    "report": {
                        "$ref": "#\/components\/schemas\/ReportEmbed"
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitNameEmbed"
                    },
                    "priority_score_suggested": {
                        "type": "number",
                        "format": "float"
                    },
                    "domain_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "service_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "AttackSurfaceDomain": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "creation_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "modification_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "internal_status_updated_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "customer_status_updated_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "internal_status": {
                        "type": "string"
                    },
                    "asset_value": {
                        "type": "string"
                    },
                    "excluded": {
                        "type": "boolean"
                    },
                    "findings_severities": {
                        "$ref": "#\/components\/schemas\/AttackSurfaceFindingSeverityCounter"
                    },
                    "findings_priorities": {
                        "$ref": "#\/components\/schemas\/AttackSurfaceFindingPriorityCounter"
                    },
                    "technologies": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/AttackSurfaceTechnologyEmbedded"
                        }
                    },
                    "technologies_names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitNameEmbed"
                    },
                    "programs": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/AttackSurfaceProgram"
                        }
                    }
                },
                "type": "object"
            },
            "AttackSurfaceDomainCounter": {
                "properties": {
                    "domains": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceFindingPriorityCounter": {
                "properties": {
                    "p1": {
                        "type": "integer"
                    },
                    "p2": {
                        "type": "integer"
                    },
                    "p3": {
                        "type": "integer"
                    },
                    "p4": {
                        "type": "integer"
                    },
                    "p5": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceFindingSeverityCounter": {
                "properties": {
                    "critical": {
                        "type": "integer"
                    },
                    "high": {
                        "type": "integer"
                    },
                    "medium": {
                        "type": "integer"
                    },
                    "low": {
                        "type": "integer"
                    },
                    "none": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceExcludedAssetEmbed": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "creation_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceAssetEmbed": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "creation_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "type": {
                        "type": "string"
                    },
                    "asset_value": {
                        "type": "string"
                    },
                    "is_apex_domain": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ReportStatusTransitions": {
                "properties": {
                    "close": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "ReportStatus": {
                "properties": {
                    "workflow_state": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportPriority": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "level": {
                        "type": "integer"
                    },
                    "color": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportLogUpdate": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "type": {
                        "type": "string"
                    },
                    "points": {
                        "type": "integer"
                    },
                    "private": {
                        "type": "boolean"
                    },
                    "assessment": {
                        "type": "boolean"
                    },
                    "author": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "canceled": {
                        "type": "boolean"
                    },
                    "cvss_bonus": {
                        "type": "boolean"
                    },
                    "duplicate_of": {
                        "$ref": "#\/components\/schemas\/ReportDuplicate"
                    },
                    "message": {
                        "type": "string"
                    },
                    "message_html": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Attachment"
                        }
                    },
                    "old_cvss": {
                        "$ref": "#\/components\/schemas\/Cvss"
                    },
                    "new_cvss": {
                        "$ref": "#\/components\/schemas\/Cvss"
                    },
                    "old_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "new_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reward_failed": {
                        "type": "boolean"
                    },
                    "bounty_reward_amount": {
                        "type": "integer"
                    },
                    "user_rewarded": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "marked_as": {
                        "type": "string"
                    },
                    "fix_verified": {
                        "type": "boolean"
                    },
                    "old_details": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "new_details": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "old_patch_status": {
                        "type": "string"
                    },
                    "new_patch_status": {
                        "type": "string"
                    },
                    "old_tracking_status": {
                        "type": "string"
                    },
                    "new_tracking_status": {
                        "type": "string"
                    },
                    "tracker_name": {
                        "type": "string"
                    },
                    "tracker_id": {
                        "type": "string"
                    },
                    "tracker_url": {
                        "type": "string"
                    },
                    "tracker_token": {
                        "type": "string"
                    },
                    "collaborator": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "old_title": {
                        "type": "string"
                    },
                    "new_title": {
                        "type": "string"
                    },
                    "source_url": {
                        "type": "string"
                    },
                    "claim_email": {
                        "type": "string"
                    },
                    "claim_status": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    },
                    "rights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "new_ask_for_fix_verification_status": {
                        "type": "string"
                    },
                    "old_ask_for_fix_verification_status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportLogAssignee": {
                "properties": {
                    "slug": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "ReportLogAssignment": {
                "properties": {
                    "new_assignees": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ReportLogAssignee"
                        }
                    },
                    "maintained_assignees": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ReportLogAssignee"
                        }
                    },
                    "removed_assignees": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ReportLogAssignee"
                        }
                    }
                },
                "type": "object"
            },
            "ReportLogDeleteCollaborator": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "type": {
                        "type": "string"
                    },
                    "points": {
                        "type": "integer"
                    },
                    "private": {
                        "type": "boolean"
                    },
                    "canceled": {
                        "type": "boolean"
                    },
                    "cvss_bonus": {
                        "type": "boolean"
                    },
                    "duplicate_of": {
                        "$ref": "#\/components\/schemas\/ReportDuplicate"
                    },
                    "message": {
                        "type": "string"
                    },
                    "message_html": {
                        "type": "string"
                    },
                    "old_cvss": {
                        "$ref": "#\/components\/schemas\/Cvss"
                    },
                    "new_cvss": {
                        "$ref": "#\/components\/schemas\/Cvss"
                    },
                    "priority": {
                        "$ref": "#\/components\/schemas\/ReportPriority"
                    },
                    "priority_score": {
                        "type": "string"
                    },
                    "old_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "new_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reward_failed": {
                        "type": "boolean"
                    },
                    "bounty_reward_amount": {
                        "type": "integer"
                    },
                    "user_rewarded": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "marked_as": {
                        "type": "string"
                    },
                    "fix_verified": {
                        "type": "boolean"
                    },
                    "old_details": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "new_details": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "old_patch_status": {
                        "type": "string"
                    },
                    "new_patch_status": {
                        "type": "string"
                    },
                    "old_tracking_status": {
                        "type": "string"
                    },
                    "new_tracking_status": {
                        "type": "string"
                    },
                    "tracker_name": {
                        "type": "string"
                    },
                    "tracker_id": {
                        "type": "string"
                    },
                    "tracker_url": {
                        "type": "string"
                    },
                    "tracker_token": {
                        "type": "string"
                    },
                    "collaborator": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "old_title": {
                        "type": "string"
                    },
                    "new_title": {
                        "type": "string"
                    },
                    "source_url": {
                        "type": "string"
                    },
                    "claim_email": {
                        "type": "string"
                    },
                    "claim_status": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    },
                    "rights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "new_ask_for_fix_verification_status": {
                        "type": "string"
                    },
                    "old_ask_for_fix_verification_status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportLogDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "company": {
                        "$ref": "#\/components\/schemas\/BusinessUnitEmbed"
                    },
                    "type": {
                        "type": "string"
                    },
                    "points": {
                        "type": "integer"
                    },
                    "private": {
                        "type": "boolean"
                    },
                    "assessment": {
                        "type": "boolean"
                    },
                    "canceled": {
                        "type": "boolean"
                    },
                    "cvss_bonus": {
                        "type": "boolean"
                    },
                    "status": {
                        "$ref": "#\/components\/schemas\/ReportStatus"
                    },
                    "old_status": {
                        "$ref": "#\/components\/schemas\/ReportStatus"
                    },
                    "message": {
                        "type": "string"
                    },
                    "message_html": {
                        "type": "string"
                    },
                    "old_bug_type": {
                        "$ref": "#\/components\/schemas\/BugType"
                    },
                    "new_bug_type": {
                        "$ref": "#\/components\/schemas\/BugType"
                    },
                    "old_cvss": {
                        "$ref": "#\/components\/schemas\/Cvss"
                    },
                    "new_cvss": {
                        "$ref": "#\/components\/schemas\/Cvss"
                    },
                    "cvss_metrics_update": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/CvssMetricUpdateResponseDto"
                        }
                    },
                    "priority": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "is_priority_score_suggested": {
                        "type": "boolean"
                    },
                    "old_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "new_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reward_failed": {
                        "type": "boolean"
                    },
                    "reward_type": {
                        "type": "string"
                    },
                    "bounty_reward_amount": {
                        "type": "integer"
                    },
                    "user_rewarded": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "author": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "collaborator": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "marked_as": {
                        "type": "string"
                    },
                    "fix_verified": {
                        "type": "boolean"
                    },
                    "old_details": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "new_details": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "old_patch_status": {
                        "type": "string"
                    },
                    "new_patch_status": {
                        "type": "string"
                    },
                    "old_tracking_status": {
                        "type": "string"
                    },
                    "new_tracking_status": {
                        "type": "string"
                    },
                    "tracker_name": {
                        "type": "string"
                    },
                    "tracker_id": {
                        "type": "string"
                    },
                    "tracker_url": {
                        "type": "string"
                    },
                    "tracker_token": {
                        "type": "string"
                    },
                    "old_title": {
                        "type": "string"
                    },
                    "new_title": {
                        "type": "string"
                    },
                    "source_url": {
                        "type": "string"
                    },
                    "claim_email": {
                        "type": "string"
                    },
                    "claim_status": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "duplicate_of": {
                        "$ref": "#\/components\/schemas\/ReportDuplicate"
                    },
                    "rights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Attachment"
                        }
                    },
                    "assignment": {
                        "$ref": "#\/components\/schemas\/ReportLogAssignment"
                    },
                    "badges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "diff_description": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "report_attachment": {
                        "type": "string"
                    },
                    "old_program": {
                        "$ref": "#\/components\/schemas\/ProgramEmbed"
                    },
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramEmbed"
                    },
                    "new_ask_for_fix_verification_status": {
                        "type": "string"
                    },
                    "old_ask_for_fix_verification_status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportImportDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "imported_lines": {
                        "type": "integer"
                    },
                    "total_lines": {
                        "type": "integer"
                    },
                    "error_lines": {
                        "type": "integer"
                    },
                    "error_message": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "original_file_name": {
                        "type": "string"
                    },
                    "error": {
                        "$ref": "#\/components\/schemas\/File"
                    }
                },
                "type": "object"
            },
            "ReportImportCount": {
                "properties": {
                    "C": {
                        "type": "integer"
                    },
                    "E": {
                        "type": "integer"
                    },
                    "IE": {
                        "type": "integer"
                    },
                    "PA": {
                        "type": "integer"
                    },
                    "PE": {
                        "type": "integer"
                    },
                    "S": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ReportImport": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "imported_lines": {
                        "type": "integer"
                    },
                    "total_lines": {
                        "type": "integer"
                    },
                    "error_lines": {
                        "type": "integer"
                    },
                    "error_message": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "original_file_name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportDraftValidate": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "reward": {
                        "type": "integer"
                    },
                    "marked_as": {
                        "type": "string"
                    },
                    "collaborators": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/MemberUser"
                        }
                    },
                    "imported": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "local_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "description_html": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Attachment"
                        }
                    },
                    "technical_environment": {
                        "type": "string"
                    },
                    "technical_information_html": {
                        "type": "string"
                    },
                    "end_point": {
                        "type": "string"
                    },
                    "source_ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "vulnerable_part": {
                        "type": "string"
                    },
                    "part_name": {
                        "type": "string"
                    },
                    "application_finger_print": {
                        "type": "string"
                    },
                    "payload_sample": {
                        "type": "string"
                    },
                    "chainable": {
                        "type": "boolean"
                    },
                    "chainable_report": {
                        "$ref": "#\/components\/schemas\/ReportChainable"
                    },
                    "chainable_exploit_description_html": {
                        "type": "string"
                    },
                    "cvss": {
                        "$ref": "#\/components\/schemas\/Cvss"
                    },
                    "criticity": {
                        "type": "string"
                    },
                    "bug_type": {
                        "$ref": "#\/components\/schemas\/BugType"
                    },
                    "status": {
                        "$ref": "#\/components\/schemas\/ReportStatus"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "hunter_bounty_value": {
                        "type": "integer"
                    },
                    "report_claim": {
                        "$ref": "#\/components\/schemas\/ReportClaimDetail"
                    },
                    "impact": {
                        "type": "string"
                    },
                    "cve": {
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ReportDraft": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Attachment"
                        }
                    },
                    "technical_environment": {
                        "type": "string"
                    },
                    "technical_information": {
                        "type": "string"
                    },
                    "end_point": {
                        "type": "string"
                    },
                    "source_ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "vulnerable_part": {
                        "type": "string"
                    },
                    "part_name": {
                        "type": "string"
                    },
                    "application_finger_print": {
                        "type": "string"
                    },
                    "payload_sample": {
                        "type": "string"
                    },
                    "chainable": {
                        "type": "boolean"
                    },
                    "chainable_report": {
                        "$ref": "#\/components\/schemas\/ReportChainable"
                    },
                    "chainable_exploit_description": {
                        "type": "string"
                    },
                    "cvss": {
                        "$ref": "#\/components\/schemas\/Cvss"
                    },
                    "criticity": {
                        "type": "string"
                    },
                    "bug_type": {
                        "$ref": "#\/components\/schemas\/BugType"
                    },
                    "impact": {
                        "type": "string"
                    },
                    "cve": {
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ReportAssignee": {
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "local_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "reward": {
                        "type": "integer"
                    },
                    "marked_as": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "description": {
                        "type": "string"
                    },
                    "description_html": {
                        "type": "string"
                    },
                    "cve_details": {
                        "$ref": "#\/components\/schemas\/CveDetailsResponseDto"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "billing_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "technical_environment": {
                        "type": "string"
                    },
                    "technical_information_html": {
                        "type": "string"
                    },
                    "end_point": {
                        "type": "string"
                    },
                    "source_ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "vulnerable_part": {
                        "type": "string"
                    },
                    "part_name": {
                        "type": "string"
                    },
                    "application_finger_print": {
                        "type": "string"
                    },
                    "payload_sample": {
                        "type": "string"
                    },
                    "chainable": {
                        "type": "boolean"
                    },
                    "chainable_exploit_description_html": {
                        "type": "string"
                    },
                    "criticity": {
                        "type": "string"
                    },
                    "patch_status": {
                        "type": "string"
                    },
                    "tracking_status": {
                        "type": "string"
                    },
                    "hunter_bounty_value": {
                        "type": "integer"
                    },
                    "reward_grid": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "security_requirement": {
                        "type": "string"
                    },
                    "asset_value": {
                        "type": "string"
                    },
                    "duplicate_of": {
                        "$ref": "#\/components\/schemas\/ReportDuplicate"
                    },
                    "bonus": {
                        "type": "integer"
                    },
                    "cvss_bonus": {
                        "type": "integer"
                    },
                    "collaborators": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/MemberUser"
                        }
                    },
                    "imported": {
                        "type": "boolean"
                    },
                    "chainable_report": {
                        "$ref": "#\/components\/schemas\/ReportChainable"
                    },
                    "report_claim": {
                        "$ref": "#\/components\/schemas\/ReportClaimDetail"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Attachment"
                        }
                    },
                    "cvss": {
                        "$ref": "#\/components\/schemas\/Cvss"
                    },
                    "hunter": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "bug_type": {
                        "$ref": "#\/components\/schemas\/BugType"
                    },
                    "status": {
                        "$ref": "#\/components\/schemas\/ReportStatus"
                    },
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramReport"
                    },
                    "rights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "user_roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assignees": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Member"
                        }
                    },
                    "triaged": {
                        "type": "boolean"
                    },
                    "priority": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "is_priority_score_suggested": {
                        "type": "boolean"
                    },
                    "has_priority_score_suggested": {
                        "type": "boolean"
                    },
                    "exploitability": {
                        "type": "number",
                        "format": "float"
                    },
                    "report_source": {
                        "type": "string"
                    },
                    "assessed": {
                        "type": "boolean"
                    },
                    "max_suggested_severity": {
                        "type": "string"
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitNameEmbed"
                    },
                    "cve": {
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "cwe": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "asset_domain": {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "asset_service": {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "asset_technology": {
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "finding_detected_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "accepted_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "expected_remediation_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "resolved_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "sla_grid": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "fix_verified_internally": {
                        "type": "boolean"
                    },
                    "ask_for_fix_verification_status": {
                        "type": "string"
                    },
                    "impact": {
                        "type": "string"
                    },
                    "triage_owner": {
                        "$ref": "#\/components\/schemas\/UserTriageOwner"
                    }
                },
                "type": "object"
            },
            "ReportHunter": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "local_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramEmbed"
                    },
                    "status": {
                        "$ref": "#\/components\/schemas\/ReportStatus"
                    },
                    "cvss": {
                        "$ref": "#\/components\/schemas\/Cvss"
                    },
                    "hunter": {
                        "$ref": "#\/components\/schemas\/UserUsername"
                    },
                    "reward": {
                        "type": "integer"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "marked_as": {
                        "type": "string"
                    },
                    "collaborative": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "changed_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "ask_for_fix_verification_status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportManager": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "local_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "is_priority_score_suggested": {
                        "type": "boolean"
                    },
                    "assessed": {
                        "type": "boolean"
                    },
                    "hunter": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "status": {
                        "$ref": "#\/components\/schemas\/ReportStatus"
                    },
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramEmbed"
                    },
                    "cvss": {
                        "$ref": "#\/components\/schemas\/Cvss"
                    },
                    "reward": {
                        "type": "integer"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "marked_as": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "changed_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "accepted_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "expected_remediation_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "resolved_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitNameEmbed"
                    },
                    "assignees_usernames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "fix_verified_internally": {
                        "type": "boolean"
                    },
                    "ask_for_fix_verification_status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportMemberEmbed": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportInvitationEmbed": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "hunter": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    }
                },
                "type": "object"
            },
            "ReportEmbed": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "local_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportDuplicate": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "local_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramEmbed"
                    }
                },
                "type": "object"
            },
            "ReportCountByStatus": {},
            "ReportClaimDetail": {
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportClaim": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "local_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramEmbed"
                    }
                },
                "type": "object"
            },
            "ReportCollaborator": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "reward": {
                        "type": "integer"
                    },
                    "marked_as": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "local_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "hunter": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "status": {
                        "$ref": "#\/components\/schemas\/ReportStatus"
                    },
                    "currency": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportChainable": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "local_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CollaboratorReportsCountStatus": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ProgramVersion": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "accepted_at": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "ProgramHunterMessageDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "created_by": {
                        "$ref": "#\/components\/schemas\/UserCommon"
                    },
                    "owner": {
                        "$ref": "#\/components\/schemas\/UserCommon"
                    },
                    "refusal_reason": {
                        "type": "string"
                    },
                    "recipient": {
                        "type": "string"
                    },
                    "hunters_recipient": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hunters_recipient_failed": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "validated_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "sent_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "refused_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "last_user_action_at": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "ProgramHunterMessage": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#\/components\/schemas\/UserCommon"
                    },
                    "refusal_reason": {
                        "type": "string"
                    },
                    "recipient": {
                        "type": "string"
                    },
                    "count_recipients": {
                        "type": "integer"
                    },
                    "last_user_action_at": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "ProgramVdp": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "vdp": {
                        "type": "boolean"
                    },
                    "vdp_pgp_key": {
                        "type": "string"
                    },
                    "vdp_external_domain": {
                        "type": "boolean"
                    },
                    "vdp_domain": {
                        "type": "string"
                    },
                    "vdp_domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "vdp_iframe_enabled": {
                        "type": "boolean"
                    },
                    "vdp_allowed_iframe_domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "vdp_email": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "archived": {
                        "type": "boolean"
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitEmbed"
                    },
                    "has_pending_version": {
                        "type": "boolean"
                    },
                    "banner": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "stats": {
                        "$ref": "#\/components\/schemas\/ProgramStats"
                    },
                    "sla_enabled": {
                        "type": "boolean"
                    },
                    "sla_grid": {
                        "$ref": "#\/components\/schemas\/SlaGridResponseDto"
                    },
                    "rights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "ProgramPentestDetail": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "rules_html": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "demo": {
                        "type": "boolean"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "bounty": {
                        "type": "boolean"
                    },
                    "gift": {
                        "type": "boolean"
                    },
                    "hall_of_fame": {
                        "type": "boolean"
                    },
                    "report_partitioning": {
                        "type": "boolean"
                    },
                    "report_collaboration_active": {
                        "type": "boolean"
                    },
                    "pid": {
                        "type": "string"
                    },
                    "secured": {
                        "type": "boolean"
                    },
                    "triaged": {
                        "type": "boolean"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "vdp": {
                        "type": "boolean"
                    },
                    "reports_count": {
                        "type": "integer"
                    },
                    "bounty_reward_min": {
                        "type": "integer"
                    },
                    "bounty_reward_max": {
                        "type": "integer"
                    },
                    "scopes_count": {
                        "type": "integer"
                    },
                    "archived": {
                        "type": "boolean"
                    },
                    "thumbnail": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "event": {
                        "$ref": "#\/components\/schemas\/Event"
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitEmbed"
                    },
                    "vpn_outbound_ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "integer"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ProgramScope"
                        }
                    },
                    "out_of_scope": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "qualifying_vulnerability": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "non_qualifying_vulnerability": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "disclose_bounty_min_reward": {
                        "type": "boolean"
                    },
                    "disclose_bounty_average_reward": {
                        "type": "boolean"
                    },
                    "disclose_bounty_max_reward": {
                        "type": "boolean"
                    },
                    "reward_grid_default": {
                        "$ref": "#\/components\/schemas\/RewardGrid"
                    },
                    "reward_grid_very_low": {
                        "$ref": "#\/components\/schemas\/RewardGrid"
                    },
                    "reward_grid_low": {
                        "$ref": "#\/components\/schemas\/RewardGrid"
                    },
                    "reward_grid_medium": {
                        "$ref": "#\/components\/schemas\/RewardGrid"
                    },
                    "reward_grid_high": {
                        "$ref": "#\/components\/schemas\/RewardGrid"
                    },
                    "reward_grid_critical": {
                        "$ref": "#\/components\/schemas\/RewardGrid"
                    },
                    "sla_enabled": {
                        "type": "boolean"
                    },
                    "sla_grid": {
                        "$ref": "#\/components\/schemas\/SlaGridResponseDto"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "vpn_active": {
                        "type": "boolean"
                    },
                    "vpn_ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "account_access": {
                        "type": "string"
                    },
                    "account_access_html": {
                        "type": "string"
                    },
                    "user_agent": {
                        "type": "string"
                    },
                    "disable_message": {
                        "type": "string"
                    },
                    "stats": {
                        "$ref": "#\/components\/schemas\/ProgramStats"
                    },
                    "supported_languages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "report_import_nb_max": {
                        "type": "integer"
                    },
                    "report_import_line_max": {
                        "type": "integer"
                    },
                    "banner": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "restricted_ips": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/RestrictedIp"
                        }
                    },
                    "has_pending_version": {
                        "type": "boolean"
                    },
                    "rights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Attachment"
                        }
                    },
                    "hunter_message_enabled": {
                        "type": "boolean"
                    },
                    "send_hunter_message_validation_required": {
                        "type": "boolean"
                    },
                    "max_credential_pool_number": {
                        "type": "integer"
                    },
                    "ywh_methodology_url": {
                        "type": "string"
                    },
                    "pentest_certification": {
                        "type": "boolean"
                    },
                    "pentest_methodology": {
                        "type": "string"
                    },
                    "pentest_campaign_status": {
                        "type": "string"
                    },
                    "pentest_methodologies": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/PentestMethodology"
                        }
                    },
                    "videos_attachments_enabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ProgramBugBountyDetail": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "rules_html": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "demo": {
                        "type": "boolean"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "bounty": {
                        "type": "boolean"
                    },
                    "gift": {
                        "type": "boolean"
                    },
                    "hall_of_fame": {
                        "type": "boolean"
                    },
                    "hacktivity": {
                        "type": "boolean"
                    },
                    "report_count_per_scope": {
                        "type": "boolean"
                    },
                    "report_collaboration_active": {
                        "type": "boolean"
                    },
                    "pid": {
                        "type": "string"
                    },
                    "secured": {
                        "type": "boolean"
                    },
                    "triaged": {
                        "type": "boolean"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "vdp": {
                        "type": "boolean"
                    },
                    "reports_count": {
                        "type": "integer"
                    },
                    "bounty_reward_min": {
                        "type": "integer"
                    },
                    "bounty_reward_max": {
                        "type": "integer"
                    },
                    "scopes_count": {
                        "type": "integer"
                    },
                    "archived": {
                        "type": "boolean"
                    },
                    "thumbnail": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "event": {
                        "$ref": "#\/components\/schemas\/EventDetail"
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitEmbed"
                    },
                    "vpn_outbound_ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "integer"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ProgramScope"
                        }
                    },
                    "out_of_scope": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "qualifying_vulnerability": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "non_qualifying_vulnerability": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "disclose_bounty_min_reward": {
                        "type": "boolean"
                    },
                    "disclose_bounty_average_reward": {
                        "type": "boolean"
                    },
                    "disclose_bounty_max_reward": {
                        "type": "boolean"
                    },
                    "reward_grid_default": {
                        "$ref": "#\/components\/schemas\/RewardGrid"
                    },
                    "reward_grid_very_low": {
                        "$ref": "#\/components\/schemas\/RewardGrid"
                    },
                    "reward_grid_low": {
                        "$ref": "#\/components\/schemas\/RewardGrid"
                    },
                    "reward_grid_medium": {
                        "$ref": "#\/components\/schemas\/RewardGrid"
                    },
                    "reward_grid_high": {
                        "$ref": "#\/components\/schemas\/RewardGrid"
                    },
                    "reward_grid_critical": {
                        "$ref": "#\/components\/schemas\/RewardGrid"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "vpn_active": {
                        "type": "boolean"
                    },
                    "vpn_ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "account_access": {
                        "type": "string"
                    },
                    "account_access_html": {
                        "type": "string"
                    },
                    "user_agent": {
                        "type": "string"
                    },
                    "disable_message": {
                        "type": "string"
                    },
                    "stats": {
                        "$ref": "#\/components\/schemas\/ProgramStats"
                    },
                    "supported_languages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "report_import_nb_max": {
                        "type": "integer"
                    },
                    "report_import_line_max": {
                        "type": "integer"
                    },
                    "banner": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "restricted_ips": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/RestrictedIp"
                        }
                    },
                    "has_pending_version": {
                        "type": "boolean"
                    },
                    "rights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Attachment"
                        }
                    },
                    "hunter_message_enabled": {
                        "type": "boolean"
                    },
                    "send_hunter_message_validation_required": {
                        "type": "boolean"
                    },
                    "max_credential_pool_number": {
                        "type": "integer"
                    },
                    "videos_attachments_enabled": {
                        "type": "boolean"
                    },
                    "sla_enabled": {
                        "type": "boolean"
                    },
                    "sla_grid": {
                        "$ref": "#\/components\/schemas\/SlaGridResponseDto"
                    }
                },
                "type": "object"
            },
            "ProgramPersonalAccessToken": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "ProgramScope": {
                "properties": {
                    "scope": {
                        "type": "string"
                    },
                    "scope_type": {
                        "type": "string"
                    },
                    "asset_value": {
                        "type": "string"
                    },
                    "report_count": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ProgramReport": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "hall_of_fame": {
                        "type": "boolean"
                    },
                    "hacktivity": {
                        "type": "boolean"
                    },
                    "bounty": {
                        "type": "boolean"
                    },
                    "gift": {
                        "type": "boolean"
                    },
                    "demo": {
                        "type": "boolean"
                    },
                    "bounty_reward_min": {
                        "type": "integer"
                    },
                    "report_collaboration_active": {
                        "type": "boolean"
                    },
                    "vdp": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    },
                    "videos_attachments_enabled": {
                        "type": "boolean"
                    },
                    "secured": {
                        "type": "boolean"
                    },
                    "kyc_required": {
                        "type": "boolean"
                    },
                    "scopes_enabled": {
                        "type": "boolean"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ProgramScopeResponseDto"
                        }
                    }
                },
                "type": "object"
            },
            "ProgramEmbed": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "hall_of_fame": {
                        "type": "boolean"
                    },
                    "hacktivity": {
                        "type": "boolean"
                    },
                    "bounty": {
                        "type": "boolean"
                    },
                    "gift": {
                        "type": "boolean"
                    },
                    "demo": {
                        "type": "boolean"
                    },
                    "secured": {
                        "type": "boolean"
                    },
                    "archived": {
                        "type": "boolean"
                    },
                    "kyc_required": {
                        "type": "boolean"
                    },
                    "banner": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "thumbnail": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "partitioning": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ProgramManager": {
                "properties": {
                    "public_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "demo": {
                        "type": "boolean"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "bounty": {
                        "type": "boolean"
                    },
                    "gift": {
                        "type": "boolean"
                    },
                    "hall_of_fame": {
                        "type": "boolean"
                    },
                    "hacktivity": {
                        "type": "boolean"
                    },
                    "report_collaboration_active": {
                        "type": "boolean"
                    },
                    "unread_reports_count": {
                        "type": "integer"
                    },
                    "vdp": {
                        "type": "boolean"
                    },
                    "vdp_email": {
                        "type": "string"
                    },
                    "max_credential_pool_number": {
                        "type": "integer"
                    },
                    "scopes_count": {
                        "type": "integer"
                    },
                    "pid": {
                        "type": "string"
                    },
                    "reports_count": {
                        "type": "integer"
                    },
                    "bounty_reward_min": {
                        "type": "integer"
                    },
                    "bounty_reward_max": {
                        "type": "integer"
                    },
                    "stats": {
                        "type": "string"
                    },
                    "event": {
                        "type": "string"
                    },
                    "secured": {
                        "type": "boolean"
                    },
                    "triaged": {
                        "type": "boolean"
                    },
                    "hunter_message_enabled": {
                        "type": "boolean"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "archived": {
                        "type": "boolean"
                    },
                    "pentest_campaign_status": {
                        "type": "string"
                    },
                    "pentest_certification": {
                        "type": "boolean"
                    },
                    "thumbnail": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitEmbed"
                    },
                    "slack_channel": {
                        "$ref": "#\/components\/schemas\/SlackChannelEmbed"
                    },
                    "fix_verified_internally": {
                        "type": "boolean"
                    },
                    "kyc_required": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "scopes_enabled": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ProgramBusinessUnit": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "demo": {
                        "type": "boolean"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "pid": {
                        "type": "string"
                    },
                    "reports_count": {
                        "type": "integer"
                    },
                    "unread_reports_count": {
                        "type": "integer"
                    },
                    "secured": {
                        "type": "boolean"
                    },
                    "triaged": {
                        "type": "boolean"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "archived": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ProgramAccess": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "archived": {
                        "type": "boolean"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "Program": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "activity_area": {
                        "type": "string"
                    },
                    "average_first_response_time": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "demo": {
                        "type": "boolean"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "bounty": {
                        "type": "boolean"
                    },
                    "gift": {
                        "type": "boolean"
                    },
                    "hall_of_fame": {
                        "type": "boolean"
                    },
                    "hacktivity": {
                        "type": "boolean"
                    },
                    "report_collaboration_active": {
                        "type": "boolean"
                    },
                    "pid": {
                        "type": "string"
                    },
                    "secured": {
                        "type": "boolean"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "vdp": {
                        "type": "boolean"
                    },
                    "archived": {
                        "type": "boolean"
                    },
                    "reports_count": {
                        "type": "integer"
                    },
                    "bounty_reward_min": {
                        "type": "integer"
                    },
                    "bounty_reward_max": {
                        "type": "integer"
                    },
                    "scopes_count": {
                        "type": "integer"
                    },
                    "pentest_campaign_status": {
                        "type": "string"
                    },
                    "thumbnail": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "event": {
                        "$ref": "#\/components\/schemas\/Event"
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitEmbed"
                    },
                    "kyc_required": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "scopes_enabled": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PentestMethodology": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "attachment": {
                        "$ref": "#\/components\/schemas\/File"
                    }
                },
                "type": "object"
            },
            "PentestCampaignDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramEmbed"
                    },
                    "status": {
                        "type": "string"
                    },
                    "leader": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "author": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "synthesis": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "preamble": {
                        "type": "string"
                    },
                    "header_layout": {
                        "type": "string",
                        "enum": [
                            "none",
                            "left_right",
                            "center"
                        ]
                    },
                    "footer_layout": {
                        "type": "string",
                        "enum": [
                            "default",
                            "none",
                            "left_right",
                            "center"
                        ]
                    },
                    "header_left": {
                        "type": "string"
                    },
                    "header_center": {
                        "type": "string"
                    },
                    "header_right": {
                        "type": "string"
                    },
                    "footer_left": {
                        "type": "string"
                    },
                    "footer_center": {
                        "type": "string"
                    },
                    "footer_right": {
                        "type": "string"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "ended_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "report_status": {
                        "type": "string"
                    },
                    "report_generator": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "report": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "supplier_logo": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "company_logo": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "rights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "custom_reports": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/PentestCustomReportResponseDto"
                        }
                    },
                    "report_generated_at": {
                        "type": "string",
                        "format": "datetime",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PentestCampaign": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "leader": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "ended_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "report_status": {
                        "type": "string"
                    },
                    "report_generator": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramEmbed"
                    },
                    "report": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "custom_reports": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/PentestCustomReportResponseDto"
                        }
                    },
                    "report_generated_at": {
                        "type": "string",
                        "format": "datetime",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ProductRequest": {
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "accepted_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "refused_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "product": {
                        "$ref": "#\/components\/schemas\/Product"
                    }
                },
                "type": "object"
            },
            "ProductRenewData": {
                "properties": {
                    "item_limit": {
                        "type": "integer"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "Product": {
                "properties": {
                    "disabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "summary_html": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "description_html": {
                        "type": "string"
                    },
                    "learn_more_url": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "purchasable": {
                        "type": "boolean"
                    },
                    "renewable": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "MemberUser": {
                "properties": {
                    "user": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    }
                },
                "type": "object"
            },
            "MemberRevokedProfile": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "deleted_by": {
                        "type": "string"
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitEmbed"
                    },
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramEmbed"
                    },
                    "report": {
                        "$ref": "#\/components\/schemas\/ReportMemberEmbed"
                    }
                },
                "type": "object"
            },
            "MemberProfile": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "invitation_email_reference": {
                        "type": "string"
                    },
                    "bounty_value": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "user": {
                        "$ref": "#\/components\/schemas\/UserMemberEmbed"
                    },
                    "invited_by": {
                        "type": "string"
                    },
                    "deleted_by": {
                        "type": "string"
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitEmbed"
                    },
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramEmbed"
                    },
                    "report": {
                        "$ref": "#\/components\/schemas\/ReportMemberEmbed"
                    }
                },
                "type": "object"
            },
            "Member": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "invitation_email_reference": {
                        "type": "string"
                    },
                    "bounty_value": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "user": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "invited_by": {
                        "type": "string"
                    },
                    "deleted_by": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    }
                },
                "type": "object"
            },
            "Wallet": {
                "properties": {
                    "balance_amount": {
                        "type": "integer"
                    },
                    "currency": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserNatural": {
                "properties": {
                    "person_type": {
                        "type": "string"
                    },
                    "kyc_level": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#\/components\/schemas\/AddressMangoPay"
                    },
                    "birthday": {
                        "type": "integer"
                    },
                    "nationality": {
                        "type": "string"
                    },
                    "country_of_residence": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserLegal": {
                "properties": {
                    "person_type": {
                        "type": "string"
                    },
                    "kyc_level": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "legal_person_type": {
                        "type": "string"
                    },
                    "headquarters_address": {
                        "$ref": "#\/components\/schemas\/AddressMangoPay"
                    },
                    "legal_representative_first_name": {
                        "type": "string"
                    },
                    "legal_representative_last_name": {
                        "type": "string"
                    },
                    "legal_representative_address": {
                        "$ref": "#\/components\/schemas\/AddressMangoPay"
                    },
                    "legal_representative_email": {
                        "type": "string"
                    },
                    "legal_representative_birthday": {
                        "type": "string"
                    },
                    "legal_representative_nationality": {
                        "type": "string"
                    },
                    "legal_representative_country_of_residence": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BankAccountDetail": {
                "properties": {
                    "iban": {
                        "type": "string"
                    },
                    "bic": {
                        "type": "string"
                    },
                    "account_number": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "institution_number": {
                        "type": "string"
                    },
                    "branch_code": {
                        "type": "string"
                    },
                    "bank_name": {
                        "type": "string"
                    },
                    "sort_code": {
                        "type": "string"
                    },
                    "aba": {
                        "type": "string"
                    },
                    "deposit_account_type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BankAccount": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "owner_name": {
                        "type": "string"
                    },
                    "owner_address": {
                        "$ref": "#\/components\/schemas\/AddressMangoPay"
                    },
                    "details": {
                        "$ref": "#\/components\/schemas\/BankAccountDetail"
                    }
                },
                "type": "object"
            },
            "AddressMangoPay": {
                "properties": {
                    "address_line_1": {
                        "type": "string"
                    },
                    "address_line_2": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "postal_code": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CountReportManager": {
                "properties": {
                    "total_reports": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CountReportByStatusManager": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "InvitationCollaborator": {
                "properties": {
                    "bounty_value": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "sent_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "accepted_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "user": {
                        "type": "string"
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitEmbed"
                    },
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramEmbed"
                    },
                    "report": {
                        "$ref": "#\/components\/schemas\/ReportInvitationEmbed"
                    },
                    "invited_by": {
                        "type": "string"
                    },
                    "deleted_by": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Invitation": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "sent_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "accepted_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "user": {
                        "type": "string"
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitEmbed"
                    },
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramEmbed"
                    },
                    "report": {
                        "$ref": "#\/components\/schemas\/ReportInvitationEmbed"
                    },
                    "invited_by": {
                        "type": "string"
                    },
                    "deleted_by": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "HunterProfileVisibility": {
                "properties": {
                    "public": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "HunterProfileDetail": {
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "public_firstname": {
                        "type": "string"
                    },
                    "public_lastname": {
                        "type": "string"
                    },
                    "hunter_profile": {
                        "$ref": "#\/components\/schemas\/HunterProfile"
                    },
                    "points": {
                        "type": "integer"
                    },
                    "nb_reports": {
                        "type": "integer"
                    },
                    "rank": {
                        "type": "integer"
                    },
                    "impact": {
                        "type": "string"
                    },
                    "kyc_status": {
                        "type": "string"
                    },
                    "avatar": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "gpg_key": {
                        "type": "string"
                    },
                    "track_records": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/TrackRecord"
                        }
                    },
                    "joined_on": {
                        "type": "string"
                    },
                    "nationality": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "HunterProfile": {
                "properties": {
                    "public": {
                        "type": "boolean"
                    },
                    "public_civility": {
                        "type": "boolean"
                    },
                    "website": {
                        "type": "string"
                    },
                    "website_url": {
                        "type": "string"
                    },
                    "github": {
                        "type": "string"
                    },
                    "twitter": {
                        "type": "string"
                    },
                    "jobboard": {
                        "type": "string"
                    },
                    "skills": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "supported_languages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "HacktivityUser": {
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "hunter_profile": {
                        "$ref": "#\/components\/schemas\/HunterProfileVisibility"
                    },
                    "kyc_status": {
                        "type": "string"
                    },
                    "avatar": {
                        "$ref": "#\/components\/schemas\/File"
                    }
                },
                "type": "object"
            },
            "HacktivityReport": {
                "properties": {
                    "hunter": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "bug_type": {
                        "$ref": "#\/components\/schemas\/BugTypeEmbed"
                    }
                },
                "type": "object"
            },
            "Hacktivity": {
                "properties": {
                    "date": {
                        "type": "string"
                    },
                    "report": {
                        "$ref": "#\/components\/schemas\/HacktivityReport"
                    },
                    "status": {
                        "$ref": "#\/components\/schemas\/ReportStatus"
                    }
                },
                "type": "object"
            },
            "Export": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "destination_format": {
                        "type": "string"
                    },
                    "export_key": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "data_type": {
                        "type": "string"
                    },
                    "grouping_type": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "exported_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "downloaded_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "message": {
                        "type": "string"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "nb_items": {
                        "type": "integer"
                    },
                    "user": {
                        "$ref": "#\/components\/schemas\/UserCommon"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "file": {
                        "$ref": "#\/components\/schemas\/File"
                    }
                },
                "type": "object"
            },
            "EventReportsHourly": {
                "properties": {
                    "hour": {
                        "type": "string"
                    },
                    "total_reports": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "EventMessage": {
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "EventHacktivity": {
                "properties": {
                    "datetime": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "report": {
                        "$ref": "#\/components\/schemas\/HacktivityReport"
                    },
                    "status": {
                        "$ref": "#\/components\/schemas\/ReportStatus"
                    }
                },
                "type": "object"
            },
            "EventDetail": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "logo": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "banner": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "show_nb_reports": {
                        "type": "boolean"
                    },
                    "show_nb_bounties": {
                        "type": "boolean"
                    },
                    "show_nb_gifts": {
                        "type": "boolean"
                    },
                    "show_nb_rewards": {
                        "type": "boolean"
                    },
                    "show_cwe": {
                        "type": "boolean"
                    },
                    "show_photos": {
                        "type": "boolean"
                    },
                    "hashtag": {
                        "type": "string"
                    },
                    "photo_slider_message": {
                        "type": "string"
                    },
                    "remaining_time": {
                        "type": "integer"
                    },
                    "sponsor_message": {
                        "type": "string"
                    },
                    "sponsors": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Sponsor"
                        }
                    }
                },
                "type": "object"
            },
            "EventData": {
                "properties": {
                    "total_reports": {
                        "type": "integer"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/EventMessage"
                        }
                    }
                },
                "type": "object"
            },
            "Event": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "logo": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "banner": {
                        "$ref": "#\/components\/schemas\/File"
                    }
                },
                "type": "object"
            },
            "ManagerDashboardAssetsCoverage": {
                "properties": {
                    "asset_count": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "bug_bounty_count": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "pentest_count": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "bug_bounty_and_pentest_count": {
                        "type": "integer",
                        "minimum": 0
                    }
                },
                "type": "object"
            },
            "ManagerDashboardAssetsCountCategory": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ManagerDashboardAttackSurfaceStatistics": {
                "properties": {
                    "assets_data": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "open_findings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "top_vulnerable_assets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "DashboardReward": {
                "properties": {
                    "bounty_total_reward": {
                        "type": "integer"
                    },
                    "bounty_max_reward": {
                        "type": "integer"
                    },
                    "bounty_average_reward": {
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "DashboardReportsRewards": {
                "properties": {
                    "bounty_reward_amount": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "program_title": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DashboardReportsData": {
                "properties": {
                    "first_response_time_average": {
                        "type": "number",
                        "format": "float"
                    },
                    "reward_eur": {
                        "$ref": "#\/components\/schemas\/DashboardReward"
                    },
                    "reward_usd": {
                        "$ref": "#\/components\/schemas\/DashboardReward"
                    },
                    "total_reports": {
                        "type": "integer"
                    },
                    "closed_reports": {
                        "type": "integer"
                    },
                    "unread_reports": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DashboardReportsCountDateProgram": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "bounty_reward_amount": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DashboardReportsCountDateReward": {
                "properties": {
                    "bounty_total_reward": {
                        "type": "integer"
                    },
                    "bounty_reward_number": {
                        "type": "integer"
                    },
                    "programs": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/DashboardReportsCountDateProgram"
                        }
                    }
                },
                "type": "object"
            },
            "DashboardReportsCountBugCategory": {
                "properties": {
                    "bug_type": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DashboardReportsCount": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "criticity": {
                        "type": "string"
                    },
                    "bug_category": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DashboardHuntersMetricsItem": {
                "properties": {
                    "accepted_invitations": {
                        "type": "integer"
                    },
                    "total_invitations": {
                        "type": "integer"
                    },
                    "not_revoked_members": {
                        "type": "integer"
                    },
                    "total_members": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DashboardHuntersMetrics": {
                "properties": {
                    "items": {
                        "$ref": "#\/components\/schemas\/DashboardHuntersMetricsItem"
                    }
                },
                "type": "object"
            },
            "DashboardHuntersCountDateItem": {
                "properties": {
                    "pending_invitations": {
                        "type": "integer"
                    },
                    "total_revoked": {
                        "type": "integer"
                    },
                    "active_members": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DashboardHuntersCountDate": {
                "properties": {
                    "date": {
                        "$ref": "#\/components\/schemas\/DashboardHuntersCountDateItem"
                    }
                },
                "type": "object"
            },
            "CredentialRequest": {
                "properties": {
                    "credential_pool": {
                        "$ref": "#\/components\/schemas\/CredentialPoolEmbed"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "CredentialPoolEmbed": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "alias_allowed": {
                        "type": "boolean"
                    },
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramEmbed"
                    }
                },
                "type": "object"
            },
            "CredentialPoolDetail": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "alias_allowed": {
                        "type": "boolean"
                    },
                    "credentials_number": {
                        "type": "integer"
                    },
                    "max_credential_number": {
                        "type": "integer"
                    },
                    "remaining_credential_number": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "revoked_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "revoked_by": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "counters": {
                        "$ref": "#\/components\/schemas\/CredentialPoolCounters"
                    },
                    "rights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramEmbed"
                    }
                },
                "type": "object"
            },
            "CredentialPoolCounters": {
                "properties": {
                    "credentials": {
                        "type": "integer"
                    },
                    "credentials_revoked": {
                        "type": "integer"
                    },
                    "credentials_available": {
                        "type": "integer"
                    },
                    "credentials_assigned": {
                        "type": "integer"
                    },
                    "credential_requests": {
                        "type": "integer"
                    },
                    "credentials_requested": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CredentialPool": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "alias_allowed": {
                        "type": "boolean"
                    },
                    "credentials_number": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "revoked_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "rights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramEmbed"
                    }
                },
                "type": "object"
            },
            "CredentialDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "login": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "email_alias": {
                        "type": "boolean"
                    },
                    "is_hunter_member": {
                        "type": "boolean"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "assigned_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "revoked_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "revoked_by": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "credential_pool": {
                        "$ref": "#\/components\/schemas\/CredentialPoolEmbed"
                    },
                    "rights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "Credential": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "login": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "email_alias": {
                        "type": "boolean"
                    },
                    "is_hunter_member": {
                        "type": "boolean"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    },
                    "credential_pool": {
                        "$ref": "#\/components\/schemas\/CredentialPoolEmbed"
                    },
                    "rights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "BusinessUnitProduct": {
                "properties": {
                    "item_limit": {
                        "type": "integer"
                    },
                    "item_count": {
                        "type": "integer"
                    },
                    "item_left": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "expired_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "product": {
                        "$ref": "#\/components\/schemas\/Product"
                    },
                    "product_renew_data": {
                        "$ref": "#\/components\/schemas\/ProductRenewData"
                    }
                },
                "type": "object"
            },
            "BusinessUnitInvitationGroupDetail": {
                "properties": {
                    "created_by": {
                        "$ref": "#\/components\/schemas\/UserCommon"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "BusinessUnitInvitationGroup": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "BusinessUnitCertificate": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "pdf": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "status": {
                        "type": "string"
                    },
                    "requested_by": {
                        "$ref": "#\/components\/schemas\/UserUsername"
                    }
                },
                "type": "object"
            },
            "SamlConfigurationDomain": {
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "idp_sso_url": {
                        "type": "string"
                    },
                    "idp_issuer_id": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "alternative_certificate": {
                        "type": "string"
                    },
                    "last_validation_error": {
                        "type": "string"
                    },
                    "domain": {
                        "$ref": "#\/components\/schemas\/Domain"
                    }
                },
                "type": "object"
            },
            "SamlConfiguration": {
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "idp_sso_url": {
                        "type": "string"
                    },
                    "idp_issuer_id": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "alternative_certificate": {
                        "type": "string"
                    },
                    "last_validation_error": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Domain": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "verification_method": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "validation_token_key": {
                        "type": "string"
                    },
                    "validation_token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BusinessUnitLogo": {
                "properties": {
                    "logo": {
                        "$ref": "#\/components\/schemas\/File"
                    }
                },
                "type": "object"
            },
            "BusinessUnitNameEmbed": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "logo": {
                        "$ref": "#\/components\/schemas\/File"
                    }
                },
                "type": "object"
            },
            "BusinessUnitEmbed": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "already_activate_product": {
                        "type": "boolean"
                    },
                    "logo": {
                        "$ref": "#\/components\/schemas\/File"
                    }
                },
                "type": "object"
            },
            "BusinessUnitList": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "already_activate_product": {
                        "type": "boolean"
                    },
                    "logo": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "programs": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ProgramBusinessUnit"
                        }
                    },
                    "rights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "BusinessUnitDetail": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "already_activate_product": {
                        "type": "boolean"
                    },
                    "logo": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "completed": {
                        "type": "boolean"
                    },
                    "has_wallet": {
                        "type": "boolean"
                    },
                    "wallet_refill_fees_percentage": {
                        "type": "integer"
                    },
                    "legal_information": {
                        "$ref": "#\/components\/schemas\/LegalInformation"
                    },
                    "company_website": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string"
                    },
                    "contact_phone_number": {
                        "$ref": "#\/components\/schemas\/PhoneNumber"
                    },
                    "terms_of_use_status": {
                        "type": "string"
                    },
                    "wallet_warning_amount": {
                        "type": "integer"
                    },
                    "activity_area": {
                        "$ref": "#\/components\/schemas\/ActivityAreaEmbed"
                    },
                    "products_status": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "program_types": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "BusinessUnitAccess": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "programs": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ProgramAccess"
                        }
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "already_activate_product": {
                        "type": "boolean"
                    },
                    "products_status": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "currency": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BugTypeCategoryEmbed": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BugTypeCategory": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "bug_types": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/BugTypeEmbed"
                        }
                    }
                },
                "type": "object"
            },
            "BugTypeEmbed": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "short_name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string"
                    },
                    "remediation_link": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BugType": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "short_name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string"
                    },
                    "remediation_link": {
                        "type": "string"
                    },
                    "category": {
                        "$ref": "#\/components\/schemas\/BugTypeCategoryEmbed"
                    },
                    "identifier": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BillingMandateDetail": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "billing_type": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "nationality": {
                        "type": "string"
                    },
                    "company_name": {
                        "type": "string"
                    },
                    "billing_address": {
                        "$ref": "#\/components\/schemas\/Address"
                    },
                    "company_siret": {
                        "type": "string"
                    },
                    "company_vat_number": {
                        "type": "string"
                    },
                    "company_registration_number": {
                        "type": "string"
                    },
                    "subject_to_vat": {
                        "type": "boolean"
                    },
                    "company_rcs_immatriculation": {
                        "type": "boolean"
                    },
                    "company_rcs_city": {
                        "type": "string"
                    },
                    "company_legal_form": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BillingMandate": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "billing_type": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "nationality": {
                        "type": "string"
                    },
                    "company_name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "WalletRefillData": {
                "properties": {
                    "amount": {
                        "type": "integer"
                    },
                    "fees_amount": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "invoice_reference": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserEmailAliasData": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserData": {
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TransactionData": {
                "properties": {
                    "mango_id": {
                        "type": "string"
                    },
                    "credited_funds": {
                        "type": "integer"
                    },
                    "debited_funds": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "bank_wire_ref": {
                        "type": "string"
                    },
                    "wire_reference": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "refund_reason": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TermsOfUseAgreementData": {
                "properties": {
                    "terms_of_use": {
                        "$ref": "#\/components\/schemas\/TermsOfUseData"
                    }
                },
                "type": "object"
            },
            "TermsOfUseData": {
                "properties": {
                    "version": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "active": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SlackChannelData": {
                "properties": {
                    "code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RewardGridData": {
                "properties": {
                    "bounty_low": {
                        "type": "integer"
                    },
                    "bounty_medium": {
                        "type": "integer"
                    },
                    "bounty_high": {
                        "type": "integer"
                    },
                    "bounty_critical": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ResponseTemplateData": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "template": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportStatusData": {
                "properties": {
                    "workflow_state": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportTemplateData": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportLogData": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "reward_type": {
                        "type": "string"
                    },
                    "bounty_reward_amount": {
                        "type": "integer"
                    },
                    "points": {
                        "type": "integer"
                    },
                    "private": {
                        "type": "boolean"
                    },
                    "cvss_bonus": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ReportData": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "local_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#\/components\/schemas\/ReportStatusData"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "demo": {
                        "type": "boolean"
                    },
                    "priority_score": {
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "ProductRequestData": {
                "properties": {
                    "product": {
                        "$ref": "#\/components\/schemas\/ProductData"
                    },
                    "type": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "accepted_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "refused_at": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "ProductData": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProgramHunterMessageUserData": {
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProgramHunterMessageData": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "recipient": {
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#\/components\/schemas\/ProgramHunterMessageUserData"
                    },
                    "created_by": {
                        "$ref": "#\/components\/schemas\/ProgramHunterMessageUserData"
                    },
                    "sent_at": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "ProgramData": {
                "properties": {
                    "disabled": {
                        "type": "boolean"
                    },
                    "archived": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "hall_of_fame": {
                        "type": "boolean"
                    },
                    "hacktivity": {
                        "type": "boolean"
                    },
                    "report_partitioning": {
                        "type": "boolean"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "out_of_scope": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "qualifying_vulnerability": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "non_qualifying_vulnerability": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "bounty": {
                        "type": "boolean"
                    },
                    "gift": {
                        "type": "boolean"
                    },
                    "bounty_reward_min": {
                        "type": "integer"
                    },
                    "disclose_bounty_min_reward": {
                        "type": "boolean"
                    },
                    "disclose_bounty_average_reward": {
                        "type": "boolean"
                    },
                    "disclose_bounty_max_reward": {
                        "type": "boolean"
                    },
                    "reward_grid_very_low": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reward_grid_default": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reward_grid_low": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reward_grid_medium": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reward_grid_high": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reward_grid_critical": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sla_grid": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "vpn_active": {
                        "type": "boolean"
                    },
                    "report_collaboration_active": {
                        "type": "boolean"
                    },
                    "vpn_ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "account_access": {
                        "type": "string"
                    },
                    "user_agent": {
                        "type": "string"
                    },
                    "supported_languages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "demo": {
                        "type": "boolean"
                    },
                    "secured": {
                        "type": "boolean"
                    },
                    "vdp_pgp_key": {
                        "type": "string"
                    },
                    "vdp_external_domain": {
                        "type": "string"
                    },
                    "vdp_domain": {
                        "type": "string"
                    },
                    "vdp_email": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PrivacyPolicyData": {
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "PersonalAccessTokenRoleData": {
                "properties": {
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramData"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PersonalAccessTokenData": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "expiration_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "revocation_reason": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/PersonalAccessTokenRoleData"
                        }
                    }
                },
                "type": "object"
            },
            "PentestCampaignData": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PartnerData": {
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PackageData": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "bug_limit": {
                        "type": "integer"
                    },
                    "use_count": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "MemberData": {
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "LicenseByBugRequestData": {
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "package": {
                        "$ref": "#\/components\/schemas\/PackageData"
                    }
                },
                "type": "object"
            },
            "LicenseByBugData": {
                "properties": {
                    "package": {
                        "$ref": "#\/components\/schemas\/PackageData"
                    },
                    "partner": {
                        "$ref": "#\/components\/schemas\/PartnerData"
                    },
                    "reseller": {
                        "type": "string"
                    },
                    "bug_limit": {
                        "type": "integer"
                    },
                    "bug_count": {
                        "type": "integer"
                    },
                    "bug_managed": {
                        "type": "boolean"
                    },
                    "bug_managed_limit": {
                        "type": "integer"
                    },
                    "disclose_bug_managed": {
                        "type": "boolean"
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "one_month_expiration_email_sent_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "bug_bounty_active": {
                        "type": "boolean"
                    },
                    "vdp_mail_active": {
                        "type": "boolean"
                    },
                    "vdp_advanced_active": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "LegalRepresentativeData": {
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "birthdate": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "nationality": {
                        "type": "string"
                    },
                    "country_of_residence": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LegalInformationData": {
                "properties": {
                    "legal_company_name": {
                        "type": "string"
                    },
                    "legal_type": {
                        "type": "string"
                    },
                    "vat_number": {
                        "type": "string"
                    },
                    "record_number": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "postal_code": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "vref": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InvoiceData": {
                "properties": {
                    "invoice_name": {
                        "type": "string"
                    },
                    "invoice_date": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InvitationData": {
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ExportData": {
                "properties": {
                    "destination_format": {
                        "type": "string"
                    },
                    "export_key": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "data_type": {
                        "type": "string"
                    },
                    "grouping_type": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "exported_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "message": {
                        "type": "string"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "nb_items": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ExcludedAssetData": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CvssData": {
                "properties": {
                    "criticity": {
                        "type": "string"
                    },
                    "vector": {
                        "type": "string"
                    },
                    "score": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChangeSet": {
                "properties": {
                    "old_value": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "new_value": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "BusinessUnitProductData": {
                "properties": {
                    "product": {
                        "$ref": "#\/components\/schemas\/ProductData"
                    },
                    "status": {
                        "type": "string"
                    },
                    "item_count": {
                        "type": "integer"
                    },
                    "item_limit": {
                        "type": "integer"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "expired_at": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "BusinessUnitInvitationGroupData": {
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BusinessUnitData": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "legal_representative": {
                        "$ref": "#\/components\/schemas\/LegalRepresentativeData"
                    },
                    "legal_information": {
                        "$ref": "#\/components\/schemas\/LegalInformationData"
                    },
                    "company_website": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string"
                    },
                    "contact_phone_number": {
                        "type": "string"
                    },
                    "allow_demo_program": {
                        "type": "boolean"
                    },
                    "wallet_warning_amount": {
                        "type": "integer"
                    },
                    "activity_area": {
                        "$ref": "#\/components\/schemas\/ActivityAreaData"
                    },
                    "parent": {
                        "$ref": "#\/components\/schemas\/BusinessUnitData"
                    }
                },
                "type": "object"
            },
            "BugTypeData": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BanData": {
                "properties": {
                    "end_date": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "AuthorData": {
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "personal_access_token_name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AppData": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivityAreaData": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AuditLogAuthor": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AuditLog": {
                "properties": {
                    "object_type": {
                        "type": "string"
                    },
                    "event_type": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "author": {
                        "$ref": "#\/components\/schemas\/AuthorData"
                    },
                    "updated_property": {
                        "type": "string"
                    },
                    "change_set": {
                        "$ref": "#\/components\/schemas\/ChangeSet"
                    },
                    "report": {
                        "$ref": "#\/components\/schemas\/ReportData"
                    },
                    "report_log": {
                        "$ref": "#\/components\/schemas\/ReportLogData"
                    },
                    "program": {
                        "$ref": "#\/components\/schemas\/ProgramData"
                    },
                    "program_ban": {
                        "$ref": "#\/components\/schemas\/BanData"
                    },
                    "program_hunter_message": {
                        "$ref": "#\/components\/schemas\/ProgramHunterMessageData"
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitData"
                    },
                    "business_unit_ban": {
                        "$ref": "#\/components\/schemas\/BanData"
                    },
                    "business_unit_invitation_group": {
                        "$ref": "#\/components\/schemas\/BusinessUnitInvitationGroupData"
                    },
                    "business_unit_product": {
                        "$ref": "#\/components\/schemas\/BusinessUnitProductData"
                    },
                    "license_by_bug": {
                        "$ref": "#\/components\/schemas\/LicenseByBugData"
                    },
                    "license_by_bug_request": {
                        "$ref": "#\/components\/schemas\/LicenseByBugRequestData"
                    },
                    "user": {
                        "$ref": "#\/components\/schemas\/UserData"
                    },
                    "invitation": {
                        "$ref": "#\/components\/schemas\/InvitationData"
                    },
                    "invoice": {
                        "$ref": "#\/components\/schemas\/InvoiceData"
                    },
                    "member": {
                        "$ref": "#\/components\/schemas\/MemberData"
                    },
                    "personal_access_token": {
                        "$ref": "#\/components\/schemas\/PersonalAccessTokenData"
                    },
                    "terms_of_use_agreement": {
                        "$ref": "#\/components\/schemas\/TermsOfUseAgreementData"
                    },
                    "slack_channel": {
                        "$ref": "#\/components\/schemas\/SlackChannelData"
                    },
                    "app": {
                        "$ref": "#\/components\/schemas\/AppData"
                    },
                    "response_template": {
                        "$ref": "#\/components\/schemas\/ResponseTemplateData"
                    },
                    "product": {
                        "$ref": "#\/components\/schemas\/ProductData"
                    },
                    "product_request": {
                        "$ref": "#\/components\/schemas\/ProductRequestData"
                    },
                    "export": {
                        "$ref": "#\/components\/schemas\/ExportData"
                    },
                    "wallet_refill": {
                        "$ref": "#\/components\/schemas\/WalletRefillData"
                    },
                    "user_email_alias": {
                        "$ref": "#\/components\/schemas\/UserEmailAliasData"
                    },
                    "report_template": {
                        "$ref": "#\/components\/schemas\/ReportTemplateData"
                    },
                    "transaction": {
                        "$ref": "#\/components\/schemas\/TransactionData"
                    },
                    "pentest_campaign": {
                        "$ref": "#\/components\/schemas\/PentestCampaignData"
                    },
                    "asset": {
                        "$ref": "#\/components\/schemas\/AssetDataResponseDto"
                    },
                    "excluded_asset": {
                        "$ref": "#\/components\/schemas\/ExcludedAssetData"
                    },
                    "finding": {
                        "$ref": "#\/components\/schemas\/FindingDataResponseDto"
                    }
                },
                "type": "object"
            },
            "ActivityAreaEmbed": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivityArea": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "WalletRefill": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "amount": {
                        "type": "integer"
                    },
                    "fees_amount": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "invoice_reference": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VulnerablePartType": {
                "properties": {
                    "slug": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserGuide": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "type": {
                        "type": "string"
                    },
                    "pdf": {
                        "$ref": "#\/components\/schemas\/File"
                    }
                },
                "type": "object"
            },
            "UserEmailAlias": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "alias": {
                        "type": "string"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "TrackRecordType": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TrackRecord": {
                "properties": {
                    "type": {
                        "$ref": "#\/components\/schemas\/TrackRecordType"
                    },
                    "url": {
                        "type": "string"
                    },
                    "redirect_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Totp": {
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "period": {
                        "type": "integer"
                    },
                    "digest": {
                        "type": "string"
                    },
                    "digits": {
                        "type": "integer"
                    },
                    "qr_code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TermsOfUse": {
                "properties": {
                    "version": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "pdf": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SsoIdpUrl": {
                "properties": {
                    "idp_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SsoAuthenticateUser": {
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "ttl": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ScopeType": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RewardGrid": {
                "properties": {
                    "bounty_low": {
                        "type": "integer"
                    },
                    "bounty_medium": {
                        "type": "integer"
                    },
                    "bounty_high": {
                        "type": "integer"
                    },
                    "bounty_critical": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "RestrictedIp": {
                "properties": {
                    "ip": {
                        "type": "string"
                    },
                    "cidr": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ResponseTemplate": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "template": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "program_types": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "ReportTemplate": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "template": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "Ranking": {
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "hunter_profile": {
                        "$ref": "#\/components\/schemas\/HunterProfileVisibility"
                    },
                    "hunter_nationality": {
                        "type": "string"
                    },
                    "points": {
                        "type": "integer"
                    },
                    "rank": {
                        "type": "integer"
                    },
                    "kyc_status": {
                        "type": "string"
                    },
                    "avatar": {
                        "$ref": "#\/components\/schemas\/File"
                    }
                },
                "type": "object"
            },
            "ProgramStats": {
                "properties": {
                    "max_reward": {
                        "type": "integer"
                    },
                    "average_reward": {
                        "type": "integer"
                    },
                    "average_first_time_response": {
                        "type": "integer"
                    },
                    "total_reports": {
                        "type": "integer"
                    },
                    "total_reports_last24_hours": {
                        "type": "integer"
                    },
                    "total_reports_last7_days": {
                        "type": "integer"
                    },
                    "total_reports_current_month": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PrivacyPolicy": {
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "pdf": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OAuthClient": {
                "properties": {
                    "secret": {
                        "type": "string"
                    },
                    "redirect_uri": {
                        "type": "string"
                    },
                    "client_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LegalInformation": {
                "properties": {
                    "legal_type": {
                        "type": "string"
                    },
                    "vat_number": {
                        "type": "string"
                    },
                    "record_number": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "KycDocument": {
                "properties": {
                    "error_messages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "creation_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "type": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "refused_reason_type": {
                        "type": "string"
                    },
                    "refused_reason_message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Invoice": {
                "properties": {
                    "invoice_name": {
                        "type": "string"
                    },
                    "invoice_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "pdf": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "view_date": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "Cvss": {
                "properties": {
                    "criticity": {
                        "type": "string",
                        "enum": [
                            "N",
                            "L",
                            "M",
                            "H",
                            "C"
                        ]
                    },
                    "vector": {
                        "type": "string"
                    },
                    "score": {
                        "type": "number",
                        "format": "float",
                        "maximum": 10,
                        "minimum": 0
                    },
                    "version": {
                        "type": "string",
                        "enum": [
                            "v0",
                            "v2",
                            "v3.0",
                            "v3.1"
                        ]
                    }
                },
                "type": "object"
            },
            "BusinessUnitTermsOfUseAgreement": {
                "properties": {
                    "accepted_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "terms_of_use": {
                        "$ref": "#\/components\/schemas\/TermsOfUse"
                    },
                    "accepted_by": {
                        "$ref": "#\/components\/schemas\/UserUsername"
                    }
                },
                "type": "object"
            },
            "AnnualTransactionSummary": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "year": {
                        "type": "integer"
                    },
                    "pdf": {
                        "$ref": "#\/components\/schemas\/File"
                    }
                },
                "type": "object"
            },
            "Attachment": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "attachment": {
                        "$ref": "#\/components\/schemas\/File"
                    }
                },
                "type": "object"
            },
            "Address": {
                "properties": {
                    "address_line_1": {
                        "type": "string"
                    },
                    "address_line_2": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "postal_code": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TwtToken": {
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "ttl": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PhoneNumber": {
                "properties": {
                    "country": {
                        "type": "string"
                    },
                    "number": {
                        "type": "string"
                    },
                    "formatted": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Pagination": {
                "properties": {
                    "page": {
                        "type": "integer"
                    },
                    "nb_pages": {
                        "type": "integer"
                    },
                    "results_per_page": {
                        "type": "integer"
                    },
                    "nb_results": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ItemsStringWithErrors": {
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "ItemsString": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "ItemsPagination": {
                "properties": {
                    "pagination": {
                        "$ref": "#\/components\/schemas\/Pagination"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "File": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "original_name": {
                        "type": "string"
                    },
                    "mime_type": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "pagination": {
                "properties": {
                    "pagination": {
                        "properties": {
                            "page": {
                                "type": "integer"
                            },
                            "nb_pages": {
                                "type": "integer"
                            },
                            "results_per_page": {
                                "type": "integer"
                            },
                            "total": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "form-error": {
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "service-unavailable": {
                "properties": {
                    "code": {
                        "type": "integer",
                        "default": 503
                    },
                    "message": {
                        "type": "string",
                        "example": "Service unavailable"
                    }
                },
                "type": "object"
            },
            "validation-failed": {
                "properties": {
                    "code": {
                        "type": "integer",
                        "default": 400
                    },
                    "message": {
                        "type": "string",
                        "example": "Validation Failed"
                    },
                    "errors": {
                        "properties": {
                            "children": {
                                "type": "object",
                                "example": {
                                    "field": {
                                        "error": [
                                            "...",
                                            "..."
                                        ]
                                    }
                                },
                                "additionalProperties": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "bad-request": {
                "properties": {
                    "code": {
                        "type": "integer",
                        "default": 400
                    },
                    "message": {
                        "type": "string",
                        "example": "Bad request"
                    },
                    "exception_code": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AssetValueType": {
                "required": [
                    "asset_value"
                ],
                "properties": {
                    "asset_value": {
                        "type": "string",
                        "enum": [
                            "VERY_LOW",
                            "LOW",
                            "MEDIUM",
                            "HIGH",
                            "CRITICAL"
                        ]
                    }
                },
                "type": "object"
            },
            "AssetTagType": {
                "required": [
                    "tag"
                ],
                "properties": {
                    "tag": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceAssetResponseDto": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "asset_type": {
                        "type": "string"
                    },
                    "business_unit_id": {
                        "type": "integer"
                    },
                    "ownership_confirmed": {
                        "type": "boolean"
                    },
                    "creation_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "modification_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "internal_status_updated_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "customer_status_updated_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "customer_status": {
                        "type": "string"
                    },
                    "internal_status": {
                        "type": "string"
                    },
                    "asset_source": {
                        "type": "string"
                    },
                    "deletion_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "asset_value": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceDomainFilterType": {
                "required": [
                    "assetStatus"
                ],
                "properties": {
                    "businessUnitSlugs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assetValues": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "VERY_LOW",
                                "LOW",
                                "MEDIUM",
                                "HIGH",
                                "CRITICAL"
                            ]
                        }
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "search": {
                        "type": "string"
                    },
                    "sortBy": {
                        "type": "string",
                        "enum": [
                            "modificationDate",
                            "name",
                            "assetValue",
                            "tags",
                            "status",
                            "findingPriority",
                            "programTypes"
                        ]
                    },
                    "order": {
                        "type": "string",
                        "enum": [
                            "ASC",
                            "DESC"
                        ]
                    },
                    "programTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "bug-bounty",
                                "pentest",
                                "none",
                                "bug-bounty_and_pentest"
                            ]
                        }
                    },
                    "assetStatus": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "VISIBLE",
                                "INVISIBLE",
                                "TO_CONFIRM"
                            ]
                        }
                    },
                    "findingsPriorities": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "P1",
                                "P2",
                                "P3",
                                "P4",
                                "P5"
                            ]
                        }
                    },
                    "assetTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "FindingCountersResponseDto": {
                "properties": {
                    "total": {
                        "type": "integer"
                    },
                    "total_discovered": {
                        "type": "integer"
                    },
                    "total_confirmed": {
                        "type": "integer"
                    },
                    "total_opened": {
                        "type": "integer"
                    },
                    "total_p1": {
                        "type": "integer"
                    },
                    "total_p2": {
                        "type": "integer"
                    },
                    "total_p3": {
                        "type": "integer"
                    },
                    "total_p4": {
                        "type": "integer"
                    },
                    "total_p5": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "FindingBulkUpdateType": {
                "required": [
                    "status",
                    "ids"
                ],
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "CONFIRMED",
                            "REJECTED"
                        ]
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "type": "object"
            },
            "AttackSurfaceFindingFilterType": {
                "required": [
                    "findingStatus",
                    "criticity"
                ],
                "properties": {
                    "businessUnitSlugs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assetValues": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "VERY_LOW",
                                "LOW",
                                "MEDIUM",
                                "HIGH",
                                "CRITICAL"
                            ]
                        }
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "search": {
                        "type": "string"
                    },
                    "sortBy": {
                        "type": "string",
                        "enum": [
                            "date",
                            "cveId",
                            "domain",
                            "service",
                            "technology",
                            "cvss",
                            "findingStatus",
                            "priority"
                        ]
                    },
                    "order": {
                        "type": "string",
                        "enum": [
                            "ASC",
                            "DESC"
                        ]
                    },
                    "findingStatus": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "DISCOVERED",
                                "CONFIRMED",
                                "REJECTED",
                                "CLOSED"
                            ]
                        }
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "technologies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "criticity": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "N",
                                "L",
                                "M",
                                "H",
                                "C"
                            ]
                        }
                    },
                    "assetTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "priority": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "P1",
                                "P2",
                                "P3",
                                "P4",
                                "P5"
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "FindingUpdateType": {
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "CONFIRMED",
                            "REJECTED"
                        ]
                    }
                },
                "type": "object"
            },
            "AttackSurfaceFindingStatusCounterResponseDto": {
                "properties": {
                    "new": {
                        "type": "integer"
                    },
                    "confirmed": {
                        "type": "integer"
                    },
                    "closed": {
                        "type": "integer"
                    },
                    "rejected": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceServiceFilterType": {
                "properties": {
                    "businessUnitSlugs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assetValues": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "VERY_LOW",
                                "LOW",
                                "MEDIUM",
                                "HIGH",
                                "CRITICAL"
                            ]
                        }
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "search": {
                        "type": "string"
                    },
                    "sortBy": {
                        "type": "string",
                        "enum": [
                            "modificationDate",
                            "name",
                            "ip",
                            "port",
                            "assetValue",
                            "status",
                            "findingPriority",
                            "technologies",
                            "domains",
                            "programTypes"
                        ]
                    },
                    "order": {
                        "type": "string",
                        "enum": [
                            "ASC",
                            "DESC"
                        ]
                    },
                    "programTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "bug-bounty",
                                "pentest",
                                "none",
                                "bug-bounty_and_pentest"
                            ]
                        }
                    },
                    "id": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "protocolName": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ip": {
                        "type": "string"
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "technologies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "findingsPriorities": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "P1",
                                "P2",
                                "P3",
                                "P4",
                                "P5"
                            ]
                        }
                    },
                    "assetTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assetStatus": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "VISIBLE",
                                "INVISIBLE",
                                "TO_CONFIRM"
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "AttackSurfaceTechnologyFilterType": {
                "properties": {
                    "businessUnitSlugs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assetValues": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "VERY_LOW",
                                "LOW",
                                "MEDIUM",
                                "HIGH",
                                "CRITICAL"
                            ]
                        }
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "search": {
                        "type": "string"
                    },
                    "sortBy": {
                        "type": "string",
                        "enum": [
                            "date",
                            "technology",
                            "service",
                            "path",
                            "domain",
                            "assetValue",
                            "tags",
                            "findingPriority",
                            "cpeVector"
                        ]
                    },
                    "order": {
                        "type": "string",
                        "enum": [
                            "ASC",
                            "DESC"
                        ]
                    },
                    "technologies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "findingsPriorities": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "P1",
                                "P2",
                                "P3",
                                "P4",
                                "P5"
                            ]
                        }
                    },
                    "assetTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cpeVendors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cpeProducts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "ip": {
                        "type": "string"
                    },
                    "protocolName": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "AssetsCreateType": {
                "required": [
                    "assets"
                ],
                "properties": {
                    "assets": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/AssetCreateType"
                        }
                    }
                },
                "type": "object"
            },
            "AssetsImportType": {
                "required": [
                    "file"
                ],
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "AssetUpdateType": {
                "required": [
                    "asset_title",
                    "asset_type",
                    "asset_value"
                ],
                "properties": {
                    "asset_title": {
                        "type": "string"
                    },
                    "asset_type": {
                        "type": "string",
                        "enum": [
                            "DOMAIN",
                            "CIDR",
                            "SERVICE",
                            "TLS_CERTIFICATE",
                            "RESOURCE",
                            "URL"
                        ]
                    },
                    "asset_value": {
                        "type": "string",
                        "enum": [
                            "VERY_LOW",
                            "LOW",
                            "MEDIUM",
                            "HIGH",
                            "CRITICAL"
                        ]
                    }
                },
                "type": "object"
            },
            "AttackSurfaceCveAlertEmbedResponseDto": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "cve_rule": {
                        "type": "string"
                    },
                    "vendor": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "vulnerabilities_count": {
                        "type": "integer"
                    },
                    "last_cve_update_date": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "CveAlertCreateType": {
                "required": [
                    "cve_rule"
                ],
                "properties": {
                    "cve_rule": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceCveAlertDetailResponseDto": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "cve_rule": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceCveEmbedResponseDto": {
                "properties": {
                    "cve_id": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "epss": {
                        "type": "string"
                    },
                    "cvss_score": {
                        "type": "integer"
                    },
                    "cvss_criticity": {
                        "type": "string"
                    },
                    "publication_date": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "modification_date": {
                        "type": "string",
                        "format": "datetime"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceCpeEmbedResponseDto": {
                "properties": {
                    "cve_rule": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ExcludedAssetCreateType": {
                "required": [
                    "asset_title",
                    "asset_type"
                ],
                "properties": {
                    "asset_title": {
                        "type": "string"
                    },
                    "asset_type": {
                        "type": "string",
                        "enum": [
                            "DOMAIN",
                            "CIDR",
                            "SERVICE",
                            "TLS_CERTIFICATE",
                            "RESOURCE",
                            "URL"
                        ]
                    }
                },
                "type": "object"
            },
            "AttackSurfaceSettingResponseDto": {
                "properties": {
                    "findings_auto_confirmation": {
                        "type": "boolean"
                    },
                    "findings_auto_confirmation_priority_threshold": {
                        "type": "string"
                    },
                    "notification": {
                        "type": "boolean"
                    },
                    "notification_priority_threshold": {
                        "type": "string"
                    },
                    "notification_frequency": {
                        "type": "string"
                    },
                    "cve_alert": {
                        "type": "boolean"
                    },
                    "cve_alert_on_update": {
                        "type": "boolean"
                    },
                    "cve_alert_frequency": {
                        "type": "string"
                    },
                    "cve_alert_severity_threshold": {
                        "type": "string"
                    },
                    "cve_alert_include_non_qualified": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "BusinessUnitAsmSettingType": {
                "required": [
                    "findings_auto_confirmation",
                    "findings_auto_confirmation_priority_threshold"
                ],
                "properties": {
                    "findings_auto_confirmation": {
                        "type": "boolean"
                    },
                    "findings_auto_confirmation_priority_threshold": {
                        "type": "string",
                        "enum": [
                            "P1",
                            "P2",
                            "P3",
                            "P4",
                            "P5"
                        ]
                    }
                },
                "type": "object"
            },
            "BusinessUnitAsmNotificationType": {
                "required": [
                    "notification",
                    "notification_priority_threshold",
                    "notification_frequency"
                ],
                "properties": {
                    "notification": {
                        "type": "boolean"
                    },
                    "notification_priority_threshold": {
                        "type": "string",
                        "enum": [
                            "P1",
                            "P2",
                            "P3",
                            "P4",
                            "P5"
                        ]
                    },
                    "notification_frequency": {
                        "type": "string",
                        "enum": [
                            "daily",
                            "weekly"
                        ]
                    }
                },
                "type": "object"
            },
            "BusinessUnitAsmCveAlertType": {
                "required": [
                    "cve_alert",
                    "cve_alert_on_update",
                    "cve_alert_frequency",
                    "cve_alert_severity_threshold",
                    "cve_alert_include_non_qualified"
                ],
                "properties": {
                    "cve_alert": {
                        "type": "boolean"
                    },
                    "cve_alert_on_update": {
                        "type": "boolean"
                    },
                    "cve_alert_frequency": {
                        "type": "string",
                        "enum": [
                            "daily",
                            "weekly",
                            "monthly"
                        ]
                    },
                    "cve_alert_severity_threshold": {
                        "type": "string",
                        "enum": [
                            "N",
                            "L",
                            "M",
                            "H",
                            "C"
                        ]
                    },
                    "cve_alert_include_non_qualified": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "AuditLogFilterType": {
                "required": [
                    "start_date",
                    "end_date",
                    "search",
                    "programs",
                    "author",
                    "events",
                    "sort_by",
                    "order"
                ],
                "properties": {
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "search": {
                        "type": "string"
                    },
                    "programs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "author": {
                        "type": "string"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sort_by": {
                        "type": "string",
                        "enum": [
                            "date",
                            "author.username",
                            "eventType"
                        ]
                    },
                    "order": {
                        "type": "string",
                        "enum": [
                            "ASC",
                            "DESC"
                        ]
                    }
                },
                "type": "object"
            },
            "BusinessUnitCertificateCreateType": {
                "required": [
                    "company_name",
                    "postal_address",
                    "postal_code",
                    "city",
                    "country",
                    "asset_urls"
                ],
                "properties": {
                    "company_name": {
                        "type": "string"
                    },
                    "postal_address": {
                        "type": "string"
                    },
                    "postal_code": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "asset_urls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "BusinessUnitCreateType": {
                "required": [
                    "name",
                    "description",
                    "company_website",
                    "contact_email",
                    "contact_phone_number",
                    "legal_information",
                    "currency",
                    "activity_area"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "company_website": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string"
                    },
                    "contact_phone_number": {
                        "$ref": "#\/components\/schemas\/PhoneNumberType"
                    },
                    "legal_information": {
                        "$ref": "#\/components\/schemas\/LegalInformationType"
                    },
                    "currency": {
                        "type": "string",
                        "enum": [
                            "EUR",
                            "USD"
                        ]
                    },
                    "activity_area": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BusinessUnitUpdateType": {
                "required": [
                    "name",
                    "description",
                    "company_website",
                    "contact_email",
                    "contact_phone_number",
                    "legal_information",
                    "wallet_warning_amount",
                    "activity_area",
                    "currency"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "company_website": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string"
                    },
                    "contact_phone_number": {
                        "$ref": "#\/components\/schemas\/PhoneNumberType"
                    },
                    "legal_information": {
                        "$ref": "#\/components\/schemas\/LegalInformationType"
                    },
                    "wallet_warning_amount": {
                        "type": "string"
                    },
                    "activity_area": {
                        "description": "slug of the activity area",
                        "type": "string"
                    },
                    "currency": {
                        "type": "string",
                        "enum": [
                            "EUR",
                            "USD"
                        ]
                    }
                },
                "type": "object"
            },
            "ProgramCreateType": {
                "required": [
                    "title",
                    "scopes",
                    "out_of_scope",
                    "qualifying_vulnerability",
                    "non_qualifying_vulnerability",
                    "rules",
                    "attachments",
                    "bounty",
                    "gift",
                    "hall_of_fame",
                    "tags",
                    "public",
                    "disabled",
                    "secured",
                    "report_collaboration_active",
                    "vpn_active",
                    "account_access",
                    "user_agent",
                    "supported_languages",
                    "videos_attachments_enabled",
                    "sla_enabled"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ProgramScopeType"
                        }
                    },
                    "out_of_scope": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "qualifying_vulnerability": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "non_qualifying_vulnerability": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rules": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "format": "[App\\Entity\\ProgramAttachment id]",
                        "items": {
                            "type": "string"
                        }
                    },
                    "bounty": {
                        "type": "boolean"
                    },
                    "gift": {
                        "type": "boolean"
                    },
                    "hall_of_fame": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "secured": {
                        "type": "boolean"
                    },
                    "report_collaboration_active": {
                        "type": "boolean"
                    },
                    "vpn_active": {
                        "type": "boolean"
                    },
                    "account_access": {
                        "type": "string"
                    },
                    "user_agent": {
                        "type": "string"
                    },
                    "supported_languages": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "CN",
                                "NL",
                                "GB",
                                "FR",
                                "DE",
                                "IN",
                                "ID",
                                "IT",
                                "PL",
                                "PT",
                                "RU",
                                "ES"
                            ]
                        }
                    },
                    "videos_attachments_enabled": {
                        "type": "boolean",
                        "default": true
                    },
                    "sla_enabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ProgramVdpCreateType": {
                "required": [
                    "title",
                    "sla_enabled"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "sla_enabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ProgramPentestCreateType": {
                "required": [
                    "title",
                    "scopes",
                    "out_of_scope",
                    "qualifying_vulnerability",
                    "non_qualifying_vulnerability",
                    "rules",
                    "attachments",
                    "tags",
                    "secured",
                    "vpn_active",
                    "account_access",
                    "user_agent",
                    "supported_languages",
                    "videos_attachments_enabled",
                    "sla_enabled",
                    "report_partitioning",
                    "pentest_certification",
                    "pentest_methodology"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ProgramScopeType"
                        }
                    },
                    "out_of_scope": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "qualifying_vulnerability": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "non_qualifying_vulnerability": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rules": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "format": "[App\\Entity\\ProgramAttachment id]",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "secured": {
                        "type": "boolean"
                    },
                    "vpn_active": {
                        "type": "boolean"
                    },
                    "account_access": {
                        "type": "string"
                    },
                    "user_agent": {
                        "type": "string"
                    },
                    "supported_languages": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "CN",
                                "NL",
                                "GB",
                                "FR",
                                "DE",
                                "IN",
                                "ID",
                                "IT",
                                "PL",
                                "PT",
                                "RU",
                                "ES"
                            ]
                        }
                    },
                    "videos_attachments_enabled": {
                        "type": "boolean",
                        "default": true
                    },
                    "sla_enabled": {
                        "type": "boolean"
                    },
                    "report_partitioning": {
                        "type": "boolean",
                        "default": false
                    },
                    "pentest_certification": {
                        "type": "boolean"
                    },
                    "pentest_methodology": {
                        "type": "string",
                        "enum": [
                            "N",
                            "Y",
                            "C"
                        ]
                    }
                },
                "type": "object"
            },
            "ProgramVdpInAppCreateType": {
                "required": [
                    "title",
                    "rules",
                    "attachments",
                    "hall_of_fame",
                    "tags",
                    "disabled",
                    "videos_attachments_enabled",
                    "kyc_required",
                    "sla_enabled",
                    "hacktivity"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "format": "[App\\Entity\\ProgramAttachment id]",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hall_of_fame": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "videos_attachments_enabled": {
                        "type": "boolean",
                        "default": true
                    },
                    "kyc_required": {
                        "type": "boolean",
                        "default": true
                    },
                    "sla_enabled": {
                        "type": "boolean"
                    },
                    "hacktivity": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ProgramVdpInAppDetailResponseDto": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "rules_html": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "demo": {
                        "type": "boolean"
                    },
                    "hall_of_fame": {
                        "type": "boolean"
                    },
                    "triaged": {
                        "type": "boolean"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "reports_count": {
                        "type": "integer"
                    },
                    "scopes_count": {
                        "type": "integer"
                    },
                    "archived": {
                        "type": "boolean"
                    },
                    "thumbnail": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "event": {
                        "$ref": "#\/components\/schemas\/EventDetail"
                    },
                    "business_unit": {
                        "$ref": "#\/components\/schemas\/BusinessUnitEmbed"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ProgramScope"
                        }
                    },
                    "out_of_scope": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "disable_message": {
                        "type": "string"
                    },
                    "stats": {
                        "$ref": "#\/components\/schemas\/ProgramStats"
                    },
                    "report_import_nb_max": {
                        "type": "integer"
                    },
                    "report_import_line_max": {
                        "type": "integer"
                    },
                    "has_pending_version": {
                        "type": "boolean"
                    },
                    "rights": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Attachment"
                        }
                    },
                    "hunter_message_enabled": {
                        "type": "boolean"
                    },
                    "send_hunter_message_validation_required": {
                        "type": "boolean"
                    },
                    "videos_attachments_enabled": {
                        "type": "boolean"
                    },
                    "sla_enabled": {
                        "type": "boolean"
                    },
                    "sla_grid": {
                        "$ref": "#\/components\/schemas\/SlaGridResponseDto"
                    },
                    "hacktivity": {
                        "type": "boolean"
                    },
                    "kyc_required": {
                        "type": "boolean"
                    },
                    "scopes_enabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "BusinessUnitLogoType": {
                "required": [
                    "logo"
                ],
                "properties": {
                    "logo": {
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "BusinessUnitInvitationGroupCreateType": {
                "required": [
                    "name",
                    "emails_or_usernames"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "emails_or_usernames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "BusinessUnitInvitationGroupUpdateType": {
                "required": [
                    "name",
                    "emails_or_usernames"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "emails_or_usernames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "BusinessUnitMemberInvitationCreateType": {
                "required": [
                    "email_or_username",
                    "role"
                ],
                "properties": {
                    "email_or_username": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "ROLE_BU_MANAGER",
                            "ROLE_BU_ACCOUNTING_MANAGER",
                            "ROLE_BU_SURFACE_MANAGER"
                        ]
                    }
                },
                "type": "object"
            },
            "ProductRequestCreateType": {
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ResponseTemplateType": {
                "required": [
                    "name",
                    "template",
                    "programTypes"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "template": {
                        "type": "string"
                    },
                    "programTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "SlackChannelCreateType": {
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SsoStatusUpdate": {
                "required": [
                    "notify_affected_users"
                ],
                "properties": {
                    "notify_affected_users": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "AlternativeCertificateUpdateType": {
                "required": [
                    "alternative_certificate"
                ],
                "properties": {
                    "alternative_certificate": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DomainCreateType": {
                "required": [
                    "name",
                    "verification_method"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "verification_method": {
                        "type": "string",
                        "enum": [
                            "dns",
                            "http-file",
                            "html-meta-tag"
                        ]
                    }
                },
                "type": "object"
            },
            "WalletRefillType": {
                "required": [
                    "amount"
                ],
                "properties": {
                    "amount": {}
                },
                "type": "object"
            },
            "ProgramUpdateType": {
                "required": [
                    "title",
                    "scopes",
                    "out_of_scope",
                    "qualifying_vulnerability",
                    "non_qualifying_vulnerability",
                    "rules",
                    "bounty",
                    "gift",
                    "hall_of_fame",
                    "tags",
                    "disabled",
                    "secured",
                    "report_collaboration_active",
                    "account_access",
                    "user_agent",
                    "supported_languages",
                    "videos_attachments_enabled",
                    "sla_enabled"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ProgramScopeType"
                        }
                    },
                    "out_of_scope": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "qualifying_vulnerability": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "non_qualifying_vulnerability": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rules": {
                        "type": "string"
                    },
                    "bounty": {
                        "type": "boolean",
                        "default": false
                    },
                    "gift": {
                        "type": "boolean",
                        "default": false
                    },
                    "hall_of_fame": {
                        "type": "boolean",
                        "default": false
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "disabled": {
                        "type": "boolean",
                        "default": false
                    },
                    "secured": {
                        "type": "boolean",
                        "default": false
                    },
                    "report_collaboration_active": {
                        "type": "boolean",
                        "default": false
                    },
                    "account_access": {
                        "type": "string"
                    },
                    "user_agent": {
                        "type": "string"
                    },
                    "supported_languages": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "CN",
                                "NL",
                                "GB",
                                "FR",
                                "DE",
                                "IN",
                                "ID",
                                "IT",
                                "PL",
                                "PT",
                                "RU",
                                "ES"
                            ]
                        }
                    },
                    "videos_attachments_enabled": {
                        "type": "boolean",
                        "default": true
                    },
                    "sla_enabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "RewardGridType": {
                "required": [
                    "bounty_low",
                    "bounty_medium",
                    "bounty_high",
                    "bounty_critical"
                ],
                "properties": {
                    "bounty_low": {
                        "type": "integer"
                    },
                    "bounty_medium": {
                        "type": "integer"
                    },
                    "bounty_high": {
                        "type": "integer"
                    },
                    "bounty_critical": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SlaGridType": {
                "required": [
                    "level_1",
                    "level_2",
                    "level_3",
                    "level_4",
                    "level_5"
                ],
                "properties": {
                    "level_1": {
                        "type": "integer"
                    },
                    "level_2": {
                        "type": "integer"
                    },
                    "level_3": {
                        "type": "integer"
                    },
                    "level_4": {
                        "type": "integer"
                    },
                    "level_5": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ProgramVdpUpdateType": {
                "required": [
                    "title",
                    "sla_enabled"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "sla_enabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ProgramVdpInAppUpdateType": {
                "required": [
                    "title",
                    "rules",
                    "hall_of_fame",
                    "tags",
                    "disabled",
                    "videos_attachments_enabled",
                    "kyc_required",
                    "sla_enabled",
                    "hacktivity"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "hall_of_fame": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "videos_attachments_enabled": {
                        "type": "boolean",
                        "default": true
                    },
                    "kyc_required": {
                        "type": "boolean",
                        "default": true
                    },
                    "sla_enabled": {
                        "type": "boolean"
                    },
                    "hacktivity": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "CredentialsAskType": {
                "required": [
                    "emails"
                ],
                "properties": {
                    "emails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "ProgramArchiveType": {
                "required": [
                    "archived"
                ],
                "properties": {
                    "archived": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ThanksUserResponseDto": {
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "hunter_profile": {
                        "$ref": "#\/components\/schemas\/HunterProfileVisibility"
                    },
                    "kyc_status": {
                        "type": "string"
                    },
                    "avatar": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "accepted_reports": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CredentialsCollectionType": {
                "required": [
                    "credentials"
                ],
                "properties": {
                    "credentials": {
                        "description": "Collection of credentials to create according to the space available in the pool.",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/CredentialType"
                        },
                        "minimum": 1
                    }
                },
                "type": "object"
            },
            "CredentialUploadType": {
                "required": [
                    "file"
                ],
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "CredentialUpdateType": {
                "required": [
                    "password",
                    "login"
                ],
                "properties": {
                    "password": {
                        "type": "string"
                    },
                    "login": {
                        "description": "Only for 'classic' credential pools.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CredentialsCollectionValidateType": {
                "required": [
                    "credentials"
                ],
                "properties": {
                    "credentials": {
                        "description": "List of ids to validate.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "type": "object"
            },
            "CredentialValidateType": {
                "required": [
                    "password"
                ],
                "properties": {
                    "password": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CredentialsCollectionRevokeType": {
                "required": [
                    "credentials"
                ],
                "properties": {
                    "credentials": {
                        "description": "List of ids to revoke.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "type": "object"
            },
            "ProgramCredentialPoolCreateType": {
                "required": [
                    "title",
                    "type",
                    "credentials_number"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "classic",
                            "email"
                        ]
                    },
                    "credentials_number": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1
                    }
                },
                "type": "object"
            },
            "ProgramCredentialPoolUpdateType": {
                "required": [
                    "title",
                    "credentials_number",
                    "alias_allowed"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "credentials_number": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1
                    },
                    "alias_allowed": {
                        "description": "Alias allowed field is only displayed when the pool is of email type.",
                        "type": "boolean",
                        "default": false
                    }
                },
                "type": "object"
            },
            "ProgramHunterInvitationCreateType": {
                "required": [
                    "email_or_username"
                ],
                "properties": {
                    "email_or_username": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProgramHunterMessageType": {
                "required": [
                    "subject",
                    "content",
                    "recipient",
                    "hunters_recipient"
                ],
                "properties": {
                    "subject": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "recipient": {
                        "type": "string",
                        "enum": [
                            "AH",
                            "OH",
                            "NH",
                            "SH"
                        ]
                    },
                    "hunters_recipient": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "ProgramMemberInvitationCreateType": {
                "required": [
                    "email_or_username",
                    "role"
                ],
                "properties": {
                    "email_or_username": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "ROLE_PROGRAM_VIEWER",
                            "ROLE_PROGRAM_ANALYST",
                            "ROLE_PROGRAM_AUDITOR",
                            "ROLE_PROGRAM_MANAGER",
                            "ROLE_PROGRAM_TRIAGER"
                        ]
                    }
                },
                "type": "object"
            },
            "PentestCampaignUpdateType": {
                "required": [
                    "author",
                    "description",
                    "synthesis"
                ],
                "properties": {
                    "author": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "synthesis": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PentestCustomReportType": {
                "required": [
                    "file"
                ],
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "PentestCustomReportResponseDto": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "file": {
                        "$ref": "#\/components\/schemas\/File"
                    },
                    "user": {
                        "$ref": "#\/components\/schemas\/UserEmbed"
                    }
                },
                "type": "object"
            },
            "PentestCampaignLogoType": {
                "required": [
                    "supplier_logo",
                    "company_logo"
                ],
                "properties": {
                    "supplier_logo": {
                        "type": "string",
                        "format": "binary"
                    },
                    "company_logo": {
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "PentestCampaignCustomizeType": {
                "required": [
                    "title",
                    "preamble",
                    "header_layout",
                    "footer_layout"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "preamble": {
                        "type": "string"
                    },
                    "header_layout": {
                        "type": "string",
                        "enum": [
                            "none",
                            "center",
                            "left_right"
                        ]
                    },
                    "footer_layout": {
                        "type": "string",
                        "enum": [
                            "default",
                            "none",
                            "center",
                            "left_right"
                        ]
                    }
                },
                "type": "object"
            },
            "ProgramPentestMethodologyType": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "attachmentFile": {},
                    "deleteAttachmentFile": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ReportDraftAttachmentType": {
                "required": [
                    "file"
                ],
                "properties": {
                    "file": {}
                },
                "type": "object"
            },
            "ReportImportCreateType": {
                "required": [
                    "importFile"
                ],
                "properties": {
                    "importFile": {}
                },
                "type": "object"
            },
            "ReportImportValidateType": {
                "required": [
                    "mapping"
                ],
                "properties": {
                    "mapping": {
                        "$ref": "#\/components\/schemas\/ReportImportMappingType"
                    }
                },
                "type": "object"
            },
            "ProgramReportTemplateType": {
                "required": [
                    "template",
                    "disabled"
                ],
                "properties": {
                    "template": {
                        "type": "string"
                    },
                    "disabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ReportCommentType": {
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "format": "[App\\Entity\\ReportLogAttachment id]",
                        "items": {
                            "type": "string"
                        }
                    },
                    "private": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ReportAssignType": {
                "required": [
                    "message",
                    "assignees"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "format": "[App\\Entity\\ReportLogAttachment id]",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assignees": {
                        "type": "array",
                        "format": "[App\\Entity\\Member id]",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "ReportAttachmentType": {
                "required": [
                    "file"
                ],
                "properties": {
                    "file": {}
                },
                "type": "object"
            },
            "ReportStatusUpdateType": {
                "required": [
                    "message",
                    "status"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "format": "[App\\Entity\\ReportLogAttachment id]",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string",
                        "format": "App\\Entity\\ReportStatus id"
                    }
                },
                "type": "object"
            },
            "ReportRewardType": {
                "required": [
                    "message",
                    "current_password",
                    "reward_type"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "format": "[App\\Entity\\ReportLogAttachment id]",
                        "items": {
                            "type": "string"
                        }
                    },
                    "current_password": {
                        "type": "string"
                    },
                    "reward_type": {
                        "type": "string",
                        "enum": [
                            "B",
                            "G"
                        ]
                    }
                },
                "type": "object"
            },
            "ReportBonusType": {
                "required": [
                    "points"
                ],
                "properties": {
                    "points": {
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "ReportPriorityUpdateType": {
                "required": [
                    "priority"
                ],
                "properties": {
                    "priority": {
                        "type": "string",
                        "enum": [
                            "P1",
                            "P2",
                            "P3",
                            "P4",
                            "P5"
                        ]
                    }
                },
                "type": "object"
            },
            "ReportCvssUpdateType": {
                "required": [
                    "cvss",
                    "metric_comments"
                ],
                "properties": {
                    "cvss": {
                        "example": {
                            "AV": "A",
                            "AC": "H",
                            "PR": "L",
                            "UI": "R",
                            "S": "U",
                            "C": "L",
                            "I": "H",
                            "A": "H"
                        },
                        "allOf": [
                            {
                                "$ref": "#\/components\/schemas\/CvssType"
                            }
                        ]
                    },
                    "metric_comments": {
                        "$ref": "#\/components\/schemas\/CvssCommentType"
                    }
                },
                "type": "object"
            },
            "ReportDetailsUpdateType": {
                "required": [
                    "bug_type",
                    "impact",
                    "end_point",
                    "vulnerable_part",
                    "part_name",
                    "payload_sample",
                    "application_finger_print",
                    "title"
                ],
                "properties": {
                    "bug_type": {
                        "type": "string",
                        "format": "App\\Entity\\BugType id"
                    },
                    "impact": {
                        "type": "string"
                    },
                    "end_point": {
                        "type": "string"
                    },
                    "vulnerable_part": {
                        "type": "string",
                        "enum": [
                            "get-parameter",
                            "post-parameter",
                            "cookie",
                            "header",
                            "path",
                            "http-method",
                            "http-response",
                            "others",
                            "undefined",
                            "other",
                            "put-parameter"
                        ]
                    },
                    "part_name": {
                        "type": "string"
                    },
                    "payload_sample": {
                        "type": "string"
                    },
                    "application_finger_print": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "cve": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportMarkAsType": {
                "required": [
                    "mark_as"
                ],
                "properties": {
                    "mark_as": {
                        "type": "string",
                        "enum": [
                            "R",
                            "U"
                        ]
                    }
                },
                "type": "object"
            },
            "ReportTagsType": {
                "required": [
                    "tags"
                ],
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "ReportBillingTagsType": {
                "required": [
                    "billing_tags"
                ],
                "properties": {
                    "billing_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "ReportPatchStatusUpdateType": {
                "required": [
                    "patch_status",
                    "message"
                ],
                "properties": {
                    "patch_status": {
                        "type": "string",
                        "enum": [
                            "U",
                            "AFP",
                            "IP",
                            "D",
                            "F"
                        ]
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportTrackingStatusUpdateType": {
                "required": [
                    "tracking_status",
                    "message"
                ],
                "properties": {
                    "tracking_status": {
                        "type": "string",
                        "enum": [
                            "U",
                            "AFI",
                            "T"
                        ]
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportTrackerUpdateType": {
                "required": [
                    "message",
                    "tracker_name",
                    "tracker_id",
                    "tracker_url",
                    "tracker_token"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "tracker_name": {
                        "type": "string"
                    },
                    "tracker_id": {
                        "type": "string"
                    },
                    "tracker_url": {
                        "type": "string"
                    },
                    "tracker_token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportTrackerMessageType": {
                "required": [
                    "message",
                    "tracker_name",
                    "tracker_id",
                    "tracker_url"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "format": "[App\\Entity\\ReportLogAttachment id]",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tracker_name": {
                        "type": "string"
                    },
                    "tracker_id": {
                        "type": "string"
                    },
                    "tracker_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportDescriptionUpdateType": {
                "required": [
                    "description"
                ],
                "properties": {
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportTransferFormType": {
                "required": [
                    "program"
                ],
                "properties": {
                    "program": {
                        "type": "string",
                        "format": "App\\Entity\\Program id"
                    }
                },
                "type": "object"
            },
            "ReportAskForFixVerificationStatusUpdateType": {
                "required": [
                    "message",
                    "status"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "format": "[App\\Entity\\ReportLogAttachment id]",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "description": "The values will be available depending on the state of the request and the status of the user:<br> - `CONFIRMED`, `REJECTED` - For hunter and triager, to confirm or reject a fix !<br> - `PENDING`, `CANCELLED` - For manager, to ask or cancel fix verification.",
                        "type": "string",
                        "enum": [
                            "CONFIRMED",
                            "PENDING",
                            "REJECTED",
                            "UNKNOWN",
                            "CANCELLED"
                        ]
                    }
                },
                "type": "object"
            },
            "ReportMemberInvitationCreateType": {
                "required": [
                    "email_or_username",
                    "role"
                ],
                "properties": {
                    "email_or_username": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "ROLE_REPORT_AUDITOR",
                            "ROLE_REPORT_VIEWER"
                        ]
                    }
                },
                "type": "object"
            },
            "AttackSurfaceCweEmbeddedResponseDto": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AttackSurfaceDomainEmbeddedResponseDto": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CveDetailsResponseDto": {
                "properties": {
                    "kev": {
                        "type": "string"
                    },
                    "vendors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "inspection": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "exploitation": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "detection": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/CveDetectionResponseDto"
                        }
                    },
                    "protection": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/CveProtectionResponseDto"
                        }
                    }
                },
                "type": "object"
            },
            "AssetCreateType": {
                "required": [
                    "title",
                    "asset_value",
                    "type"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "asset_value": {
                        "type": "string",
                        "enum": [
                            "VERY_LOW",
                            "LOW",
                            "MEDIUM",
                            "HIGH",
                            "CRITICAL"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "DOMAIN",
                            "CIDR"
                        ]
                    }
                },
                "type": "object"
            },
            "AssetDataResponseDto": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "asset_value": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "FindingDataResponseDto": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "cve_id": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "service": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PhoneNumberType": {
                "required": [
                    "country",
                    "number"
                ],
                "properties": {
                    "country": {
                        "type": "string",
                        "enum": [
                            "US",
                            "AG",
                            "AI",
                            "AS",
                            "BB",
                            "BM",
                            "BS",
                            "CA",
                            "DM",
                            "DO",
                            "GD",
                            "GU",
                            "JM",
                            "KN",
                            "KY",
                            "LC",
                            "MP",
                            "MS",
                            "PR",
                            "SX",
                            "TC",
                            "TT",
                            "VC",
                            "VG",
                            "VI",
                            "RU",
                            "KZ",
                            "EG",
                            "ZA",
                            "GR",
                            "NL",
                            "BE",
                            "FR",
                            "ES",
                            "HU",
                            "IT",
                            "VA",
                            "RO",
                            "CH",
                            "AT",
                            "GB",
                            "GG",
                            "IM",
                            "JE",
                            "DK",
                            "SE",
                            "NO",
                            "SJ",
                            "PL",
                            "DE",
                            "PE",
                            "MX",
                            "CU",
                            "AR",
                            "BR",
                            "CL",
                            "CO",
                            "VE",
                            "MY",
                            "AU",
                            "CC",
                            "CX",
                            "ID",
                            "PH",
                            "NZ",
                            "SG",
                            "TH",
                            "JP",
                            "KR",
                            "VN",
                            "CN",
                            "TR",
                            "IN",
                            "PK",
                            "AF",
                            "LK",
                            "MM",
                            "IR",
                            "SS",
                            "MA",
                            "EH",
                            "DZ",
                            "TN",
                            "LY",
                            "GM",
                            "SN",
                            "MR",
                            "ML",
                            "GN",
                            "CI",
                            "BF",
                            "NE",
                            "TG",
                            "BJ",
                            "MU",
                            "LR",
                            "SL",
                            "GH",
                            "NG",
                            "TD",
                            "CF",
                            "CM",
                            "CV",
                            "ST",
                            "GQ",
                            "GA",
                            "CG",
                            "CD",
                            "AO",
                            "GW",
                            "IO",
                            "SC",
                            "SD",
                            "RW",
                            "ET",
                            "SO",
                            "DJ",
                            "KE",
                            "TZ",
                            "UG",
                            "BI",
                            "MZ",
                            "ZM",
                            "MG",
                            "RE",
                            "YT",
                            "ZW",
                            "NA",
                            "MW",
                            "LS",
                            "BW",
                            "SZ",
                            "KM",
                            "SH",
                            "ER",
                            "AW",
                            "FO",
                            "GL",
                            "GI",
                            "PT",
                            "LU",
                            "IE",
                            "IS",
                            "AL",
                            "MT",
                            "CY",
                            "FI",
                            "AX",
                            "BG",
                            "LT",
                            "LV",
                            "EE",
                            "MD",
                            "AM",
                            "BY",
                            "AD",
                            "MC",
                            "SM",
                            "UA",
                            "RS",
                            "ME",
                            "HR",
                            "SI",
                            "BA",
                            "MK",
                            "CZ",
                            "SK",
                            "LI",
                            "FK",
                            "BZ",
                            "GT",
                            "SV",
                            "HN",
                            "NI",
                            "CR",
                            "PA",
                            "PM",
                            "HT",
                            "GP",
                            "BL",
                            "MF",
                            "BO",
                            "GY",
                            "EC",
                            "GF",
                            "PY",
                            "MQ",
                            "SR",
                            "UY",
                            "CW",
                            "BQ",
                            "TL",
                            "NF",
                            "BN",
                            "NR",
                            "PG",
                            "TO",
                            "SB",
                            "VU",
                            "FJ",
                            "PW",
                            "WF",
                            "CK",
                            "NU",
                            "WS",
                            "KI",
                            "NC",
                            "TV",
                            "PF",
                            "TK",
                            "FM",
                            "MH",
                            "KP",
                            "HK",
                            "MO",
                            "KH",
                            "LA",
                            "BD",
                            "TW",
                            "MV",
                            "LB",
                            "JO",
                            "SY",
                            "IQ",
                            "KW",
                            "SA",
                            "YE",
                            "OM",
                            "PS",
                            "AE",
                            "IL",
                            "BH",
                            "QA",
                            "BT",
                            "MN",
                            "NP",
                            "TJ",
                            "TM",
                            "AZ",
                            "GE",
                            "KG",
                            "UZ"
                        ]
                    },
                    "number": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LegalInformationType": {
                "required": [
                    "legal_type",
                    "vat_number",
                    "record_number",
                    "country"
                ],
                "properties": {
                    "legal_type": {
                        "type": "string"
                    },
                    "vat_number": {
                        "type": "string"
                    },
                    "record_number": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProgramScopeType": {
                "required": [
                    "scope",
                    "scope_type",
                    "asset_value"
                ],
                "properties": {
                    "scope": {
                        "type": "string"
                    },
                    "scope_type": {
                        "type": "string",
                        "enum": [
                            "mobile-application",
                            "mobile-application-android",
                            "mobile-application-ios",
                            "web-application",
                            "api",
                            "application",
                            "ip-address",
                            "other"
                        ]
                    },
                    "asset_value": {
                        "type": "string",
                        "enum": [
                            "VERY_LOW",
                            "LOW",
                            "MEDIUM",
                            "HIGH",
                            "CRITICAL"
                        ]
                    }
                },
                "type": "object"
            },
            "SlaGridResponseDto": {
                "properties": {
                    "level_1": {
                        "type": "integer"
                    },
                    "level_2": {
                        "type": "integer"
                    },
                    "level_3": {
                        "type": "integer"
                    },
                    "level_4": {
                        "type": "integer"
                    },
                    "level_5": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CredentialType": {
                "required": [
                    "login",
                    "password",
                    "username"
                ],
                "properties": {
                    "login": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportImportMappingType": {
                "required": [
                    "application_finger_print",
                    "bug_type",
                    "cve",
                    "impact",
                    "created_at",
                    "cvss_score",
                    "cvss_vector",
                    "end_point",
                    "hunter_email",
                    "part_name",
                    "payload_sample",
                    "priority",
                    "scope",
                    "source",
                    "source_ips",
                    "source_url",
                    "status",
                    "status_at",
                    "tags",
                    "technical_environment",
                    "vulnerable_part",
                    "ask_for_fix_verification_status",
                    "description",
                    "title"
                ],
                "properties": {
                    "application_finger_print": {
                        "type": "string"
                    },
                    "bug_type": {
                        "type": "string"
                    },
                    "cve": {
                        "type": "string"
                    },
                    "impact": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "cvss_score": {
                        "type": "string"
                    },
                    "cvss_vector": {
                        "type": "string"
                    },
                    "end_point": {
                        "type": "string"
                    },
                    "hunter_email": {
                        "type": "string"
                    },
                    "part_name": {
                        "type": "string"
                    },
                    "payload_sample": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "string"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    },
                    "source_ips": {
                        "type": "string"
                    },
                    "source_url": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "status_at": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "string"
                    },
                    "technical_environment": {
                        "type": "string"
                    },
                    "vulnerable_part": {
                        "type": "string"
                    },
                    "ask_for_fix_verification_status": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CvssMetricUpdateResponseDto": {
                "properties": {
                    "old_value": {
                        "type": "string"
                    },
                    "new_value": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CvssType": {
                "properties": {
                    "version": {
                        "type": "string",
                        "default": "3.1",
                        "enum": [
                            "2.0",
                            "3.0",
                            "3.1"
                        ]
                    }
                },
                "type": "object"
            },
            "CvssCommentType": {
                "type": "object"
            },
            "ProgramScopeResponseDto": {
                "properties": {
                    "scope": {
                        "type": "string"
                    },
                    "scope_type": {
                        "type": "string"
                    },
                    "asset_value": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CveDetectionResponseDto": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    },
                    "class": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CveProtectionResponseDto": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    },
                    "class": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "204-NoContent": {
                "description": "No Content"
            },
            "302-Found": {
                "description": "Found",
                "headers": {
                    "location": {
                        "schema": {
                            "description": "url",
                            "type": "string"
                        }
                    }
                }
            },
            "400-ValidationFailed": {
                "description": "Validation failed",
                "content": {
                    "application\/json": {
                        "schema": {
                            "$ref": "#\/components\/schemas\/validation-failed"
                        }
                    }
                }
            },
            "400-BadRequest": {
                "description": "Bad request",
                "content": {
                    "application\/json": {
                        "schema": {
                            "$ref": "#\/components\/schemas\/bad-request"
                        }
                    }
                }
            },
            "403-AccessDenied": {
                "description": "Access Denied",
                "content": {
                    "application\/json": {
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "default": 403
                                },
                                "message": {
                                    "type": "string",
                                    "default": "Access Denied"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "404-NotFound": {
                "description": "Http Not Found",
                "content": {
                    "application\/json": {
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "default": 404
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Not Found"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "429-TooManyRequests": {
                "description": "Too many requests",
                "content": {
                    "application\/json": {
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "default": 429
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Too many requests."
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "503-ServiceUnavailable": {
                "description": "Service unavailable",
                "content": {
                    "application\/json": {
                        "schema": {
                            "$ref": "#\/components\/schemas\/service-unavailable"
                        }
                    }
                }
            },
            "401-UnauthorizedError": {
                "description": "Unauthorized access",
                "content": {
                    "application\/json": {
                        "schema": {
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "default": 401
                                },
                                "message": {
                                    "type": "string",
                                    "default": "Invalid JWT token",
                                    "enum": [
                                        "Bad credentials",
                                        "JWT token not found",
                                        "Invalid JWT token",
                                        "Token is revoked",
                                        "Invalid credentials"
                                    ],
                                    "example": "JWT Token not found"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "PersonalAccessToken": {
                "type": "apiKey",
                "name": "X-AUTH-TOKEN",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "PersonalAccessToken": []
        }
    ]
}